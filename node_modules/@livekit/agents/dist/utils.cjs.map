{"version":3,"sources":["../src/utils.ts"],"sourcesContent":["// SPDX-FileCopyrightText: 2024 LiveKit, Inc.\n//\n// SPDX-License-Identifier: Apache-2.0\nimport type {\n  LocalParticipant,\n  RemoteParticipant,\n  Room,\n  TrackPublication,\n} from '@livekit/rtc-node';\nimport { AudioFrame, TrackSource } from '@livekit/rtc-node';\nimport { EventEmitter, once } from 'node:events';\n\n/** Union of a single and a list of {@link AudioFrame}s */\nexport type AudioBuffer = AudioFrame[] | AudioFrame;\n\n/**\n * Merge one or more {@link AudioFrame}s into a single one.\n *\n * @param buffer Either an {@link AudioFrame} or a list thereof\n * @throws\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\n * | TypeError} if sample rate or channel count are mismatched\n */\nexport const mergeFrames = (buffer: AudioBuffer): AudioFrame => {\n  if (Array.isArray(buffer)) {\n    buffer = buffer as AudioFrame[];\n    if (buffer.length == 0) {\n      throw new TypeError('buffer is empty');\n    }\n\n    const sampleRate = buffer[0]!.sampleRate;\n    const channels = buffer[0]!.channels;\n    let samplesPerChannel = 0;\n    let data = new Int16Array();\n\n    for (const frame of buffer) {\n      if (frame.sampleRate !== sampleRate) {\n        throw new TypeError('sample rate mismatch');\n      }\n\n      if (frame.channels !== channels) {\n        throw new TypeError('channel count mismatch');\n      }\n\n      data = new Int16Array([...data, ...frame.data]);\n      samplesPerChannel += frame.samplesPerChannel;\n    }\n\n    return new AudioFrame(data, sampleRate, channels, samplesPerChannel);\n  }\n\n  return buffer;\n};\n\nexport const findMicroTrackId = (room: Room, identity: string): string => {\n  let p: RemoteParticipant | LocalParticipant | undefined = room.remoteParticipants.get(identity);\n\n  if (identity === room.localParticipant?.identity) {\n    p = room.localParticipant;\n  }\n\n  if (!p) {\n    throw new Error(`participant ${identity} not found`);\n  }\n\n  // find first micro track\n  let trackId: string | undefined;\n  p.trackPublications.forEach((track: TrackPublication) => {\n    if (track.source === TrackSource.SOURCE_MICROPHONE) {\n      trackId = track.sid;\n      return;\n    }\n  });\n\n  if (!trackId) {\n    throw new Error(`participant ${identity} does not have a microphone track`);\n  }\n\n  return trackId;\n};\n\n/** @internal */\nexport class Queue<T> {\n  /** @internal */\n  items: T[] = [];\n  #limit?: number;\n  #events = new EventEmitter();\n\n  constructor(limit?: number) {\n    this.#limit = limit;\n  }\n\n  async get(): Promise<T> {\n    const _get = async (): Promise<T> => {\n      if (this.items.length === 0) {\n        await once(this.#events, 'put');\n      }\n      let item = this.items.shift();\n      if (!item) {\n        item = await _get();\n      }\n      return item;\n    };\n\n    const item = _get();\n    this.#events.emit('get');\n    return item;\n  }\n\n  async put(item: T) {\n    if (this.#limit && this.items.length >= this.#limit) {\n      await once(this.#events, 'get');\n    }\n    this.items.push(item);\n    this.#events.emit('put');\n  }\n}\n\n/** @internal */\nexport class Future {\n  #await: Promise<void>;\n  #resolvePromise!: () => void;\n  #rejectPromise!: (error: Error) => void;\n  #done: boolean = false;\n\n  constructor() {\n    this.#await = new Promise<void>((resolve, reject) => {\n      this.#resolvePromise = resolve;\n      this.#rejectPromise = reject;\n    });\n  }\n\n  get await() {\n    return this.#await;\n  }\n\n  get done() {\n    return this.#done;\n  }\n\n  resolve() {\n    this.#done = true;\n    this.#resolvePromise();\n  }\n\n  reject(error: Error) {\n    this.#done = true;\n    this.#rejectPromise(error);\n  }\n}\n\n/** @internal */\nexport class CancellablePromise<T> {\n  #promise: Promise<T>;\n  #cancelFn: () => void;\n  #isCancelled: boolean = false;\n  #error: Error | null = null;\n\n  constructor(\n    executor: (\n      resolve: (value: T | PromiseLike<T>) => void,\n      reject: (reason?: any) => void,\n      onCancel: (cancelFn: () => void) => void,\n    ) => void,\n  ) {\n    let cancel: () => void;\n\n    this.#promise = new Promise<T>((resolve, reject) => {\n      executor(\n        resolve,\n        (reason) => {\n          this.#error = reason instanceof Error ? reason : new Error(String(reason));\n          reject(reason);\n        },\n        (cancelFn) => {\n          cancel = () => {\n            this.#isCancelled = true;\n            cancelFn();\n          };\n        },\n      );\n    });\n\n    this.#cancelFn = cancel!;\n  }\n\n  get isCancelled(): boolean {\n    return this.#isCancelled;\n  }\n\n  get error(): Error | null {\n    return this.#error;\n  }\n\n  then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | null,\n  ): Promise<TResult1 | TResult2> {\n    return this.#promise.then(onfulfilled, onrejected);\n  }\n\n  catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | Promise<TResult>) | null,\n  ): Promise<T | TResult> {\n    return this.#promise.catch(onrejected);\n  }\n\n  finally(onfinally?: (() => void) | null): Promise<T> {\n    return this.#promise.finally(onfinally);\n  }\n\n  cancel(): void {\n    this.#cancelFn();\n  }\n\n  static from<T>(promise: Promise<T>): CancellablePromise<T> {\n    return new CancellablePromise<T>((resolve, reject) => {\n      promise.then(resolve).catch(reject);\n    });\n  }\n}\n\n/** @internal */\nexport async function gracefullyCancel<T>(promise: CancellablePromise<T>): Promise<void> {\n  if (!promise.isCancelled) {\n    promise.cancel();\n  }\n  try {\n    await promise;\n  } catch (error) {\n    // Ignore the error, as it's expected due to cancellation\n  }\n}\n\n/** @internal */\nexport class AsyncIterableQueue<T> implements AsyncIterableIterator<T> {\n  private static readonly CLOSE_SENTINEL = Symbol('CLOSE_SENTINEL');\n  #queue = new Queue<T | typeof AsyncIterableQueue.CLOSE_SENTINEL>();\n  #closed = false;\n\n  get closed(): boolean {\n    return this.#closed;\n  }\n\n  put(item: T): void {\n    if (this.#closed) {\n      throw new Error('Queue is closed');\n    }\n    this.#queue.put(item);\n  }\n\n  close(): void {\n    this.#closed = true;\n    this.#queue.put(AsyncIterableQueue.CLOSE_SENTINEL);\n  }\n\n  async next(): Promise<IteratorResult<T>> {\n    if (this.#closed && this.#queue.items.length === 0) {\n      return { value: undefined, done: true };\n    }\n    const item = await this.#queue.get();\n    if (item === AsyncIterableQueue.CLOSE_SENTINEL && this.#closed) {\n      return { value: undefined, done: true };\n    }\n    return { value: item as T, done: false };\n  }\n\n  [Symbol.asyncIterator](): AsyncIterableQueue<T> {\n    return this;\n  }\n}\n\n/** @internal */\nexport class ExpFilter {\n  #alpha: number;\n  #max?: number;\n  #filtered?: number = undefined;\n\n  constructor(alpha: number, max?: number) {\n    this.#alpha = alpha;\n    this.#max = max;\n  }\n\n  reset(alpha?: number) {\n    if (alpha) {\n      this.#alpha = alpha;\n    }\n    this.#filtered = undefined;\n  }\n\n  apply(exp: number, sample: number): number {\n    if (this.#filtered) {\n      const a = this.#alpha ** exp;\n      this.#filtered = a * this.#filtered + (1 - a) * sample;\n    } else {\n      this.#filtered = sample;\n    }\n\n    if (this.#max && this.#filtered > this.#max) {\n      this.#filtered = this.#max;\n    }\n\n    return this.#filtered;\n  }\n\n  get filtered(): number | undefined {\n    return this.#filtered;\n  }\n\n  set alpha(alpha: number) {\n    this.#alpha = alpha;\n  }\n}\n\n/** @internal */\nexport class AudioEnergyFilter {\n  #cooldownSeconds: number;\n  #cooldown: number;\n\n  constructor(cooldownSeconds = 1) {\n    this.#cooldownSeconds = cooldownSeconds;\n    this.#cooldown = cooldownSeconds;\n  }\n\n  pushFrame(frame: AudioFrame): boolean {\n    const arr = Float32Array.from(frame.data, (x) => x / 32768);\n    const rms = (arr.map((x) => x ** 2).reduce((acc, x) => acc + x) / arr.length) ** 0.5;\n    if (rms > 0.004) {\n      this.#cooldown = this.#cooldownSeconds;\n      return true;\n    }\n\n    const durationSeconds = frame.samplesPerChannel / frame.sampleRate;\n    this.#cooldown -= durationSeconds;\n    if (this.#cooldown > 0) {\n      return true;\n    }\n\n    return false;\n  }\n}\n"],"mappings":"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","names":["item"]}