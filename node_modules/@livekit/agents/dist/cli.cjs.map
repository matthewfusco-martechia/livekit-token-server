{"version":3,"sources":["../src/cli.ts","../../node_modules/.pnpm/tsup@8.3.5_@microsoft+api-extractor@7.43.7_@types+node@22.5.5__postcss@8.4.38_tsx@4.19.2_typescript@5.4.5/node_modules/tsup/assets/cjs_shims.js"],"sourcesContent":["// SPDX-FileCopyrightText: 2024 LiveKit, Inc.\n//\n// SPDX-License-Identifier: Apache-2.0\nimport { Command, Option } from 'commander';\nimport type { EventEmitter } from 'node:events';\nimport { initializeLogger, log } from './log.js';\nimport { version } from './version.js';\nimport { Worker, WorkerOptions } from './worker.js';\n\ntype CliArgs = {\n  opts: WorkerOptions;\n  production: boolean;\n  watch: boolean;\n  event?: EventEmitter;\n  room?: string;\n  participantIdentity?: string;\n};\n\nconst runWorker = async (args: CliArgs) => {\n  initializeLogger({ pretty: !args.production, level: args.opts.logLevel });\n  const logger = log();\n\n  // though `production` is defined in WorkerOptions, it will always be overriddden by CLI.\n  const { production: _, ...opts } = args.opts; // eslint-disable-line @typescript-eslint/no-unused-vars\n  const worker = new Worker(new WorkerOptions({ production: args.production, ...opts }));\n\n  if (args.room) {\n    worker.event.once('worker_registered', () => {\n      logger.info(`connecting to room ${args.room}`);\n      worker.simulateJob(args.room!, args.participantIdentity);\n    });\n  }\n\n  process.once('SIGINT', async () => {\n    // allow C-c C-c for force interrupt\n    process.once('SIGINT', () => {\n      logger.info('worker closed forcefully');\n      process.exit(130); // SIGINT exit code\n    });\n    if (args.production) {\n      await worker.drain();\n    }\n    await worker.close();\n    logger.info('worker closed');\n    process.exit(130); // SIGINT exit code\n  });\n\n  try {\n    await worker.run();\n  } catch {\n    logger.fatal('worker failed');\n    process.exit(1);\n  }\n};\n\n/**\n * Exposes a CLI for creating a new worker, in development or production mode.\n *\n * @param opts - Options to launch the worker with\n * @example\n * ```\n * if (process.argv[1] === fileURLToPath(import.meta.url)) {\n *   cli.runApp(new WorkerOptions({ agent: import.meta.filename }));\n * }\n * ```\n */\nexport const runApp = (opts: WorkerOptions) => {\n  const program = new Command()\n    .name('agents')\n    .description('LiveKit Agents CLI')\n    .version(version)\n    .addOption(\n      new Option('--log-level <level>', 'Set the logging level')\n        .choices(['trace', 'debug', 'info', 'warn', 'error', 'fatal'])\n        .default('info')\n        .env('LOG_LEVEL'),\n    )\n    .addOption(\n      new Option('--url <string>', 'LiveKit server or Cloud project websocket URL').env(\n        'LIVEKIT_URL',\n      ),\n    )\n    .addOption(\n      new Option('--api-key <string>', \"LiveKit server or Cloud project's API key\").env(\n        'LIVEKIT_API_KEY',\n      ),\n    )\n    .addOption(\n      new Option('--api-secret <string>', \"LiveKit server or Cloud project's API secret\").env(\n        'LIVEKIT_API_SECRET',\n      ),\n    )\n    .action(() => {\n      if (\n        // do not run CLI if origin file is agents/ipc/job_main.js\n        process.argv[1] !== new URL('ipc/job_main.js', import.meta.url).pathname &&\n        process.argv.length < 3\n      ) {\n        program.help();\n      }\n    });\n\n  program\n    .command('start')\n    .description('Start the worker in production mode')\n    .action(() => {\n      const options = program.optsWithGlobals();\n      opts.wsURL = options.url || opts.wsURL;\n      opts.apiKey = options.apiKey || opts.apiKey;\n      opts.apiSecret = options.apiSecret || opts.apiSecret;\n      opts.logLevel = options.logLevel || opts.logLevel;\n      runWorker({\n        opts,\n        production: true,\n        watch: false,\n      });\n    });\n\n  program\n    .command('dev')\n    .description('Start the worker in development mode')\n    .addOption(\n      new Option('--log-level <level>', 'Set the logging level')\n        .choices(['trace', 'debug', 'info', 'warn', 'error', 'fatal'])\n        .default('debug')\n        .env('LOG_LEVEL'),\n    )\n    .action(() => {\n      const options = program.optsWithGlobals();\n      opts.wsURL = options.url || opts.wsURL;\n      opts.apiKey = options.apiKey || opts.apiKey;\n      opts.apiSecret = options.apiSecret || opts.apiSecret;\n      opts.logLevel = options.logLevel || opts.logLevel;\n      runWorker({\n        opts,\n        production: false,\n        watch: false,\n      });\n    });\n\n  program\n    .command('connect')\n    .description('Connect to a specific room')\n    .requiredOption('--room <string>', 'Room name to connect to')\n    .option('--participant-identity <string>', 'Identity of user to listen to')\n    .addOption(\n      new Option('--log-level <level>', 'Set the logging level')\n        .choices(['trace', 'debug', 'info', 'warn', 'error', 'fatal'])\n        .default('debug')\n        .env('LOG_LEVEL'),\n    )\n    .action((...[, command]) => {\n      const options = command.optsWithGlobals();\n      opts.wsURL = options.url || opts.wsURL;\n      opts.apiKey = options.apiKey || opts.apiKey;\n      opts.apiSecret = options.apiSecret || opts.apiSecret;\n      opts.logLevel = options.logLevel || opts.logLevel;\n      runWorker({\n        opts,\n        production: false,\n        watch: false,\n        room: options.room,\n        participantIdentity: options.participantIdentity,\n      });\n    });\n\n  program.parse();\n};\n","// Shim globals in cjs bundle\n// There's a weird bug that esbuild will always inject importMetaUrl\n// if we export it as `const importMetaUrl = ... __filename ...`\n// But using a function will not cause this issue\n\nconst getImportMetaUrl = () =>\n  typeof document === 'undefined'\n    ? new URL(`file:${__filename}`).href\n    : (document.currentScript && document.currentScript.src) ||\n      new URL('main.js', document.baseURI).href\n\nexport const importMetaUrl = /* @__PURE__ */ getImportMetaUrl()\n"],"mappings":"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","names":[]}