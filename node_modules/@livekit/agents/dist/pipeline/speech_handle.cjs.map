{"version":3,"sources":["../../src/pipeline/speech_handle.ts"],"sourcesContent":["// SPDX-FileCopyrightText: 2024 LiveKit, Inc.\n//\n// SPDX-License-Identifier: Apache-2.0\nimport { randomUUID } from 'crypto';\nimport type { ChatMessage, LLMStream } from '../llm/index.js';\nimport { AsyncIterableQueue, Future } from '../utils.js';\nimport type { SynthesisHandle } from './agent_output.js';\n\nexport class SpeechHandle {\n  #id: string;\n  #allowInterruptions: boolean;\n  #addToChatCtx: boolean;\n  #isReply: boolean;\n  #userQuestion: string;\n  #userCommitted = false;\n  #initFut = new Future();\n  #doneFut = new Future();\n  #speechCommitted = false;\n  #source?: string | LLMStream | AsyncIterable<string>;\n  #synthesisHandle?: SynthesisHandle;\n  #initialized = false;\n  #fncNestedDepth: number;\n  #fncExtraToolsMesages?: ChatMessage[];\n  #nestedSpeechHandles: SpeechHandle[] = [];\n  #nestedSpeechChanged = new AsyncIterableQueue<void>();\n  #nestedSpeechFinished = false;\n\n  constructor(\n    id: string,\n    allowInterruptions: boolean,\n    addToChatCtx: boolean,\n    isReply: boolean,\n    userQuestion: string,\n    fncNestedDepth = 0,\n    extraToolsMessages: ChatMessage[] | undefined = undefined,\n  ) {\n    this.#id = id;\n    this.#allowInterruptions = allowInterruptions;\n    this.#addToChatCtx = addToChatCtx;\n    this.#isReply = isReply;\n    this.#userQuestion = userQuestion;\n    this.#fncNestedDepth = fncNestedDepth;\n    this.#fncExtraToolsMesages = extraToolsMessages;\n  }\n\n  static createAssistantReply(\n    allowInterruptions: boolean,\n    addToChatCtx: boolean,\n    userQuestion: string,\n  ): SpeechHandle {\n    return new SpeechHandle(randomUUID(), allowInterruptions, addToChatCtx, true, userQuestion);\n  }\n\n  static createAssistantSpeech(allowInterruptions: boolean, addToChatCtx: boolean): SpeechHandle {\n    return new SpeechHandle(randomUUID(), allowInterruptions, addToChatCtx, false, '');\n  }\n\n  static createToolSpeech(\n    allowInterruptions: boolean,\n    addToChatCtx: boolean,\n    fncNestedDepth: number,\n    extraToolsMessages: ChatMessage[],\n  ): SpeechHandle {\n    return new SpeechHandle(\n      randomUUID(),\n      allowInterruptions,\n      addToChatCtx,\n      false,\n      '',\n      fncNestedDepth,\n      extraToolsMessages,\n    );\n  }\n\n  async waitForInitialization() {\n    await this.#initFut.await;\n  }\n\n  initialize(source: string | LLMStream | AsyncIterable<string>, synthesisHandle: SynthesisHandle) {\n    if (this.interrupted) {\n      throw new Error('speech was interrupted');\n    }\n\n    this.#source = source;\n    this.#synthesisHandle = synthesisHandle;\n    this.#initialized = true;\n    this.#initFut.resolve();\n  }\n\n  markUserCommitted() {\n    this.#userCommitted = true;\n  }\n\n  markSpeechCommitted() {\n    this.#speechCommitted = true;\n  }\n\n  get userCommitted(): boolean {\n    return this.#userCommitted;\n  }\n\n  get speechCommitted(): boolean {\n    return this.#speechCommitted;\n  }\n\n  get id(): string {\n    return this.#id;\n  }\n\n  get allowInterruptions(): boolean {\n    return this.#allowInterruptions;\n  }\n\n  get addToChatCtx(): boolean {\n    return this.#addToChatCtx;\n  }\n\n  get source(): string | LLMStream | AsyncIterable<string> {\n    if (!this.#source) {\n      throw new Error('speech not initialized');\n    }\n    return this.#source;\n  }\n\n  get synthesisHandle(): SynthesisHandle {\n    if (!this.#synthesisHandle) {\n      throw new Error('speech not initialized');\n    }\n    return this.#synthesisHandle;\n  }\n\n  set synthesisHandle(handle: SynthesisHandle) {\n    this.#synthesisHandle = handle;\n  }\n\n  get initialized(): boolean {\n    return this.#initialized;\n  }\n\n  get isReply(): boolean {\n    return this.#isReply;\n  }\n\n  get userQuestion(): string {\n    return this.#userQuestion;\n  }\n\n  get interrupted(): boolean {\n    return !!this.#synthesisHandle?.interrupted;\n  }\n\n  get fncNestedDepth(): number {\n    return this.#fncNestedDepth;\n  }\n\n  get extraToolsMessages(): ChatMessage[] | undefined {\n    return this.#fncExtraToolsMesages;\n  }\n\n  addNestedSpeech(handle: SpeechHandle) {\n    this.#nestedSpeechHandles.push(handle);\n    this.#nestedSpeechChanged.put();\n  }\n\n  get nestedSpeechHandles(): SpeechHandle[] {\n    return this.#nestedSpeechHandles;\n  }\n\n  async nestedSpeechChanged() {\n    await this.#nestedSpeechChanged.next();\n  }\n\n  get nestedSpeechFinished(): boolean {\n    return this.#nestedSpeechFinished;\n  }\n\n  markNestedSpeechFinished() {\n    this.#nestedSpeechFinished = true;\n  }\n\n  join() {\n    return this.#doneFut.await;\n  }\n\n  setDone() {\n    this.#doneFut.resolve();\n  }\n\n  interrupt() {\n    if (!this.#allowInterruptions) {\n      throw new Error('interruptions are not allowed');\n    }\n    this.cancel();\n  }\n\n  cancel() {\n    this.#initFut.reject(new Error());\n    this.#nestedSpeechChanged.close();\n    this.#synthesisHandle?.interrupt();\n  }\n}\n"],"mappings":"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","names":[]}