{"version":3,"sources":["../../src/pipeline/agent_output.ts"],"sourcesContent":["// SPDX-FileCopyrightText: 2024 LiveKit, Inc.\n//\n// SPDX-License-Identifier: Apache-2.0\nimport type { AudioFrame } from '@livekit/rtc-node';\nimport { log } from '../log.js';\nimport type { TextAudioSynchronizer } from '../transcription.js';\nimport { SynthesizeStream, type TTS } from '../tts/index.js';\nimport { AsyncIterableQueue, CancellablePromise, Future, gracefullyCancel } from '../utils.js';\nimport type { AgentPlayout, PlayoutHandle } from './agent_playout.js';\n\nexport type SpeechSource = AsyncIterable<string> | string | Promise<string>;\n\nexport class SynthesisHandle {\n  static readonly FLUSH_SENTINEL = Symbol('FLUSH_SENTINEL');\n\n  #speechId: string;\n  text?: string;\n  ttsSource: SpeechSource;\n  #agentPlayout: AgentPlayout;\n  tts: TTS;\n  queue = new AsyncIterableQueue<AudioFrame | typeof SynthesisHandle.FLUSH_SENTINEL>();\n  #playHandle?: PlayoutHandle;\n  intFut = new Future();\n  #logger = log();\n  synchronizer: TextAudioSynchronizer;\n\n  constructor(\n    speechId: string,\n    ttsSource: SpeechSource,\n    agentPlayout: AgentPlayout,\n    tts: TTS,\n    synchronizer: TextAudioSynchronizer,\n  ) {\n    this.#speechId = speechId;\n    this.ttsSource = ttsSource;\n    this.#agentPlayout = agentPlayout;\n    this.tts = tts;\n    this.synchronizer = synchronizer;\n  }\n\n  get speechId(): string {\n    return this.#speechId;\n  }\n\n  get validated(): boolean {\n    return !!this.#playHandle;\n  }\n\n  get interrupted(): boolean {\n    return this.intFut.done;\n  }\n\n  get playHandle(): PlayoutHandle | undefined {\n    return this.#playHandle;\n  }\n\n  /** Validate the speech for playout. */\n  play(): PlayoutHandle {\n    if (this.interrupted) {\n      throw new Error('synthesis was interrupted');\n    }\n\n    this.#playHandle = this.#agentPlayout.play(this.#speechId, this.queue, this.synchronizer);\n    return this.#playHandle;\n  }\n\n  /** Interrupt the speech. */\n  interrupt() {\n    if (this.interrupted) {\n      return;\n    }\n\n    this.#logger.child({ speechId: this.#speechId }).debug('interrupting synthesis/playout');\n    this.#playHandle?.interrupt();\n    this.intFut.resolve();\n  }\n}\n\nexport class AgentOutput {\n  #agentPlayout: AgentPlayout;\n  #tts: TTS;\n  #tasks: CancellablePromise<void>[] = [];\n\n  constructor(agentPlayout: AgentPlayout, tts: TTS) {\n    this.#agentPlayout = agentPlayout;\n    this.#tts = tts;\n  }\n\n  get playout(): AgentPlayout {\n    return this.#agentPlayout;\n  }\n\n  async close() {\n    this.#tasks.forEach((task) => task.cancel());\n    await Promise.all(this.#tasks);\n  }\n\n  synthesize(\n    speechId: string,\n    ttsSource: SpeechSource,\n    synchronizer: TextAudioSynchronizer,\n  ): SynthesisHandle {\n    const handle = new SynthesisHandle(\n      speechId,\n      ttsSource,\n      this.#agentPlayout,\n      this.#tts,\n      synchronizer,\n    );\n    const task = this.#synthesize(handle);\n    this.#tasks.push(task);\n    task.finally(() => this.#tasks.splice(this.#tasks.indexOf(task)));\n    return handle;\n  }\n\n  #synthesize(handle: SynthesisHandle): CancellablePromise<void> {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    return new CancellablePromise(async (resolve, _, onCancel) => {\n      const ttsSource = await handle.ttsSource;\n      let task: CancellablePromise<string>;\n      if (typeof ttsSource === 'string') {\n        task = stringSynthesisTask(ttsSource, handle);\n      } else {\n        task = streamSynthesisTask(ttsSource, handle);\n      }\n\n      onCancel(() => {\n        gracefullyCancel(task);\n      });\n\n      try {\n        await Promise.any([task, handle.intFut.await]);\n      } finally {\n        if (handle.intFut.done) {\n          gracefullyCancel(task);\n        } else {\n          task.then((text) => {\n            handle.text = text;\n          });\n        }\n      }\n\n      resolve();\n    });\n  }\n}\n\nconst stringSynthesisTask = (text: string, handle: SynthesisHandle): CancellablePromise<string> => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  return new CancellablePromise(async (resolve, _, onCancel) => {\n    let cancelled = false;\n    onCancel(() => {\n      cancelled = true;\n    });\n\n    const ttsStream = handle.tts.stream();\n    ttsStream.pushText(text);\n    handle.synchronizer.pushText(text);\n    handle.synchronizer.markTextSegmentEnd();\n    ttsStream.flush();\n    ttsStream.endInput();\n    for await (const audio of ttsStream) {\n      if (cancelled || audio === SynthesizeStream.END_OF_STREAM) {\n        break;\n      }\n      handle.queue.put(audio.frame);\n    }\n    handle.queue.put(SynthesisHandle.FLUSH_SENTINEL);\n\n    resolve(text);\n  });\n};\n\nconst streamSynthesisTask = (\n  stream: AsyncIterable<string>,\n  handle: SynthesisHandle,\n): CancellablePromise<string> => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  return new CancellablePromise(async (resolve, _, onCancel) => {\n    let fullText = '';\n    let cancelled = false;\n    onCancel(() => {\n      cancelled = true;\n    });\n\n    const ttsStream = handle.tts.stream();\n    const readGeneratedAudio = async () => {\n      for await (const audio of ttsStream) {\n        if (cancelled) break;\n        if (audio === SynthesizeStream.END_OF_STREAM) {\n          break;\n        }\n        handle.queue.put(audio.frame);\n      }\n      handle.queue.put(SynthesisHandle.FLUSH_SENTINEL);\n    };\n    readGeneratedAudio();\n\n    for await (const text of stream) {\n      fullText += text;\n      if (cancelled) break;\n      handle.synchronizer.pushText(text);\n      ttsStream.pushText(text);\n    }\n    handle.synchronizer.markTextSegmentEnd();\n\n    // end the audio queue early if there is no actual text to turn into speech\n    if (!fullText || fullText.trim().length === 0) {\n      cancelled = true;\n      handle.queue.put(SynthesisHandle.FLUSH_SENTINEL);\n    }\n    ttsStream.flush();\n    ttsStream.endInput();\n\n    resolve(fullText);\n  });\n};\n"],"mappings":"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","names":[]}