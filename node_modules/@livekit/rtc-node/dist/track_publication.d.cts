import { FfiHandle } from './napi/native.d.cjs';
import { EncryptionType } from './proto/e2ee_pb.cjs';
import { TrackPublicationInfo, OwnedTrackPublication, TrackKind, TrackSource } from './proto/track_pb.cjs';
import { Track } from './track.cjs';
import '@bufbuild/protobuf';
import './proto/stats_pb.cjs';
import './proto/handle_pb.cjs';
import './audio_source.cjs';
import './audio_frame.cjs';
import './proto/audio_frame_pb.cjs';
import './video_source.cjs';
import './proto/video_frame_pb.cjs';
import './video_frame.cjs';

declare abstract class TrackPublication {
    /** @internal */
    ffiHandle: FfiHandle;
    /** @internal */
    info?: TrackPublicationInfo;
    track?: Track;
    constructor(ownedInfo: OwnedTrackPublication);
    get sid(): string | undefined;
    get name(): string | undefined;
    get kind(): TrackKind | undefined;
    get source(): TrackSource | undefined;
    get simulcasted(): boolean | undefined;
    get width(): number | undefined;
    get height(): number | undefined;
    get mimeType(): string | undefined;
    get muted(): boolean | undefined;
    get encryptionType(): EncryptionType | undefined;
}
declare class LocalTrackPublication extends TrackPublication {
    private firstSubscription;
    private firstSubscriptionResolver;
    constructor(ownedInfo: OwnedTrackPublication);
    waitForSubscription(): Promise<void>;
    /** @internal */
    resolveFirstSubscription(): void;
}
declare class RemoteTrackPublication extends TrackPublication {
    subscribed: boolean;
    constructor(ownedInfo: OwnedTrackPublication);
    setSubscribed(subscribed: boolean): void;
}

export { LocalTrackPublication, RemoteTrackPublication, TrackPublication };
