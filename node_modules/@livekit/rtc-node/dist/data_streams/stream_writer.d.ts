import { a as BaseStreamInfo, c as TextStreamInfo, b as ByteStreamInfo } from '../stream_reader-DWUV4eJB.js';
import { WritableStream } from 'node:stream/web';
import '../proto/room_pb.js';
import '@bufbuild/protobuf';
import '../proto/participant_pb.js';
import '../proto/handle_pb.js';
import '../proto/track_pb.js';
import '../proto/stats_pb.js';
import '../proto/e2ee_pb.js';
import '../proto/video_frame_pb.js';

declare class BaseStreamWriter<T, InfoType extends BaseStreamInfo> {
    protected writableStream: WritableStream<T>;
    protected defaultWriter: WritableStreamDefaultWriter<T>;
    protected onClose?: () => void;
    readonly info: InfoType;
    constructor(writableStream: WritableStream<T>, info: InfoType, onClose?: () => void);
    write(chunk: T): Promise<void>;
    close(): Promise<void>;
}
declare class TextStreamWriter extends BaseStreamWriter<string, TextStreamInfo> {
}
declare class ByteStreamWriter extends BaseStreamWriter<Uint8Array, ByteStreamInfo> {
}

export { ByteStreamWriter, TextStreamWriter };
