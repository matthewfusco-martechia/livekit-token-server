import { Message, proto2 } from "@bufbuild/protobuf";
import { RtcStats } from "./stats_pb.js";
import { EncryptionType } from "./e2ee_pb.js";
import { FfiOwnedHandle } from "./handle_pb.js";
var TrackKind = /* @__PURE__ */ ((TrackKind2) => {
  TrackKind2[TrackKind2["KIND_UNKNOWN"] = 0] = "KIND_UNKNOWN";
  TrackKind2[TrackKind2["KIND_AUDIO"] = 1] = "KIND_AUDIO";
  TrackKind2[TrackKind2["KIND_VIDEO"] = 2] = "KIND_VIDEO";
  return TrackKind2;
})(TrackKind || {});
proto2.util.setEnumType(TrackKind, "livekit.proto.TrackKind", [
  { no: 0, name: "KIND_UNKNOWN" },
  { no: 1, name: "KIND_AUDIO" },
  { no: 2, name: "KIND_VIDEO" }
]);
var TrackSource = /* @__PURE__ */ ((TrackSource2) => {
  TrackSource2[TrackSource2["SOURCE_UNKNOWN"] = 0] = "SOURCE_UNKNOWN";
  TrackSource2[TrackSource2["SOURCE_CAMERA"] = 1] = "SOURCE_CAMERA";
  TrackSource2[TrackSource2["SOURCE_MICROPHONE"] = 2] = "SOURCE_MICROPHONE";
  TrackSource2[TrackSource2["SOURCE_SCREENSHARE"] = 3] = "SOURCE_SCREENSHARE";
  TrackSource2[TrackSource2["SOURCE_SCREENSHARE_AUDIO"] = 4] = "SOURCE_SCREENSHARE_AUDIO";
  return TrackSource2;
})(TrackSource || {});
proto2.util.setEnumType(TrackSource, "livekit.proto.TrackSource", [
  { no: 0, name: "SOURCE_UNKNOWN" },
  { no: 1, name: "SOURCE_CAMERA" },
  { no: 2, name: "SOURCE_MICROPHONE" },
  { no: 3, name: "SOURCE_SCREENSHARE" },
  { no: 4, name: "SOURCE_SCREENSHARE_AUDIO" }
]);
var StreamState = /* @__PURE__ */ ((StreamState2) => {
  StreamState2[StreamState2["STATE_UNKNOWN"] = 0] = "STATE_UNKNOWN";
  StreamState2[StreamState2["STATE_ACTIVE"] = 1] = "STATE_ACTIVE";
  StreamState2[StreamState2["STATE_PAUSED"] = 2] = "STATE_PAUSED";
  return StreamState2;
})(StreamState || {});
proto2.util.setEnumType(StreamState, "livekit.proto.StreamState", [
  { no: 0, name: "STATE_UNKNOWN" },
  { no: 1, name: "STATE_ACTIVE" },
  { no: 2, name: "STATE_PAUSED" }
]);
const _CreateVideoTrackRequest = class _CreateVideoTrackRequest extends Message {
  constructor(data) {
    super();
    proto2.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _CreateVideoTrackRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _CreateVideoTrackRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _CreateVideoTrackRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto2.util.equals(_CreateVideoTrackRequest, a, b);
  }
};
_CreateVideoTrackRequest.runtime = proto2;
_CreateVideoTrackRequest.typeName = "livekit.proto.CreateVideoTrackRequest";
_CreateVideoTrackRequest.fields = proto2.util.newFieldList(() => [
  { no: 1, name: "name", kind: "scalar", T: 9, req: true },
  { no: 2, name: "source_handle", kind: "scalar", T: 4, req: true }
]);
let CreateVideoTrackRequest = _CreateVideoTrackRequest;
const _CreateVideoTrackResponse = class _CreateVideoTrackResponse extends Message {
  constructor(data) {
    super();
    proto2.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _CreateVideoTrackResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _CreateVideoTrackResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _CreateVideoTrackResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto2.util.equals(_CreateVideoTrackResponse, a, b);
  }
};
_CreateVideoTrackResponse.runtime = proto2;
_CreateVideoTrackResponse.typeName = "livekit.proto.CreateVideoTrackResponse";
_CreateVideoTrackResponse.fields = proto2.util.newFieldList(() => [
  { no: 1, name: "track", kind: "message", T: OwnedTrack, req: true }
]);
let CreateVideoTrackResponse = _CreateVideoTrackResponse;
const _CreateAudioTrackRequest = class _CreateAudioTrackRequest extends Message {
  constructor(data) {
    super();
    proto2.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _CreateAudioTrackRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _CreateAudioTrackRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _CreateAudioTrackRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto2.util.equals(_CreateAudioTrackRequest, a, b);
  }
};
_CreateAudioTrackRequest.runtime = proto2;
_CreateAudioTrackRequest.typeName = "livekit.proto.CreateAudioTrackRequest";
_CreateAudioTrackRequest.fields = proto2.util.newFieldList(() => [
  { no: 1, name: "name", kind: "scalar", T: 9, req: true },
  { no: 2, name: "source_handle", kind: "scalar", T: 4, req: true }
]);
let CreateAudioTrackRequest = _CreateAudioTrackRequest;
const _CreateAudioTrackResponse = class _CreateAudioTrackResponse extends Message {
  constructor(data) {
    super();
    proto2.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _CreateAudioTrackResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _CreateAudioTrackResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _CreateAudioTrackResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto2.util.equals(_CreateAudioTrackResponse, a, b);
  }
};
_CreateAudioTrackResponse.runtime = proto2;
_CreateAudioTrackResponse.typeName = "livekit.proto.CreateAudioTrackResponse";
_CreateAudioTrackResponse.fields = proto2.util.newFieldList(() => [
  { no: 1, name: "track", kind: "message", T: OwnedTrack, req: true }
]);
let CreateAudioTrackResponse = _CreateAudioTrackResponse;
const _GetStatsRequest = class _GetStatsRequest extends Message {
  constructor(data) {
    super();
    proto2.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _GetStatsRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _GetStatsRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _GetStatsRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto2.util.equals(_GetStatsRequest, a, b);
  }
};
_GetStatsRequest.runtime = proto2;
_GetStatsRequest.typeName = "livekit.proto.GetStatsRequest";
_GetStatsRequest.fields = proto2.util.newFieldList(() => [
  { no: 1, name: "track_handle", kind: "scalar", T: 4, req: true }
]);
let GetStatsRequest = _GetStatsRequest;
const _GetStatsResponse = class _GetStatsResponse extends Message {
  constructor(data) {
    super();
    proto2.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _GetStatsResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _GetStatsResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _GetStatsResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto2.util.equals(_GetStatsResponse, a, b);
  }
};
_GetStatsResponse.runtime = proto2;
_GetStatsResponse.typeName = "livekit.proto.GetStatsResponse";
_GetStatsResponse.fields = proto2.util.newFieldList(() => [
  { no: 1, name: "async_id", kind: "scalar", T: 4, req: true }
]);
let GetStatsResponse = _GetStatsResponse;
const _GetStatsCallback = class _GetStatsCallback extends Message {
  constructor(data) {
    super();
    /**
     * @generated from field: repeated livekit.proto.RtcStats stats = 3;
     */
    this.stats = [];
    proto2.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _GetStatsCallback().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _GetStatsCallback().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _GetStatsCallback().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto2.util.equals(_GetStatsCallback, a, b);
  }
};
_GetStatsCallback.runtime = proto2;
_GetStatsCallback.typeName = "livekit.proto.GetStatsCallback";
_GetStatsCallback.fields = proto2.util.newFieldList(() => [
  { no: 1, name: "async_id", kind: "scalar", T: 4, req: true },
  { no: 2, name: "error", kind: "scalar", T: 9, opt: true },
  { no: 3, name: "stats", kind: "message", T: RtcStats, repeated: true }
]);
let GetStatsCallback = _GetStatsCallback;
const _TrackEvent = class _TrackEvent extends Message {
  constructor(data) {
    super();
    proto2.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _TrackEvent().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _TrackEvent().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _TrackEvent().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto2.util.equals(_TrackEvent, a, b);
  }
};
_TrackEvent.runtime = proto2;
_TrackEvent.typeName = "livekit.proto.TrackEvent";
_TrackEvent.fields = proto2.util.newFieldList(() => []);
let TrackEvent = _TrackEvent;
const _TrackPublicationInfo = class _TrackPublicationInfo extends Message {
  constructor(data) {
    super();
    proto2.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _TrackPublicationInfo().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _TrackPublicationInfo().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _TrackPublicationInfo().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto2.util.equals(_TrackPublicationInfo, a, b);
  }
};
_TrackPublicationInfo.runtime = proto2;
_TrackPublicationInfo.typeName = "livekit.proto.TrackPublicationInfo";
_TrackPublicationInfo.fields = proto2.util.newFieldList(() => [
  { no: 1, name: "sid", kind: "scalar", T: 9, req: true },
  { no: 2, name: "name", kind: "scalar", T: 9, req: true },
  { no: 3, name: "kind", kind: "enum", T: proto2.getEnumType(TrackKind), req: true },
  { no: 4, name: "source", kind: "enum", T: proto2.getEnumType(TrackSource), req: true },
  { no: 5, name: "simulcasted", kind: "scalar", T: 8, req: true },
  { no: 6, name: "width", kind: "scalar", T: 13, req: true },
  { no: 7, name: "height", kind: "scalar", T: 13, req: true },
  { no: 8, name: "mime_type", kind: "scalar", T: 9, req: true },
  { no: 9, name: "muted", kind: "scalar", T: 8, req: true },
  { no: 10, name: "remote", kind: "scalar", T: 8, req: true },
  { no: 11, name: "encryption_type", kind: "enum", T: proto2.getEnumType(EncryptionType), req: true }
]);
let TrackPublicationInfo = _TrackPublicationInfo;
const _OwnedTrackPublication = class _OwnedTrackPublication extends Message {
  constructor(data) {
    super();
    proto2.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _OwnedTrackPublication().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _OwnedTrackPublication().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _OwnedTrackPublication().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto2.util.equals(_OwnedTrackPublication, a, b);
  }
};
_OwnedTrackPublication.runtime = proto2;
_OwnedTrackPublication.typeName = "livekit.proto.OwnedTrackPublication";
_OwnedTrackPublication.fields = proto2.util.newFieldList(() => [
  { no: 1, name: "handle", kind: "message", T: FfiOwnedHandle, req: true },
  { no: 2, name: "info", kind: "message", T: TrackPublicationInfo, req: true }
]);
let OwnedTrackPublication = _OwnedTrackPublication;
const _TrackInfo = class _TrackInfo extends Message {
  constructor(data) {
    super();
    proto2.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _TrackInfo().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _TrackInfo().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _TrackInfo().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto2.util.equals(_TrackInfo, a, b);
  }
};
_TrackInfo.runtime = proto2;
_TrackInfo.typeName = "livekit.proto.TrackInfo";
_TrackInfo.fields = proto2.util.newFieldList(() => [
  { no: 1, name: "sid", kind: "scalar", T: 9, req: true },
  { no: 2, name: "name", kind: "scalar", T: 9, req: true },
  { no: 3, name: "kind", kind: "enum", T: proto2.getEnumType(TrackKind), req: true },
  { no: 4, name: "stream_state", kind: "enum", T: proto2.getEnumType(StreamState), req: true },
  { no: 5, name: "muted", kind: "scalar", T: 8, req: true },
  { no: 6, name: "remote", kind: "scalar", T: 8, req: true }
]);
let TrackInfo = _TrackInfo;
const _OwnedTrack = class _OwnedTrack extends Message {
  constructor(data) {
    super();
    proto2.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _OwnedTrack().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _OwnedTrack().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _OwnedTrack().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto2.util.equals(_OwnedTrack, a, b);
  }
};
_OwnedTrack.runtime = proto2;
_OwnedTrack.typeName = "livekit.proto.OwnedTrack";
_OwnedTrack.fields = proto2.util.newFieldList(() => [
  { no: 1, name: "handle", kind: "message", T: FfiOwnedHandle, req: true },
  { no: 2, name: "info", kind: "message", T: TrackInfo, req: true }
]);
let OwnedTrack = _OwnedTrack;
const _LocalTrackMuteRequest = class _LocalTrackMuteRequest extends Message {
  constructor(data) {
    super();
    proto2.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _LocalTrackMuteRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _LocalTrackMuteRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _LocalTrackMuteRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto2.util.equals(_LocalTrackMuteRequest, a, b);
  }
};
_LocalTrackMuteRequest.runtime = proto2;
_LocalTrackMuteRequest.typeName = "livekit.proto.LocalTrackMuteRequest";
_LocalTrackMuteRequest.fields = proto2.util.newFieldList(() => [
  { no: 1, name: "track_handle", kind: "scalar", T: 4, req: true },
  { no: 2, name: "mute", kind: "scalar", T: 8, req: true }
]);
let LocalTrackMuteRequest = _LocalTrackMuteRequest;
const _LocalTrackMuteResponse = class _LocalTrackMuteResponse extends Message {
  constructor(data) {
    super();
    proto2.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _LocalTrackMuteResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _LocalTrackMuteResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _LocalTrackMuteResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto2.util.equals(_LocalTrackMuteResponse, a, b);
  }
};
_LocalTrackMuteResponse.runtime = proto2;
_LocalTrackMuteResponse.typeName = "livekit.proto.LocalTrackMuteResponse";
_LocalTrackMuteResponse.fields = proto2.util.newFieldList(() => [
  { no: 1, name: "muted", kind: "scalar", T: 8, req: true }
]);
let LocalTrackMuteResponse = _LocalTrackMuteResponse;
const _EnableRemoteTrackRequest = class _EnableRemoteTrackRequest extends Message {
  constructor(data) {
    super();
    proto2.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _EnableRemoteTrackRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _EnableRemoteTrackRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _EnableRemoteTrackRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto2.util.equals(_EnableRemoteTrackRequest, a, b);
  }
};
_EnableRemoteTrackRequest.runtime = proto2;
_EnableRemoteTrackRequest.typeName = "livekit.proto.EnableRemoteTrackRequest";
_EnableRemoteTrackRequest.fields = proto2.util.newFieldList(() => [
  { no: 1, name: "track_handle", kind: "scalar", T: 4, req: true },
  { no: 2, name: "enabled", kind: "scalar", T: 8, req: true }
]);
let EnableRemoteTrackRequest = _EnableRemoteTrackRequest;
const _EnableRemoteTrackResponse = class _EnableRemoteTrackResponse extends Message {
  constructor(data) {
    super();
    proto2.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _EnableRemoteTrackResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _EnableRemoteTrackResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _EnableRemoteTrackResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto2.util.equals(_EnableRemoteTrackResponse, a, b);
  }
};
_EnableRemoteTrackResponse.runtime = proto2;
_EnableRemoteTrackResponse.typeName = "livekit.proto.EnableRemoteTrackResponse";
_EnableRemoteTrackResponse.fields = proto2.util.newFieldList(() => [
  { no: 1, name: "enabled", kind: "scalar", T: 8, req: true }
]);
let EnableRemoteTrackResponse = _EnableRemoteTrackResponse;
const _SetTrackSubscriptionPermissionsRequest = class _SetTrackSubscriptionPermissionsRequest extends Message {
  constructor(data) {
    super();
    /**
     * @generated from field: repeated livekit.proto.ParticipantTrackPermission permissions = 3;
     */
    this.permissions = [];
    proto2.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _SetTrackSubscriptionPermissionsRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _SetTrackSubscriptionPermissionsRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _SetTrackSubscriptionPermissionsRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto2.util.equals(_SetTrackSubscriptionPermissionsRequest, a, b);
  }
};
_SetTrackSubscriptionPermissionsRequest.runtime = proto2;
_SetTrackSubscriptionPermissionsRequest.typeName = "livekit.proto.SetTrackSubscriptionPermissionsRequest";
_SetTrackSubscriptionPermissionsRequest.fields = proto2.util.newFieldList(() => [
  { no: 1, name: "local_participant_handle", kind: "scalar", T: 4, req: true },
  { no: 2, name: "all_participants_allowed", kind: "scalar", T: 8, req: true },
  { no: 3, name: "permissions", kind: "message", T: ParticipantTrackPermission, repeated: true }
]);
let SetTrackSubscriptionPermissionsRequest = _SetTrackSubscriptionPermissionsRequest;
const _ParticipantTrackPermission = class _ParticipantTrackPermission extends Message {
  constructor(data) {
    super();
    /**
     * List of track sids to grant permission to.
     *
     * @generated from field: repeated string allowed_track_sids = 3;
     */
    this.allowedTrackSids = [];
    proto2.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _ParticipantTrackPermission().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _ParticipantTrackPermission().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _ParticipantTrackPermission().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto2.util.equals(_ParticipantTrackPermission, a, b);
  }
};
_ParticipantTrackPermission.runtime = proto2;
_ParticipantTrackPermission.typeName = "livekit.proto.ParticipantTrackPermission";
_ParticipantTrackPermission.fields = proto2.util.newFieldList(() => [
  { no: 1, name: "participant_identity", kind: "scalar", T: 9, req: true },
  { no: 2, name: "allow_all", kind: "scalar", T: 8, opt: true },
  { no: 3, name: "allowed_track_sids", kind: "scalar", T: 9, repeated: true }
]);
let ParticipantTrackPermission = _ParticipantTrackPermission;
const _SetTrackSubscriptionPermissionsResponse = class _SetTrackSubscriptionPermissionsResponse extends Message {
  constructor(data) {
    super();
    proto2.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _SetTrackSubscriptionPermissionsResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _SetTrackSubscriptionPermissionsResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _SetTrackSubscriptionPermissionsResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto2.util.equals(_SetTrackSubscriptionPermissionsResponse, a, b);
  }
};
_SetTrackSubscriptionPermissionsResponse.runtime = proto2;
_SetTrackSubscriptionPermissionsResponse.typeName = "livekit.proto.SetTrackSubscriptionPermissionsResponse";
_SetTrackSubscriptionPermissionsResponse.fields = proto2.util.newFieldList(() => []);
let SetTrackSubscriptionPermissionsResponse = _SetTrackSubscriptionPermissionsResponse;
export {
  CreateAudioTrackRequest,
  CreateAudioTrackResponse,
  CreateVideoTrackRequest,
  CreateVideoTrackResponse,
  EnableRemoteTrackRequest,
  EnableRemoteTrackResponse,
  GetStatsCallback,
  GetStatsRequest,
  GetStatsResponse,
  LocalTrackMuteRequest,
  LocalTrackMuteResponse,
  OwnedTrack,
  OwnedTrackPublication,
  ParticipantTrackPermission,
  SetTrackSubscriptionPermissionsRequest,
  SetTrackSubscriptionPermissionsResponse,
  StreamState,
  TrackEvent,
  TrackInfo,
  TrackKind,
  TrackPublicationInfo,
  TrackSource
};
//# sourceMappingURL=track_pb.js.map