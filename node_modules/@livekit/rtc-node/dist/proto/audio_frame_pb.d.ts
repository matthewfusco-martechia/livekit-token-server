import { Message, PartialMessage, proto2, FieldList, BinaryReadOptions, JsonValue, JsonReadOptions, PlainMessage } from '@bufbuild/protobuf';
import { TrackSource } from './track_pb.js';
import { FfiOwnedHandle } from './handle_pb.js';
import './stats_pb.js';
import './e2ee_pb.js';

/**
 * @generated from enum livekit.proto.SoxResamplerDataType
 */
declare enum SoxResamplerDataType {
    /**
     * TODO(theomonnom): support other datatypes (shouldn't really be needed)
     *
     * @generated from enum value: SOXR_DATATYPE_INT16I = 0;
     */
    SOXR_DATATYPE_INT16I = 0,
    /**
     * @generated from enum value: SOXR_DATATYPE_INT16S = 1;
     */
    SOXR_DATATYPE_INT16S = 1
}
/**
 * @generated from enum livekit.proto.SoxQualityRecipe
 */
declare enum SoxQualityRecipe {
    /**
     * @generated from enum value: SOXR_QUALITY_QUICK = 0;
     */
    SOXR_QUALITY_QUICK = 0,
    /**
     * @generated from enum value: SOXR_QUALITY_LOW = 1;
     */
    SOXR_QUALITY_LOW = 1,
    /**
     * @generated from enum value: SOXR_QUALITY_MEDIUM = 2;
     */
    SOXR_QUALITY_MEDIUM = 2,
    /**
     * @generated from enum value: SOXR_QUALITY_HIGH = 3;
     */
    SOXR_QUALITY_HIGH = 3,
    /**
     * @generated from enum value: SOXR_QUALITY_VERYHIGH = 4;
     */
    SOXR_QUALITY_VERYHIGH = 4
}
/**
 * @generated from enum livekit.proto.SoxFlagBits
 */
declare enum SoxFlagBits {
    /**
     * 1 << 0
     *
     * @generated from enum value: SOXR_ROLLOFF_SMALL = 0;
     */
    SOXR_ROLLOFF_SMALL = 0,
    /**
     * 1 << 1
     *
     * @generated from enum value: SOXR_ROLLOFF_MEDIUM = 1;
     */
    SOXR_ROLLOFF_MEDIUM = 1,
    /**
     * 1 << 2
     *
     * @generated from enum value: SOXR_ROLLOFF_NONE = 2;
     */
    SOXR_ROLLOFF_NONE = 2,
    /**
     * 1 << 3
     *
     * @generated from enum value: SOXR_HIGH_PREC_CLOCK = 3;
     */
    SOXR_HIGH_PREC_CLOCK = 3,
    /**
     * 1 << 4
     *
     * @generated from enum value: SOXR_DOUBLE_PRECISION = 4;
     */
    SOXR_DOUBLE_PRECISION = 4,
    /**
     * 1 << 5
     *
     * @generated from enum value: SOXR_VR = 5;
     */
    SOXR_VR = 5
}
/**
 * @generated from enum livekit.proto.AudioStreamType
 */
declare enum AudioStreamType {
    /**
     * @generated from enum value: AUDIO_STREAM_NATIVE = 0;
     */
    AUDIO_STREAM_NATIVE = 0,
    /**
     * @generated from enum value: AUDIO_STREAM_HTML = 1;
     */
    AUDIO_STREAM_HTML = 1
}
/**
 * @generated from enum livekit.proto.AudioSourceType
 */
declare enum AudioSourceType {
    /**
     * @generated from enum value: AUDIO_SOURCE_NATIVE = 0;
     */
    AUDIO_SOURCE_NATIVE = 0
}
/**
 * Create a new AudioStream
 * AudioStream is used to receive audio frames from a track
 *
 * @generated from message livekit.proto.NewAudioStreamRequest
 */
declare class NewAudioStreamRequest extends Message<NewAudioStreamRequest> {
    /**
     * @generated from field: required uint64 track_handle = 1;
     */
    trackHandle?: bigint;
    /**
     * @generated from field: required livekit.proto.AudioStreamType type = 2;
     */
    type?: AudioStreamType;
    /**
     * @generated from field: optional uint32 sample_rate = 3;
     */
    sampleRate?: number;
    /**
     * @generated from field: optional uint32 num_channels = 4;
     */
    numChannels?: number;
    constructor(data?: PartialMessage<NewAudioStreamRequest>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.NewAudioStreamRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NewAudioStreamRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NewAudioStreamRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NewAudioStreamRequest;
    static equals(a: NewAudioStreamRequest | PlainMessage<NewAudioStreamRequest> | undefined, b: NewAudioStreamRequest | PlainMessage<NewAudioStreamRequest> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.NewAudioStreamResponse
 */
declare class NewAudioStreamResponse extends Message<NewAudioStreamResponse> {
    /**
     * @generated from field: required livekit.proto.OwnedAudioStream stream = 1;
     */
    stream?: OwnedAudioStream;
    constructor(data?: PartialMessage<NewAudioStreamResponse>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.NewAudioStreamResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NewAudioStreamResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NewAudioStreamResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NewAudioStreamResponse;
    static equals(a: NewAudioStreamResponse | PlainMessage<NewAudioStreamResponse> | undefined, b: NewAudioStreamResponse | PlainMessage<NewAudioStreamResponse> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.AudioStreamFromParticipantRequest
 */
declare class AudioStreamFromParticipantRequest extends Message<AudioStreamFromParticipantRequest> {
    /**
     * @generated from field: required uint64 participant_handle = 1;
     */
    participantHandle?: bigint;
    /**
     * @generated from field: required livekit.proto.AudioStreamType type = 2;
     */
    type?: AudioStreamType;
    /**
     * @generated from field: optional livekit.proto.TrackSource track_source = 3;
     */
    trackSource?: TrackSource;
    /**
     * @generated from field: optional uint32 sample_rate = 5;
     */
    sampleRate?: number;
    /**
     * @generated from field: optional uint32 num_channels = 6;
     */
    numChannels?: number;
    constructor(data?: PartialMessage<AudioStreamFromParticipantRequest>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.AudioStreamFromParticipantRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AudioStreamFromParticipantRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AudioStreamFromParticipantRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AudioStreamFromParticipantRequest;
    static equals(a: AudioStreamFromParticipantRequest | PlainMessage<AudioStreamFromParticipantRequest> | undefined, b: AudioStreamFromParticipantRequest | PlainMessage<AudioStreamFromParticipantRequest> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.AudioStreamFromParticipantResponse
 */
declare class AudioStreamFromParticipantResponse extends Message<AudioStreamFromParticipantResponse> {
    /**
     * @generated from field: required livekit.proto.OwnedAudioStream stream = 1;
     */
    stream?: OwnedAudioStream;
    constructor(data?: PartialMessage<AudioStreamFromParticipantResponse>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.AudioStreamFromParticipantResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AudioStreamFromParticipantResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AudioStreamFromParticipantResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AudioStreamFromParticipantResponse;
    static equals(a: AudioStreamFromParticipantResponse | PlainMessage<AudioStreamFromParticipantResponse> | undefined, b: AudioStreamFromParticipantResponse | PlainMessage<AudioStreamFromParticipantResponse> | undefined): boolean;
}
/**
 * Create a new AudioSource
 *
 * @generated from message livekit.proto.NewAudioSourceRequest
 */
declare class NewAudioSourceRequest extends Message<NewAudioSourceRequest> {
    /**
     * @generated from field: required livekit.proto.AudioSourceType type = 1;
     */
    type?: AudioSourceType;
    /**
     * @generated from field: optional livekit.proto.AudioSourceOptions options = 2;
     */
    options?: AudioSourceOptions;
    /**
     * @generated from field: required uint32 sample_rate = 3;
     */
    sampleRate?: number;
    /**
     * @generated from field: required uint32 num_channels = 4;
     */
    numChannels?: number;
    /**
     * @generated from field: optional uint32 queue_size_ms = 5;
     */
    queueSizeMs?: number;
    constructor(data?: PartialMessage<NewAudioSourceRequest>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.NewAudioSourceRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NewAudioSourceRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NewAudioSourceRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NewAudioSourceRequest;
    static equals(a: NewAudioSourceRequest | PlainMessage<NewAudioSourceRequest> | undefined, b: NewAudioSourceRequest | PlainMessage<NewAudioSourceRequest> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.NewAudioSourceResponse
 */
declare class NewAudioSourceResponse extends Message<NewAudioSourceResponse> {
    /**
     * @generated from field: required livekit.proto.OwnedAudioSource source = 1;
     */
    source?: OwnedAudioSource;
    constructor(data?: PartialMessage<NewAudioSourceResponse>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.NewAudioSourceResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NewAudioSourceResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NewAudioSourceResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NewAudioSourceResponse;
    static equals(a: NewAudioSourceResponse | PlainMessage<NewAudioSourceResponse> | undefined, b: NewAudioSourceResponse | PlainMessage<NewAudioSourceResponse> | undefined): boolean;
}
/**
 * Push a frame to an AudioSource
 * The data provided must be available as long as the client receive the callback.
 *
 * @generated from message livekit.proto.CaptureAudioFrameRequest
 */
declare class CaptureAudioFrameRequest extends Message<CaptureAudioFrameRequest> {
    /**
     * @generated from field: required uint64 source_handle = 1;
     */
    sourceHandle?: bigint;
    /**
     * @generated from field: required livekit.proto.AudioFrameBufferInfo buffer = 2;
     */
    buffer?: AudioFrameBufferInfo;
    constructor(data?: PartialMessage<CaptureAudioFrameRequest>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.CaptureAudioFrameRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CaptureAudioFrameRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CaptureAudioFrameRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CaptureAudioFrameRequest;
    static equals(a: CaptureAudioFrameRequest | PlainMessage<CaptureAudioFrameRequest> | undefined, b: CaptureAudioFrameRequest | PlainMessage<CaptureAudioFrameRequest> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.CaptureAudioFrameResponse
 */
declare class CaptureAudioFrameResponse extends Message<CaptureAudioFrameResponse> {
    /**
     * @generated from field: required uint64 async_id = 1;
     */
    asyncId?: bigint;
    constructor(data?: PartialMessage<CaptureAudioFrameResponse>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.CaptureAudioFrameResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CaptureAudioFrameResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CaptureAudioFrameResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CaptureAudioFrameResponse;
    static equals(a: CaptureAudioFrameResponse | PlainMessage<CaptureAudioFrameResponse> | undefined, b: CaptureAudioFrameResponse | PlainMessage<CaptureAudioFrameResponse> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.CaptureAudioFrameCallback
 */
declare class CaptureAudioFrameCallback extends Message<CaptureAudioFrameCallback> {
    /**
     * @generated from field: required uint64 async_id = 1;
     */
    asyncId?: bigint;
    /**
     * @generated from field: optional string error = 2;
     */
    error?: string;
    constructor(data?: PartialMessage<CaptureAudioFrameCallback>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.CaptureAudioFrameCallback";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CaptureAudioFrameCallback;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CaptureAudioFrameCallback;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CaptureAudioFrameCallback;
    static equals(a: CaptureAudioFrameCallback | PlainMessage<CaptureAudioFrameCallback> | undefined, b: CaptureAudioFrameCallback | PlainMessage<CaptureAudioFrameCallback> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.ClearAudioBufferRequest
 */
declare class ClearAudioBufferRequest extends Message<ClearAudioBufferRequest> {
    /**
     * @generated from field: required uint64 source_handle = 1;
     */
    sourceHandle?: bigint;
    constructor(data?: PartialMessage<ClearAudioBufferRequest>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.ClearAudioBufferRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClearAudioBufferRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClearAudioBufferRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClearAudioBufferRequest;
    static equals(a: ClearAudioBufferRequest | PlainMessage<ClearAudioBufferRequest> | undefined, b: ClearAudioBufferRequest | PlainMessage<ClearAudioBufferRequest> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.ClearAudioBufferResponse
 */
declare class ClearAudioBufferResponse extends Message<ClearAudioBufferResponse> {
    constructor(data?: PartialMessage<ClearAudioBufferResponse>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.ClearAudioBufferResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClearAudioBufferResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClearAudioBufferResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClearAudioBufferResponse;
    static equals(a: ClearAudioBufferResponse | PlainMessage<ClearAudioBufferResponse> | undefined, b: ClearAudioBufferResponse | PlainMessage<ClearAudioBufferResponse> | undefined): boolean;
}
/**
 * Create a new AudioResampler
 *
 * @generated from message livekit.proto.NewAudioResamplerRequest
 */
declare class NewAudioResamplerRequest extends Message<NewAudioResamplerRequest> {
    constructor(data?: PartialMessage<NewAudioResamplerRequest>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.NewAudioResamplerRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NewAudioResamplerRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NewAudioResamplerRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NewAudioResamplerRequest;
    static equals(a: NewAudioResamplerRequest | PlainMessage<NewAudioResamplerRequest> | undefined, b: NewAudioResamplerRequest | PlainMessage<NewAudioResamplerRequest> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.NewAudioResamplerResponse
 */
declare class NewAudioResamplerResponse extends Message<NewAudioResamplerResponse> {
    /**
     * @generated from field: required livekit.proto.OwnedAudioResampler resampler = 1;
     */
    resampler?: OwnedAudioResampler;
    constructor(data?: PartialMessage<NewAudioResamplerResponse>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.NewAudioResamplerResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NewAudioResamplerResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NewAudioResamplerResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NewAudioResamplerResponse;
    static equals(a: NewAudioResamplerResponse | PlainMessage<NewAudioResamplerResponse> | undefined, b: NewAudioResamplerResponse | PlainMessage<NewAudioResamplerResponse> | undefined): boolean;
}
/**
 * Remix and resample an audio frame
 *
 * @generated from message livekit.proto.RemixAndResampleRequest
 */
declare class RemixAndResampleRequest extends Message<RemixAndResampleRequest> {
    /**
     * @generated from field: required uint64 resampler_handle = 1;
     */
    resamplerHandle?: bigint;
    /**
     * @generated from field: required livekit.proto.AudioFrameBufferInfo buffer = 2;
     */
    buffer?: AudioFrameBufferInfo;
    /**
     * @generated from field: required uint32 num_channels = 3;
     */
    numChannels?: number;
    /**
     * @generated from field: required uint32 sample_rate = 4;
     */
    sampleRate?: number;
    constructor(data?: PartialMessage<RemixAndResampleRequest>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.RemixAndResampleRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemixAndResampleRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemixAndResampleRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemixAndResampleRequest;
    static equals(a: RemixAndResampleRequest | PlainMessage<RemixAndResampleRequest> | undefined, b: RemixAndResampleRequest | PlainMessage<RemixAndResampleRequest> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.RemixAndResampleResponse
 */
declare class RemixAndResampleResponse extends Message<RemixAndResampleResponse> {
    /**
     * @generated from field: required livekit.proto.OwnedAudioFrameBuffer buffer = 1;
     */
    buffer?: OwnedAudioFrameBuffer;
    constructor(data?: PartialMessage<RemixAndResampleResponse>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.RemixAndResampleResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemixAndResampleResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemixAndResampleResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemixAndResampleResponse;
    static equals(a: RemixAndResampleResponse | PlainMessage<RemixAndResampleResponse> | undefined, b: RemixAndResampleResponse | PlainMessage<RemixAndResampleResponse> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.NewSoxResamplerRequest
 */
declare class NewSoxResamplerRequest extends Message<NewSoxResamplerRequest> {
    /**
     * @generated from field: required double input_rate = 1;
     */
    inputRate?: number;
    /**
     * @generated from field: required double output_rate = 2;
     */
    outputRate?: number;
    /**
     * @generated from field: required uint32 num_channels = 3;
     */
    numChannels?: number;
    /**
     * @generated from field: required livekit.proto.SoxResamplerDataType input_data_type = 4;
     */
    inputDataType?: SoxResamplerDataType;
    /**
     * @generated from field: required livekit.proto.SoxResamplerDataType output_data_type = 5;
     */
    outputDataType?: SoxResamplerDataType;
    /**
     * @generated from field: required livekit.proto.SoxQualityRecipe quality_recipe = 6;
     */
    qualityRecipe?: SoxQualityRecipe;
    /**
     * @generated from field: optional uint32 flags = 7;
     */
    flags?: number;
    constructor(data?: PartialMessage<NewSoxResamplerRequest>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.NewSoxResamplerRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NewSoxResamplerRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NewSoxResamplerRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NewSoxResamplerRequest;
    static equals(a: NewSoxResamplerRequest | PlainMessage<NewSoxResamplerRequest> | undefined, b: NewSoxResamplerRequest | PlainMessage<NewSoxResamplerRequest> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.NewSoxResamplerResponse
 */
declare class NewSoxResamplerResponse extends Message<NewSoxResamplerResponse> {
    /**
     * @generated from oneof livekit.proto.NewSoxResamplerResponse.message
     */
    message: {
        /**
         * @generated from field: livekit.proto.OwnedSoxResampler resampler = 1;
         */
        value: OwnedSoxResampler;
        case: "resampler";
    } | {
        /**
         * @generated from field: string error = 2;
         */
        value: string;
        case: "error";
    } | {
        case: undefined;
        value?: undefined;
    };
    constructor(data?: PartialMessage<NewSoxResamplerResponse>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.NewSoxResamplerResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NewSoxResamplerResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NewSoxResamplerResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NewSoxResamplerResponse;
    static equals(a: NewSoxResamplerResponse | PlainMessage<NewSoxResamplerResponse> | undefined, b: NewSoxResamplerResponse | PlainMessage<NewSoxResamplerResponse> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.PushSoxResamplerRequest
 */
declare class PushSoxResamplerRequest extends Message<PushSoxResamplerRequest> {
    /**
     * @generated from field: required uint64 resampler_handle = 1;
     */
    resamplerHandle?: bigint;
    /**
     * *const i16
     *
     * @generated from field: required uint64 data_ptr = 2;
     */
    dataPtr?: bigint;
    /**
     * in bytes
     *
     * @generated from field: required uint32 size = 3;
     */
    size?: number;
    constructor(data?: PartialMessage<PushSoxResamplerRequest>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.PushSoxResamplerRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PushSoxResamplerRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PushSoxResamplerRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PushSoxResamplerRequest;
    static equals(a: PushSoxResamplerRequest | PlainMessage<PushSoxResamplerRequest> | undefined, b: PushSoxResamplerRequest | PlainMessage<PushSoxResamplerRequest> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.PushSoxResamplerResponse
 */
declare class PushSoxResamplerResponse extends Message<PushSoxResamplerResponse> {
    /**
     * *const i16 (could be null)
     *
     * @generated from field: required uint64 output_ptr = 1;
     */
    outputPtr?: bigint;
    /**
     * in bytes
     *
     * @generated from field: required uint32 size = 2;
     */
    size?: number;
    /**
     * @generated from field: optional string error = 3;
     */
    error?: string;
    constructor(data?: PartialMessage<PushSoxResamplerResponse>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.PushSoxResamplerResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PushSoxResamplerResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PushSoxResamplerResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PushSoxResamplerResponse;
    static equals(a: PushSoxResamplerResponse | PlainMessage<PushSoxResamplerResponse> | undefined, b: PushSoxResamplerResponse | PlainMessage<PushSoxResamplerResponse> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.FlushSoxResamplerRequest
 */
declare class FlushSoxResamplerRequest extends Message<FlushSoxResamplerRequest> {
    /**
     * @generated from field: required uint64 resampler_handle = 1;
     */
    resamplerHandle?: bigint;
    constructor(data?: PartialMessage<FlushSoxResamplerRequest>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.FlushSoxResamplerRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FlushSoxResamplerRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FlushSoxResamplerRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FlushSoxResamplerRequest;
    static equals(a: FlushSoxResamplerRequest | PlainMessage<FlushSoxResamplerRequest> | undefined, b: FlushSoxResamplerRequest | PlainMessage<FlushSoxResamplerRequest> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.FlushSoxResamplerResponse
 */
declare class FlushSoxResamplerResponse extends Message<FlushSoxResamplerResponse> {
    /**
     * *const i16 (could be null)
     *
     * @generated from field: required uint64 output_ptr = 1;
     */
    outputPtr?: bigint;
    /**
     * in bytes
     *
     * @generated from field: required uint32 size = 2;
     */
    size?: number;
    /**
     * @generated from field: optional string error = 3;
     */
    error?: string;
    constructor(data?: PartialMessage<FlushSoxResamplerResponse>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.FlushSoxResamplerResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FlushSoxResamplerResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FlushSoxResamplerResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FlushSoxResamplerResponse;
    static equals(a: FlushSoxResamplerResponse | PlainMessage<FlushSoxResamplerResponse> | undefined, b: FlushSoxResamplerResponse | PlainMessage<FlushSoxResamplerResponse> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.AudioFrameBufferInfo
 */
declare class AudioFrameBufferInfo extends Message<AudioFrameBufferInfo> {
    /**
     * *const i16
     *
     * @generated from field: required uint64 data_ptr = 1;
     */
    dataPtr?: bigint;
    /**
     * @generated from field: required uint32 num_channels = 2;
     */
    numChannels?: number;
    /**
     * @generated from field: required uint32 sample_rate = 3;
     */
    sampleRate?: number;
    /**
     * @generated from field: required uint32 samples_per_channel = 4;
     */
    samplesPerChannel?: number;
    constructor(data?: PartialMessage<AudioFrameBufferInfo>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.AudioFrameBufferInfo";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AudioFrameBufferInfo;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AudioFrameBufferInfo;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AudioFrameBufferInfo;
    static equals(a: AudioFrameBufferInfo | PlainMessage<AudioFrameBufferInfo> | undefined, b: AudioFrameBufferInfo | PlainMessage<AudioFrameBufferInfo> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.OwnedAudioFrameBuffer
 */
declare class OwnedAudioFrameBuffer extends Message<OwnedAudioFrameBuffer> {
    /**
     * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;
     */
    handle?: FfiOwnedHandle;
    /**
     * @generated from field: required livekit.proto.AudioFrameBufferInfo info = 2;
     */
    info?: AudioFrameBufferInfo;
    constructor(data?: PartialMessage<OwnedAudioFrameBuffer>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.OwnedAudioFrameBuffer";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OwnedAudioFrameBuffer;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OwnedAudioFrameBuffer;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OwnedAudioFrameBuffer;
    static equals(a: OwnedAudioFrameBuffer | PlainMessage<OwnedAudioFrameBuffer> | undefined, b: OwnedAudioFrameBuffer | PlainMessage<OwnedAudioFrameBuffer> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.AudioStreamInfo
 */
declare class AudioStreamInfo extends Message<AudioStreamInfo> {
    /**
     * @generated from field: required livekit.proto.AudioStreamType type = 1;
     */
    type?: AudioStreamType;
    constructor(data?: PartialMessage<AudioStreamInfo>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.AudioStreamInfo";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AudioStreamInfo;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AudioStreamInfo;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AudioStreamInfo;
    static equals(a: AudioStreamInfo | PlainMessage<AudioStreamInfo> | undefined, b: AudioStreamInfo | PlainMessage<AudioStreamInfo> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.OwnedAudioStream
 */
declare class OwnedAudioStream extends Message<OwnedAudioStream> {
    /**
     * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;
     */
    handle?: FfiOwnedHandle;
    /**
     * @generated from field: required livekit.proto.AudioStreamInfo info = 2;
     */
    info?: AudioStreamInfo;
    constructor(data?: PartialMessage<OwnedAudioStream>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.OwnedAudioStream";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OwnedAudioStream;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OwnedAudioStream;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OwnedAudioStream;
    static equals(a: OwnedAudioStream | PlainMessage<OwnedAudioStream> | undefined, b: OwnedAudioStream | PlainMessage<OwnedAudioStream> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.AudioStreamEvent
 */
declare class AudioStreamEvent extends Message<AudioStreamEvent> {
    /**
     * @generated from field: required uint64 stream_handle = 1;
     */
    streamHandle?: bigint;
    /**
     * @generated from oneof livekit.proto.AudioStreamEvent.message
     */
    message: {
        /**
         * @generated from field: livekit.proto.AudioFrameReceived frame_received = 2;
         */
        value: AudioFrameReceived;
        case: "frameReceived";
    } | {
        /**
         * @generated from field: livekit.proto.AudioStreamEOS eos = 3;
         */
        value: AudioStreamEOS;
        case: "eos";
    } | {
        case: undefined;
        value?: undefined;
    };
    constructor(data?: PartialMessage<AudioStreamEvent>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.AudioStreamEvent";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AudioStreamEvent;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AudioStreamEvent;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AudioStreamEvent;
    static equals(a: AudioStreamEvent | PlainMessage<AudioStreamEvent> | undefined, b: AudioStreamEvent | PlainMessage<AudioStreamEvent> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.AudioFrameReceived
 */
declare class AudioFrameReceived extends Message<AudioFrameReceived> {
    /**
     * @generated from field: required livekit.proto.OwnedAudioFrameBuffer frame = 1;
     */
    frame?: OwnedAudioFrameBuffer;
    constructor(data?: PartialMessage<AudioFrameReceived>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.AudioFrameReceived";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AudioFrameReceived;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AudioFrameReceived;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AudioFrameReceived;
    static equals(a: AudioFrameReceived | PlainMessage<AudioFrameReceived> | undefined, b: AudioFrameReceived | PlainMessage<AudioFrameReceived> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.AudioStreamEOS
 */
declare class AudioStreamEOS extends Message<AudioStreamEOS> {
    constructor(data?: PartialMessage<AudioStreamEOS>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.AudioStreamEOS";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AudioStreamEOS;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AudioStreamEOS;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AudioStreamEOS;
    static equals(a: AudioStreamEOS | PlainMessage<AudioStreamEOS> | undefined, b: AudioStreamEOS | PlainMessage<AudioStreamEOS> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.AudioSourceOptions
 */
declare class AudioSourceOptions extends Message<AudioSourceOptions> {
    /**
     * @generated from field: required bool echo_cancellation = 1;
     */
    echoCancellation?: boolean;
    /**
     * @generated from field: required bool noise_suppression = 2;
     */
    noiseSuppression?: boolean;
    /**
     * @generated from field: required bool auto_gain_control = 3;
     */
    autoGainControl?: boolean;
    constructor(data?: PartialMessage<AudioSourceOptions>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.AudioSourceOptions";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AudioSourceOptions;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AudioSourceOptions;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AudioSourceOptions;
    static equals(a: AudioSourceOptions | PlainMessage<AudioSourceOptions> | undefined, b: AudioSourceOptions | PlainMessage<AudioSourceOptions> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.AudioSourceInfo
 */
declare class AudioSourceInfo extends Message<AudioSourceInfo> {
    /**
     * @generated from field: required livekit.proto.AudioSourceType type = 2;
     */
    type?: AudioSourceType;
    constructor(data?: PartialMessage<AudioSourceInfo>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.AudioSourceInfo";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AudioSourceInfo;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AudioSourceInfo;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AudioSourceInfo;
    static equals(a: AudioSourceInfo | PlainMessage<AudioSourceInfo> | undefined, b: AudioSourceInfo | PlainMessage<AudioSourceInfo> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.OwnedAudioSource
 */
declare class OwnedAudioSource extends Message<OwnedAudioSource> {
    /**
     * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;
     */
    handle?: FfiOwnedHandle;
    /**
     * @generated from field: required livekit.proto.AudioSourceInfo info = 2;
     */
    info?: AudioSourceInfo;
    constructor(data?: PartialMessage<OwnedAudioSource>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.OwnedAudioSource";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OwnedAudioSource;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OwnedAudioSource;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OwnedAudioSource;
    static equals(a: OwnedAudioSource | PlainMessage<OwnedAudioSource> | undefined, b: OwnedAudioSource | PlainMessage<OwnedAudioSource> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.AudioResamplerInfo
 */
declare class AudioResamplerInfo extends Message<AudioResamplerInfo> {
    constructor(data?: PartialMessage<AudioResamplerInfo>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.AudioResamplerInfo";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AudioResamplerInfo;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AudioResamplerInfo;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AudioResamplerInfo;
    static equals(a: AudioResamplerInfo | PlainMessage<AudioResamplerInfo> | undefined, b: AudioResamplerInfo | PlainMessage<AudioResamplerInfo> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.OwnedAudioResampler
 */
declare class OwnedAudioResampler extends Message<OwnedAudioResampler> {
    /**
     * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;
     */
    handle?: FfiOwnedHandle;
    /**
     * @generated from field: required livekit.proto.AudioResamplerInfo info = 2;
     */
    info?: AudioResamplerInfo;
    constructor(data?: PartialMessage<OwnedAudioResampler>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.OwnedAudioResampler";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OwnedAudioResampler;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OwnedAudioResampler;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OwnedAudioResampler;
    static equals(a: OwnedAudioResampler | PlainMessage<OwnedAudioResampler> | undefined, b: OwnedAudioResampler | PlainMessage<OwnedAudioResampler> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.SoxResamplerInfo
 */
declare class SoxResamplerInfo extends Message<SoxResamplerInfo> {
    constructor(data?: PartialMessage<SoxResamplerInfo>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.SoxResamplerInfo";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SoxResamplerInfo;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SoxResamplerInfo;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SoxResamplerInfo;
    static equals(a: SoxResamplerInfo | PlainMessage<SoxResamplerInfo> | undefined, b: SoxResamplerInfo | PlainMessage<SoxResamplerInfo> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.OwnedSoxResampler
 */
declare class OwnedSoxResampler extends Message<OwnedSoxResampler> {
    /**
     * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;
     */
    handle?: FfiOwnedHandle;
    /**
     * @generated from field: required livekit.proto.SoxResamplerInfo info = 2;
     */
    info?: SoxResamplerInfo;
    constructor(data?: PartialMessage<OwnedSoxResampler>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.OwnedSoxResampler";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OwnedSoxResampler;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OwnedSoxResampler;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OwnedSoxResampler;
    static equals(a: OwnedSoxResampler | PlainMessage<OwnedSoxResampler> | undefined, b: OwnedSoxResampler | PlainMessage<OwnedSoxResampler> | undefined): boolean;
}

export { AudioFrameBufferInfo, AudioFrameReceived, AudioResamplerInfo, AudioSourceInfo, AudioSourceOptions, AudioSourceType, AudioStreamEOS, AudioStreamEvent, AudioStreamFromParticipantRequest, AudioStreamFromParticipantResponse, AudioStreamInfo, AudioStreamType, CaptureAudioFrameCallback, CaptureAudioFrameRequest, CaptureAudioFrameResponse, ClearAudioBufferRequest, ClearAudioBufferResponse, FlushSoxResamplerRequest, FlushSoxResamplerResponse, NewAudioResamplerRequest, NewAudioResamplerResponse, NewAudioSourceRequest, NewAudioSourceResponse, NewAudioStreamRequest, NewAudioStreamResponse, NewSoxResamplerRequest, NewSoxResamplerResponse, OwnedAudioFrameBuffer, OwnedAudioResampler, OwnedAudioSource, OwnedAudioStream, OwnedSoxResampler, PushSoxResamplerRequest, PushSoxResamplerResponse, RemixAndResampleRequest, RemixAndResampleResponse, SoxFlagBits, SoxQualityRecipe, SoxResamplerDataType, SoxResamplerInfo };
