{"version":3,"sources":["../../src/proto/e2ee_pb.ts"],"sourcesContent":["// Copyright 2023 LiveKit, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts,import_extension=.js\"\n// @generated from file e2ee.proto (package livekit.proto, syntax proto2)\n/* eslint-disable */\n// @ts-nocheck\n\nimport type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from \"@bufbuild/protobuf\";\nimport { Message, proto2 } from \"@bufbuild/protobuf\";\n\n/**\n * @generated from enum livekit.proto.EncryptionType\n */\nexport enum EncryptionType {\n  /**\n   * @generated from enum value: NONE = 0;\n   */\n  NONE = 0,\n\n  /**\n   * @generated from enum value: GCM = 1;\n   */\n  GCM = 1,\n\n  /**\n   * @generated from enum value: CUSTOM = 2;\n   */\n  CUSTOM = 2,\n}\n// Retrieve enum metadata with: proto2.getEnumType(EncryptionType)\nproto2.util.setEnumType(EncryptionType, \"livekit.proto.EncryptionType\", [\n  { no: 0, name: \"NONE\" },\n  { no: 1, name: \"GCM\" },\n  { no: 2, name: \"CUSTOM\" },\n]);\n\n/**\n * @generated from enum livekit.proto.EncryptionState\n */\nexport enum EncryptionState {\n  /**\n   * @generated from enum value: NEW = 0;\n   */\n  NEW = 0,\n\n  /**\n   * @generated from enum value: OK = 1;\n   */\n  OK = 1,\n\n  /**\n   * @generated from enum value: ENCRYPTION_FAILED = 2;\n   */\n  ENCRYPTION_FAILED = 2,\n\n  /**\n   * @generated from enum value: DECRYPTION_FAILED = 3;\n   */\n  DECRYPTION_FAILED = 3,\n\n  /**\n   * @generated from enum value: MISSING_KEY = 4;\n   */\n  MISSING_KEY = 4,\n\n  /**\n   * @generated from enum value: KEY_RATCHETED = 5;\n   */\n  KEY_RATCHETED = 5,\n\n  /**\n   * @generated from enum value: INTERNAL_ERROR = 6;\n   */\n  INTERNAL_ERROR = 6,\n}\n// Retrieve enum metadata with: proto2.getEnumType(EncryptionState)\nproto2.util.setEnumType(EncryptionState, \"livekit.proto.EncryptionState\", [\n  { no: 0, name: \"NEW\" },\n  { no: 1, name: \"OK\" },\n  { no: 2, name: \"ENCRYPTION_FAILED\" },\n  { no: 3, name: \"DECRYPTION_FAILED\" },\n  { no: 4, name: \"MISSING_KEY\" },\n  { no: 5, name: \"KEY_RATCHETED\" },\n  { no: 6, name: \"INTERNAL_ERROR\" },\n]);\n\n/**\n * @generated from message livekit.proto.FrameCryptor\n */\nexport class FrameCryptor extends Message<FrameCryptor> {\n  /**\n   * @generated from field: required string participant_identity = 1;\n   */\n  participantIdentity?: string;\n\n  /**\n   * @generated from field: required string track_sid = 2;\n   */\n  trackSid?: string;\n\n  /**\n   * @generated from field: required int32 key_index = 3;\n   */\n  keyIndex?: number;\n\n  /**\n   * @generated from field: required bool enabled = 4;\n   */\n  enabled?: boolean;\n\n  constructor(data?: PartialMessage<FrameCryptor>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.FrameCryptor\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"participant_identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 2, name: \"track_sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 3, name: \"key_index\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, req: true },\n    { no: 4, name: \"enabled\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FrameCryptor {\n    return new FrameCryptor().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FrameCryptor {\n    return new FrameCryptor().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FrameCryptor {\n    return new FrameCryptor().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: FrameCryptor | PlainMessage<FrameCryptor> | undefined, b: FrameCryptor | PlainMessage<FrameCryptor> | undefined): boolean {\n    return proto2.util.equals(FrameCryptor, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.KeyProviderOptions\n */\nexport class KeyProviderOptions extends Message<KeyProviderOptions> {\n  /**\n   * Only specify if you want to use a shared_key\n   *\n   * @generated from field: optional bytes shared_key = 1;\n   */\n  sharedKey?: Uint8Array;\n\n  /**\n   * @generated from field: required int32 ratchet_window_size = 2;\n   */\n  ratchetWindowSize?: number;\n\n  /**\n   * @generated from field: required bytes ratchet_salt = 3;\n   */\n  ratchetSalt?: Uint8Array;\n\n  /**\n   * -1 = no tolerance\n   *\n   * @generated from field: required int32 failure_tolerance = 4;\n   */\n  failureTolerance?: number;\n\n  constructor(data?: PartialMessage<KeyProviderOptions>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.KeyProviderOptions\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"shared_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */, opt: true },\n    { no: 2, name: \"ratchet_window_size\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, req: true },\n    { no: 3, name: \"ratchet_salt\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */, req: true },\n    { no: 4, name: \"failure_tolerance\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): KeyProviderOptions {\n    return new KeyProviderOptions().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): KeyProviderOptions {\n    return new KeyProviderOptions().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): KeyProviderOptions {\n    return new KeyProviderOptions().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: KeyProviderOptions | PlainMessage<KeyProviderOptions> | undefined, b: KeyProviderOptions | PlainMessage<KeyProviderOptions> | undefined): boolean {\n    return proto2.util.equals(KeyProviderOptions, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.E2eeOptions\n */\nexport class E2eeOptions extends Message<E2eeOptions> {\n  /**\n   * @generated from field: required livekit.proto.EncryptionType encryption_type = 1;\n   */\n  encryptionType?: EncryptionType;\n\n  /**\n   * @generated from field: required livekit.proto.KeyProviderOptions key_provider_options = 2;\n   */\n  keyProviderOptions?: KeyProviderOptions;\n\n  constructor(data?: PartialMessage<E2eeOptions>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.E2eeOptions\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"encryption_type\", kind: \"enum\", T: proto2.getEnumType(EncryptionType), req: true },\n    { no: 2, name: \"key_provider_options\", kind: \"message\", T: KeyProviderOptions, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): E2eeOptions {\n    return new E2eeOptions().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): E2eeOptions {\n    return new E2eeOptions().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): E2eeOptions {\n    return new E2eeOptions().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: E2eeOptions | PlainMessage<E2eeOptions> | undefined, b: E2eeOptions | PlainMessage<E2eeOptions> | undefined): boolean {\n    return proto2.util.equals(E2eeOptions, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.E2eeManagerSetEnabledRequest\n */\nexport class E2eeManagerSetEnabledRequest extends Message<E2eeManagerSetEnabledRequest> {\n  /**\n   * @generated from field: required bool enabled = 1;\n   */\n  enabled?: boolean;\n\n  constructor(data?: PartialMessage<E2eeManagerSetEnabledRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.E2eeManagerSetEnabledRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"enabled\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): E2eeManagerSetEnabledRequest {\n    return new E2eeManagerSetEnabledRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): E2eeManagerSetEnabledRequest {\n    return new E2eeManagerSetEnabledRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): E2eeManagerSetEnabledRequest {\n    return new E2eeManagerSetEnabledRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: E2eeManagerSetEnabledRequest | PlainMessage<E2eeManagerSetEnabledRequest> | undefined, b: E2eeManagerSetEnabledRequest | PlainMessage<E2eeManagerSetEnabledRequest> | undefined): boolean {\n    return proto2.util.equals(E2eeManagerSetEnabledRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.E2eeManagerSetEnabledResponse\n */\nexport class E2eeManagerSetEnabledResponse extends Message<E2eeManagerSetEnabledResponse> {\n  constructor(data?: PartialMessage<E2eeManagerSetEnabledResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.E2eeManagerSetEnabledResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): E2eeManagerSetEnabledResponse {\n    return new E2eeManagerSetEnabledResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): E2eeManagerSetEnabledResponse {\n    return new E2eeManagerSetEnabledResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): E2eeManagerSetEnabledResponse {\n    return new E2eeManagerSetEnabledResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: E2eeManagerSetEnabledResponse | PlainMessage<E2eeManagerSetEnabledResponse> | undefined, b: E2eeManagerSetEnabledResponse | PlainMessage<E2eeManagerSetEnabledResponse> | undefined): boolean {\n    return proto2.util.equals(E2eeManagerSetEnabledResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.E2eeManagerGetFrameCryptorsRequest\n */\nexport class E2eeManagerGetFrameCryptorsRequest extends Message<E2eeManagerGetFrameCryptorsRequest> {\n  constructor(data?: PartialMessage<E2eeManagerGetFrameCryptorsRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.E2eeManagerGetFrameCryptorsRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): E2eeManagerGetFrameCryptorsRequest {\n    return new E2eeManagerGetFrameCryptorsRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): E2eeManagerGetFrameCryptorsRequest {\n    return new E2eeManagerGetFrameCryptorsRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): E2eeManagerGetFrameCryptorsRequest {\n    return new E2eeManagerGetFrameCryptorsRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: E2eeManagerGetFrameCryptorsRequest | PlainMessage<E2eeManagerGetFrameCryptorsRequest> | undefined, b: E2eeManagerGetFrameCryptorsRequest | PlainMessage<E2eeManagerGetFrameCryptorsRequest> | undefined): boolean {\n    return proto2.util.equals(E2eeManagerGetFrameCryptorsRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.E2eeManagerGetFrameCryptorsResponse\n */\nexport class E2eeManagerGetFrameCryptorsResponse extends Message<E2eeManagerGetFrameCryptorsResponse> {\n  /**\n   * @generated from field: repeated livekit.proto.FrameCryptor frame_cryptors = 1;\n   */\n  frameCryptors: FrameCryptor[] = [];\n\n  constructor(data?: PartialMessage<E2eeManagerGetFrameCryptorsResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.E2eeManagerGetFrameCryptorsResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"frame_cryptors\", kind: \"message\", T: FrameCryptor, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): E2eeManagerGetFrameCryptorsResponse {\n    return new E2eeManagerGetFrameCryptorsResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): E2eeManagerGetFrameCryptorsResponse {\n    return new E2eeManagerGetFrameCryptorsResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): E2eeManagerGetFrameCryptorsResponse {\n    return new E2eeManagerGetFrameCryptorsResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: E2eeManagerGetFrameCryptorsResponse | PlainMessage<E2eeManagerGetFrameCryptorsResponse> | undefined, b: E2eeManagerGetFrameCryptorsResponse | PlainMessage<E2eeManagerGetFrameCryptorsResponse> | undefined): boolean {\n    return proto2.util.equals(E2eeManagerGetFrameCryptorsResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.FrameCryptorSetEnabledRequest\n */\nexport class FrameCryptorSetEnabledRequest extends Message<FrameCryptorSetEnabledRequest> {\n  /**\n   * @generated from field: required string participant_identity = 1;\n   */\n  participantIdentity?: string;\n\n  /**\n   * @generated from field: required string track_sid = 2;\n   */\n  trackSid?: string;\n\n  /**\n   * @generated from field: required bool enabled = 3;\n   */\n  enabled?: boolean;\n\n  constructor(data?: PartialMessage<FrameCryptorSetEnabledRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.FrameCryptorSetEnabledRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"participant_identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 2, name: \"track_sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 3, name: \"enabled\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FrameCryptorSetEnabledRequest {\n    return new FrameCryptorSetEnabledRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FrameCryptorSetEnabledRequest {\n    return new FrameCryptorSetEnabledRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FrameCryptorSetEnabledRequest {\n    return new FrameCryptorSetEnabledRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: FrameCryptorSetEnabledRequest | PlainMessage<FrameCryptorSetEnabledRequest> | undefined, b: FrameCryptorSetEnabledRequest | PlainMessage<FrameCryptorSetEnabledRequest> | undefined): boolean {\n    return proto2.util.equals(FrameCryptorSetEnabledRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.FrameCryptorSetEnabledResponse\n */\nexport class FrameCryptorSetEnabledResponse extends Message<FrameCryptorSetEnabledResponse> {\n  constructor(data?: PartialMessage<FrameCryptorSetEnabledResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.FrameCryptorSetEnabledResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FrameCryptorSetEnabledResponse {\n    return new FrameCryptorSetEnabledResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FrameCryptorSetEnabledResponse {\n    return new FrameCryptorSetEnabledResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FrameCryptorSetEnabledResponse {\n    return new FrameCryptorSetEnabledResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: FrameCryptorSetEnabledResponse | PlainMessage<FrameCryptorSetEnabledResponse> | undefined, b: FrameCryptorSetEnabledResponse | PlainMessage<FrameCryptorSetEnabledResponse> | undefined): boolean {\n    return proto2.util.equals(FrameCryptorSetEnabledResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.FrameCryptorSetKeyIndexRequest\n */\nexport class FrameCryptorSetKeyIndexRequest extends Message<FrameCryptorSetKeyIndexRequest> {\n  /**\n   * @generated from field: required string participant_identity = 1;\n   */\n  participantIdentity?: string;\n\n  /**\n   * @generated from field: required string track_sid = 2;\n   */\n  trackSid?: string;\n\n  /**\n   * @generated from field: required int32 key_index = 3;\n   */\n  keyIndex?: number;\n\n  constructor(data?: PartialMessage<FrameCryptorSetKeyIndexRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.FrameCryptorSetKeyIndexRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"participant_identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 2, name: \"track_sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 3, name: \"key_index\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FrameCryptorSetKeyIndexRequest {\n    return new FrameCryptorSetKeyIndexRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FrameCryptorSetKeyIndexRequest {\n    return new FrameCryptorSetKeyIndexRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FrameCryptorSetKeyIndexRequest {\n    return new FrameCryptorSetKeyIndexRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: FrameCryptorSetKeyIndexRequest | PlainMessage<FrameCryptorSetKeyIndexRequest> | undefined, b: FrameCryptorSetKeyIndexRequest | PlainMessage<FrameCryptorSetKeyIndexRequest> | undefined): boolean {\n    return proto2.util.equals(FrameCryptorSetKeyIndexRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.FrameCryptorSetKeyIndexResponse\n */\nexport class FrameCryptorSetKeyIndexResponse extends Message<FrameCryptorSetKeyIndexResponse> {\n  constructor(data?: PartialMessage<FrameCryptorSetKeyIndexResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.FrameCryptorSetKeyIndexResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FrameCryptorSetKeyIndexResponse {\n    return new FrameCryptorSetKeyIndexResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FrameCryptorSetKeyIndexResponse {\n    return new FrameCryptorSetKeyIndexResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FrameCryptorSetKeyIndexResponse {\n    return new FrameCryptorSetKeyIndexResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: FrameCryptorSetKeyIndexResponse | PlainMessage<FrameCryptorSetKeyIndexResponse> | undefined, b: FrameCryptorSetKeyIndexResponse | PlainMessage<FrameCryptorSetKeyIndexResponse> | undefined): boolean {\n    return proto2.util.equals(FrameCryptorSetKeyIndexResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.SetSharedKeyRequest\n */\nexport class SetSharedKeyRequest extends Message<SetSharedKeyRequest> {\n  /**\n   * @generated from field: required bytes shared_key = 1;\n   */\n  sharedKey?: Uint8Array;\n\n  /**\n   * @generated from field: required int32 key_index = 2;\n   */\n  keyIndex?: number;\n\n  constructor(data?: PartialMessage<SetSharedKeyRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.SetSharedKeyRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"shared_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */, req: true },\n    { no: 2, name: \"key_index\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetSharedKeyRequest {\n    return new SetSharedKeyRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetSharedKeyRequest {\n    return new SetSharedKeyRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetSharedKeyRequest {\n    return new SetSharedKeyRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: SetSharedKeyRequest | PlainMessage<SetSharedKeyRequest> | undefined, b: SetSharedKeyRequest | PlainMessage<SetSharedKeyRequest> | undefined): boolean {\n    return proto2.util.equals(SetSharedKeyRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.SetSharedKeyResponse\n */\nexport class SetSharedKeyResponse extends Message<SetSharedKeyResponse> {\n  constructor(data?: PartialMessage<SetSharedKeyResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.SetSharedKeyResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetSharedKeyResponse {\n    return new SetSharedKeyResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetSharedKeyResponse {\n    return new SetSharedKeyResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetSharedKeyResponse {\n    return new SetSharedKeyResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: SetSharedKeyResponse | PlainMessage<SetSharedKeyResponse> | undefined, b: SetSharedKeyResponse | PlainMessage<SetSharedKeyResponse> | undefined): boolean {\n    return proto2.util.equals(SetSharedKeyResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.RatchetSharedKeyRequest\n */\nexport class RatchetSharedKeyRequest extends Message<RatchetSharedKeyRequest> {\n  /**\n   * @generated from field: required int32 key_index = 1;\n   */\n  keyIndex?: number;\n\n  constructor(data?: PartialMessage<RatchetSharedKeyRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.RatchetSharedKeyRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"key_index\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RatchetSharedKeyRequest {\n    return new RatchetSharedKeyRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RatchetSharedKeyRequest {\n    return new RatchetSharedKeyRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RatchetSharedKeyRequest {\n    return new RatchetSharedKeyRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RatchetSharedKeyRequest | PlainMessage<RatchetSharedKeyRequest> | undefined, b: RatchetSharedKeyRequest | PlainMessage<RatchetSharedKeyRequest> | undefined): boolean {\n    return proto2.util.equals(RatchetSharedKeyRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.RatchetSharedKeyResponse\n */\nexport class RatchetSharedKeyResponse extends Message<RatchetSharedKeyResponse> {\n  /**\n   * @generated from field: optional bytes new_key = 1;\n   */\n  newKey?: Uint8Array;\n\n  constructor(data?: PartialMessage<RatchetSharedKeyResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.RatchetSharedKeyResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"new_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RatchetSharedKeyResponse {\n    return new RatchetSharedKeyResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RatchetSharedKeyResponse {\n    return new RatchetSharedKeyResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RatchetSharedKeyResponse {\n    return new RatchetSharedKeyResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RatchetSharedKeyResponse | PlainMessage<RatchetSharedKeyResponse> | undefined, b: RatchetSharedKeyResponse | PlainMessage<RatchetSharedKeyResponse> | undefined): boolean {\n    return proto2.util.equals(RatchetSharedKeyResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.GetSharedKeyRequest\n */\nexport class GetSharedKeyRequest extends Message<GetSharedKeyRequest> {\n  /**\n   * @generated from field: required int32 key_index = 1;\n   */\n  keyIndex?: number;\n\n  constructor(data?: PartialMessage<GetSharedKeyRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.GetSharedKeyRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"key_index\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSharedKeyRequest {\n    return new GetSharedKeyRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSharedKeyRequest {\n    return new GetSharedKeyRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSharedKeyRequest {\n    return new GetSharedKeyRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: GetSharedKeyRequest | PlainMessage<GetSharedKeyRequest> | undefined, b: GetSharedKeyRequest | PlainMessage<GetSharedKeyRequest> | undefined): boolean {\n    return proto2.util.equals(GetSharedKeyRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.GetSharedKeyResponse\n */\nexport class GetSharedKeyResponse extends Message<GetSharedKeyResponse> {\n  /**\n   * @generated from field: optional bytes key = 1;\n   */\n  key?: Uint8Array;\n\n  constructor(data?: PartialMessage<GetSharedKeyResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.GetSharedKeyResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSharedKeyResponse {\n    return new GetSharedKeyResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSharedKeyResponse {\n    return new GetSharedKeyResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSharedKeyResponse {\n    return new GetSharedKeyResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: GetSharedKeyResponse | PlainMessage<GetSharedKeyResponse> | undefined, b: GetSharedKeyResponse | PlainMessage<GetSharedKeyResponse> | undefined): boolean {\n    return proto2.util.equals(GetSharedKeyResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.SetKeyRequest\n */\nexport class SetKeyRequest extends Message<SetKeyRequest> {\n  /**\n   * @generated from field: required string participant_identity = 1;\n   */\n  participantIdentity?: string;\n\n  /**\n   * @generated from field: required bytes key = 2;\n   */\n  key?: Uint8Array;\n\n  /**\n   * @generated from field: required int32 key_index = 3;\n   */\n  keyIndex?: number;\n\n  constructor(data?: PartialMessage<SetKeyRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.SetKeyRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"participant_identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 2, name: \"key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */, req: true },\n    { no: 3, name: \"key_index\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetKeyRequest {\n    return new SetKeyRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetKeyRequest {\n    return new SetKeyRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetKeyRequest {\n    return new SetKeyRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: SetKeyRequest | PlainMessage<SetKeyRequest> | undefined, b: SetKeyRequest | PlainMessage<SetKeyRequest> | undefined): boolean {\n    return proto2.util.equals(SetKeyRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.SetKeyResponse\n */\nexport class SetKeyResponse extends Message<SetKeyResponse> {\n  constructor(data?: PartialMessage<SetKeyResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.SetKeyResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetKeyResponse {\n    return new SetKeyResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetKeyResponse {\n    return new SetKeyResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetKeyResponse {\n    return new SetKeyResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: SetKeyResponse | PlainMessage<SetKeyResponse> | undefined, b: SetKeyResponse | PlainMessage<SetKeyResponse> | undefined): boolean {\n    return proto2.util.equals(SetKeyResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.RatchetKeyRequest\n */\nexport class RatchetKeyRequest extends Message<RatchetKeyRequest> {\n  /**\n   * @generated from field: required string participant_identity = 1;\n   */\n  participantIdentity?: string;\n\n  /**\n   * @generated from field: required int32 key_index = 2;\n   */\n  keyIndex?: number;\n\n  constructor(data?: PartialMessage<RatchetKeyRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.RatchetKeyRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"participant_identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 2, name: \"key_index\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RatchetKeyRequest {\n    return new RatchetKeyRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RatchetKeyRequest {\n    return new RatchetKeyRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RatchetKeyRequest {\n    return new RatchetKeyRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RatchetKeyRequest | PlainMessage<RatchetKeyRequest> | undefined, b: RatchetKeyRequest | PlainMessage<RatchetKeyRequest> | undefined): boolean {\n    return proto2.util.equals(RatchetKeyRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.RatchetKeyResponse\n */\nexport class RatchetKeyResponse extends Message<RatchetKeyResponse> {\n  /**\n   * @generated from field: optional bytes new_key = 1;\n   */\n  newKey?: Uint8Array;\n\n  constructor(data?: PartialMessage<RatchetKeyResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.RatchetKeyResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"new_key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RatchetKeyResponse {\n    return new RatchetKeyResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RatchetKeyResponse {\n    return new RatchetKeyResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RatchetKeyResponse {\n    return new RatchetKeyResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RatchetKeyResponse | PlainMessage<RatchetKeyResponse> | undefined, b: RatchetKeyResponse | PlainMessage<RatchetKeyResponse> | undefined): boolean {\n    return proto2.util.equals(RatchetKeyResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.GetKeyRequest\n */\nexport class GetKeyRequest extends Message<GetKeyRequest> {\n  /**\n   * @generated from field: required string participant_identity = 1;\n   */\n  participantIdentity?: string;\n\n  /**\n   * @generated from field: required int32 key_index = 2;\n   */\n  keyIndex?: number;\n\n  constructor(data?: PartialMessage<GetKeyRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.GetKeyRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"participant_identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 2, name: \"key_index\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetKeyRequest {\n    return new GetKeyRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetKeyRequest {\n    return new GetKeyRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetKeyRequest {\n    return new GetKeyRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: GetKeyRequest | PlainMessage<GetKeyRequest> | undefined, b: GetKeyRequest | PlainMessage<GetKeyRequest> | undefined): boolean {\n    return proto2.util.equals(GetKeyRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.GetKeyResponse\n */\nexport class GetKeyResponse extends Message<GetKeyResponse> {\n  /**\n   * @generated from field: optional bytes key = 1;\n   */\n  key?: Uint8Array;\n\n  constructor(data?: PartialMessage<GetKeyResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.GetKeyResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"key\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetKeyResponse {\n    return new GetKeyResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetKeyResponse {\n    return new GetKeyResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetKeyResponse {\n    return new GetKeyResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: GetKeyResponse | PlainMessage<GetKeyResponse> | undefined, b: GetKeyResponse | PlainMessage<GetKeyResponse> | undefined): boolean {\n    return proto2.util.equals(GetKeyResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.E2eeRequest\n */\nexport class E2eeRequest extends Message<E2eeRequest> {\n  /**\n   * @generated from field: required uint64 room_handle = 1;\n   */\n  roomHandle?: bigint;\n\n  /**\n   * @generated from oneof livekit.proto.E2eeRequest.message\n   */\n  message: {\n    /**\n     * @generated from field: livekit.proto.E2eeManagerSetEnabledRequest manager_set_enabled = 2;\n     */\n    value: E2eeManagerSetEnabledRequest;\n    case: \"managerSetEnabled\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.E2eeManagerGetFrameCryptorsRequest manager_get_frame_cryptors = 3;\n     */\n    value: E2eeManagerGetFrameCryptorsRequest;\n    case: \"managerGetFrameCryptors\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.FrameCryptorSetEnabledRequest cryptor_set_enabled = 4;\n     */\n    value: FrameCryptorSetEnabledRequest;\n    case: \"cryptorSetEnabled\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.FrameCryptorSetKeyIndexRequest cryptor_set_key_index = 5;\n     */\n    value: FrameCryptorSetKeyIndexRequest;\n    case: \"cryptorSetKeyIndex\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.SetSharedKeyRequest set_shared_key = 6;\n     */\n    value: SetSharedKeyRequest;\n    case: \"setSharedKey\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.RatchetSharedKeyRequest ratchet_shared_key = 7;\n     */\n    value: RatchetSharedKeyRequest;\n    case: \"ratchetSharedKey\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.GetSharedKeyRequest get_shared_key = 8;\n     */\n    value: GetSharedKeyRequest;\n    case: \"getSharedKey\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.SetKeyRequest set_key = 9;\n     */\n    value: SetKeyRequest;\n    case: \"setKey\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.RatchetKeyRequest ratchet_key = 10;\n     */\n    value: RatchetKeyRequest;\n    case: \"ratchetKey\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.GetKeyRequest get_key = 11;\n     */\n    value: GetKeyRequest;\n    case: \"getKey\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  constructor(data?: PartialMessage<E2eeRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.E2eeRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"room_handle\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"manager_set_enabled\", kind: \"message\", T: E2eeManagerSetEnabledRequest, oneof: \"message\" },\n    { no: 3, name: \"manager_get_frame_cryptors\", kind: \"message\", T: E2eeManagerGetFrameCryptorsRequest, oneof: \"message\" },\n    { no: 4, name: \"cryptor_set_enabled\", kind: \"message\", T: FrameCryptorSetEnabledRequest, oneof: \"message\" },\n    { no: 5, name: \"cryptor_set_key_index\", kind: \"message\", T: FrameCryptorSetKeyIndexRequest, oneof: \"message\" },\n    { no: 6, name: \"set_shared_key\", kind: \"message\", T: SetSharedKeyRequest, oneof: \"message\" },\n    { no: 7, name: \"ratchet_shared_key\", kind: \"message\", T: RatchetSharedKeyRequest, oneof: \"message\" },\n    { no: 8, name: \"get_shared_key\", kind: \"message\", T: GetSharedKeyRequest, oneof: \"message\" },\n    { no: 9, name: \"set_key\", kind: \"message\", T: SetKeyRequest, oneof: \"message\" },\n    { no: 10, name: \"ratchet_key\", kind: \"message\", T: RatchetKeyRequest, oneof: \"message\" },\n    { no: 11, name: \"get_key\", kind: \"message\", T: GetKeyRequest, oneof: \"message\" },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): E2eeRequest {\n    return new E2eeRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): E2eeRequest {\n    return new E2eeRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): E2eeRequest {\n    return new E2eeRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: E2eeRequest | PlainMessage<E2eeRequest> | undefined, b: E2eeRequest | PlainMessage<E2eeRequest> | undefined): boolean {\n    return proto2.util.equals(E2eeRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.E2eeResponse\n */\nexport class E2eeResponse extends Message<E2eeResponse> {\n  /**\n   * @generated from oneof livekit.proto.E2eeResponse.message\n   */\n  message: {\n    /**\n     * @generated from field: livekit.proto.E2eeManagerSetEnabledResponse manager_set_enabled = 1;\n     */\n    value: E2eeManagerSetEnabledResponse;\n    case: \"managerSetEnabled\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.E2eeManagerGetFrameCryptorsResponse manager_get_frame_cryptors = 2;\n     */\n    value: E2eeManagerGetFrameCryptorsResponse;\n    case: \"managerGetFrameCryptors\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.FrameCryptorSetEnabledResponse cryptor_set_enabled = 3;\n     */\n    value: FrameCryptorSetEnabledResponse;\n    case: \"cryptorSetEnabled\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.FrameCryptorSetKeyIndexResponse cryptor_set_key_index = 4;\n     */\n    value: FrameCryptorSetKeyIndexResponse;\n    case: \"cryptorSetKeyIndex\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.SetSharedKeyResponse set_shared_key = 5;\n     */\n    value: SetSharedKeyResponse;\n    case: \"setSharedKey\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.RatchetSharedKeyResponse ratchet_shared_key = 6;\n     */\n    value: RatchetSharedKeyResponse;\n    case: \"ratchetSharedKey\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.GetSharedKeyResponse get_shared_key = 7;\n     */\n    value: GetSharedKeyResponse;\n    case: \"getSharedKey\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.SetKeyResponse set_key = 8;\n     */\n    value: SetKeyResponse;\n    case: \"setKey\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.RatchetKeyResponse ratchet_key = 9;\n     */\n    value: RatchetKeyResponse;\n    case: \"ratchetKey\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.GetKeyResponse get_key = 10;\n     */\n    value: GetKeyResponse;\n    case: \"getKey\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  constructor(data?: PartialMessage<E2eeResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.E2eeResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"manager_set_enabled\", kind: \"message\", T: E2eeManagerSetEnabledResponse, oneof: \"message\" },\n    { no: 2, name: \"manager_get_frame_cryptors\", kind: \"message\", T: E2eeManagerGetFrameCryptorsResponse, oneof: \"message\" },\n    { no: 3, name: \"cryptor_set_enabled\", kind: \"message\", T: FrameCryptorSetEnabledResponse, oneof: \"message\" },\n    { no: 4, name: \"cryptor_set_key_index\", kind: \"message\", T: FrameCryptorSetKeyIndexResponse, oneof: \"message\" },\n    { no: 5, name: \"set_shared_key\", kind: \"message\", T: SetSharedKeyResponse, oneof: \"message\" },\n    { no: 6, name: \"ratchet_shared_key\", kind: \"message\", T: RatchetSharedKeyResponse, oneof: \"message\" },\n    { no: 7, name: \"get_shared_key\", kind: \"message\", T: GetSharedKeyResponse, oneof: \"message\" },\n    { no: 8, name: \"set_key\", kind: \"message\", T: SetKeyResponse, oneof: \"message\" },\n    { no: 9, name: \"ratchet_key\", kind: \"message\", T: RatchetKeyResponse, oneof: \"message\" },\n    { no: 10, name: \"get_key\", kind: \"message\", T: GetKeyResponse, oneof: \"message\" },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): E2eeResponse {\n    return new E2eeResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): E2eeResponse {\n    return new E2eeResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): E2eeResponse {\n    return new E2eeResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: E2eeResponse | PlainMessage<E2eeResponse> | undefined, b: E2eeResponse | PlainMessage<E2eeResponse> | undefined): boolean {\n    return proto2.util.equals(E2eeResponse, a, b);\n  }\n}\n\n"],"mappings":"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","names":["EncryptionType","EncryptionState"]}