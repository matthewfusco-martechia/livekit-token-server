{"version":3,"sources":["../../src/proto/stats_pb.ts"],"sourcesContent":["// Copyright 2023 LiveKit, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts,import_extension=.js\"\n// @generated from file stats.proto (package livekit.proto, syntax proto2)\n/* eslint-disable */\n// @ts-nocheck\n\nimport type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from \"@bufbuild/protobuf\";\nimport { Message, proto2 } from \"@bufbuild/protobuf\";\n\n/**\n * @generated from enum livekit.proto.DataChannelState\n */\nexport enum DataChannelState {\n  /**\n   * @generated from enum value: DC_CONNECTING = 0;\n   */\n  DC_CONNECTING = 0,\n\n  /**\n   * @generated from enum value: DC_OPEN = 1;\n   */\n  DC_OPEN = 1,\n\n  /**\n   * @generated from enum value: DC_CLOSING = 2;\n   */\n  DC_CLOSING = 2,\n\n  /**\n   * @generated from enum value: DC_CLOSED = 3;\n   */\n  DC_CLOSED = 3,\n}\n// Retrieve enum metadata with: proto2.getEnumType(DataChannelState)\nproto2.util.setEnumType(DataChannelState, \"livekit.proto.DataChannelState\", [\n  { no: 0, name: \"DC_CONNECTING\" },\n  { no: 1, name: \"DC_OPEN\" },\n  { no: 2, name: \"DC_CLOSING\" },\n  { no: 3, name: \"DC_CLOSED\" },\n]);\n\n/**\n * @generated from enum livekit.proto.QualityLimitationReason\n */\nexport enum QualityLimitationReason {\n  /**\n   * @generated from enum value: LIMITATION_NONE = 0;\n   */\n  LIMITATION_NONE = 0,\n\n  /**\n   * @generated from enum value: LIMITATION_CPU = 1;\n   */\n  LIMITATION_CPU = 1,\n\n  /**\n   * @generated from enum value: LIMITATION_BANDWIDTH = 2;\n   */\n  LIMITATION_BANDWIDTH = 2,\n\n  /**\n   * @generated from enum value: LIMITATION_OTHER = 3;\n   */\n  LIMITATION_OTHER = 3,\n}\n// Retrieve enum metadata with: proto2.getEnumType(QualityLimitationReason)\nproto2.util.setEnumType(QualityLimitationReason, \"livekit.proto.QualityLimitationReason\", [\n  { no: 0, name: \"LIMITATION_NONE\" },\n  { no: 1, name: \"LIMITATION_CPU\" },\n  { no: 2, name: \"LIMITATION_BANDWIDTH\" },\n  { no: 3, name: \"LIMITATION_OTHER\" },\n]);\n\n/**\n * @generated from enum livekit.proto.IceRole\n */\nexport enum IceRole {\n  /**\n   * @generated from enum value: ICE_UNKNOWN = 0;\n   */\n  ICE_UNKNOWN = 0,\n\n  /**\n   * @generated from enum value: ICE_CONTROLLING = 1;\n   */\n  ICE_CONTROLLING = 1,\n\n  /**\n   * @generated from enum value: ICE_CONTROLLED = 2;\n   */\n  ICE_CONTROLLED = 2,\n}\n// Retrieve enum metadata with: proto2.getEnumType(IceRole)\nproto2.util.setEnumType(IceRole, \"livekit.proto.IceRole\", [\n  { no: 0, name: \"ICE_UNKNOWN\" },\n  { no: 1, name: \"ICE_CONTROLLING\" },\n  { no: 2, name: \"ICE_CONTROLLED\" },\n]);\n\n/**\n * @generated from enum livekit.proto.DtlsTransportState\n */\nexport enum DtlsTransportState {\n  /**\n   * @generated from enum value: DTLS_TRANSPORT_NEW = 0;\n   */\n  DTLS_TRANSPORT_NEW = 0,\n\n  /**\n   * @generated from enum value: DTLS_TRANSPORT_CONNECTING = 1;\n   */\n  DTLS_TRANSPORT_CONNECTING = 1,\n\n  /**\n   * @generated from enum value: DTLS_TRANSPORT_CONNECTED = 2;\n   */\n  DTLS_TRANSPORT_CONNECTED = 2,\n\n  /**\n   * @generated from enum value: DTLS_TRANSPORT_CLOSED = 3;\n   */\n  DTLS_TRANSPORT_CLOSED = 3,\n\n  /**\n   * @generated from enum value: DTLS_TRANSPORT_FAILED = 4;\n   */\n  DTLS_TRANSPORT_FAILED = 4,\n}\n// Retrieve enum metadata with: proto2.getEnumType(DtlsTransportState)\nproto2.util.setEnumType(DtlsTransportState, \"livekit.proto.DtlsTransportState\", [\n  { no: 0, name: \"DTLS_TRANSPORT_NEW\" },\n  { no: 1, name: \"DTLS_TRANSPORT_CONNECTING\" },\n  { no: 2, name: \"DTLS_TRANSPORT_CONNECTED\" },\n  { no: 3, name: \"DTLS_TRANSPORT_CLOSED\" },\n  { no: 4, name: \"DTLS_TRANSPORT_FAILED\" },\n]);\n\n/**\n * @generated from enum livekit.proto.IceTransportState\n */\nexport enum IceTransportState {\n  /**\n   * @generated from enum value: ICE_TRANSPORT_NEW = 0;\n   */\n  ICE_TRANSPORT_NEW = 0,\n\n  /**\n   * @generated from enum value: ICE_TRANSPORT_CHECKING = 1;\n   */\n  ICE_TRANSPORT_CHECKING = 1,\n\n  /**\n   * @generated from enum value: ICE_TRANSPORT_CONNECTED = 2;\n   */\n  ICE_TRANSPORT_CONNECTED = 2,\n\n  /**\n   * @generated from enum value: ICE_TRANSPORT_COMPLETED = 3;\n   */\n  ICE_TRANSPORT_COMPLETED = 3,\n\n  /**\n   * @generated from enum value: ICE_TRANSPORT_DISCONNECTED = 4;\n   */\n  ICE_TRANSPORT_DISCONNECTED = 4,\n\n  /**\n   * @generated from enum value: ICE_TRANSPORT_FAILED = 5;\n   */\n  ICE_TRANSPORT_FAILED = 5,\n\n  /**\n   * @generated from enum value: ICE_TRANSPORT_CLOSED = 6;\n   */\n  ICE_TRANSPORT_CLOSED = 6,\n}\n// Retrieve enum metadata with: proto2.getEnumType(IceTransportState)\nproto2.util.setEnumType(IceTransportState, \"livekit.proto.IceTransportState\", [\n  { no: 0, name: \"ICE_TRANSPORT_NEW\" },\n  { no: 1, name: \"ICE_TRANSPORT_CHECKING\" },\n  { no: 2, name: \"ICE_TRANSPORT_CONNECTED\" },\n  { no: 3, name: \"ICE_TRANSPORT_COMPLETED\" },\n  { no: 4, name: \"ICE_TRANSPORT_DISCONNECTED\" },\n  { no: 5, name: \"ICE_TRANSPORT_FAILED\" },\n  { no: 6, name: \"ICE_TRANSPORT_CLOSED\" },\n]);\n\n/**\n * @generated from enum livekit.proto.DtlsRole\n */\nexport enum DtlsRole {\n  /**\n   * @generated from enum value: DTLS_CLIENT = 0;\n   */\n  DTLS_CLIENT = 0,\n\n  /**\n   * @generated from enum value: DTLS_SERVER = 1;\n   */\n  DTLS_SERVER = 1,\n\n  /**\n   * @generated from enum value: DTLS_UNKNOWN = 2;\n   */\n  DTLS_UNKNOWN = 2,\n}\n// Retrieve enum metadata with: proto2.getEnumType(DtlsRole)\nproto2.util.setEnumType(DtlsRole, \"livekit.proto.DtlsRole\", [\n  { no: 0, name: \"DTLS_CLIENT\" },\n  { no: 1, name: \"DTLS_SERVER\" },\n  { no: 2, name: \"DTLS_UNKNOWN\" },\n]);\n\n/**\n * @generated from enum livekit.proto.IceCandidatePairState\n */\nexport enum IceCandidatePairState {\n  /**\n   * @generated from enum value: PAIR_FROZEN = 0;\n   */\n  PAIR_FROZEN = 0,\n\n  /**\n   * @generated from enum value: PAIR_WAITING = 1;\n   */\n  PAIR_WAITING = 1,\n\n  /**\n   * @generated from enum value: PAIR_IN_PROGRESS = 2;\n   */\n  PAIR_IN_PROGRESS = 2,\n\n  /**\n   * @generated from enum value: PAIR_FAILED = 3;\n   */\n  PAIR_FAILED = 3,\n\n  /**\n   * @generated from enum value: PAIR_SUCCEEDED = 4;\n   */\n  PAIR_SUCCEEDED = 4,\n}\n// Retrieve enum metadata with: proto2.getEnumType(IceCandidatePairState)\nproto2.util.setEnumType(IceCandidatePairState, \"livekit.proto.IceCandidatePairState\", [\n  { no: 0, name: \"PAIR_FROZEN\" },\n  { no: 1, name: \"PAIR_WAITING\" },\n  { no: 2, name: \"PAIR_IN_PROGRESS\" },\n  { no: 3, name: \"PAIR_FAILED\" },\n  { no: 4, name: \"PAIR_SUCCEEDED\" },\n]);\n\n/**\n * @generated from enum livekit.proto.IceCandidateType\n */\nexport enum IceCandidateType {\n  /**\n   * @generated from enum value: HOST = 0;\n   */\n  HOST = 0,\n\n  /**\n   * @generated from enum value: SRFLX = 1;\n   */\n  SRFLX = 1,\n\n  /**\n   * @generated from enum value: PRFLX = 2;\n   */\n  PRFLX = 2,\n\n  /**\n   * @generated from enum value: RELAY = 3;\n   */\n  RELAY = 3,\n}\n// Retrieve enum metadata with: proto2.getEnumType(IceCandidateType)\nproto2.util.setEnumType(IceCandidateType, \"livekit.proto.IceCandidateType\", [\n  { no: 0, name: \"HOST\" },\n  { no: 1, name: \"SRFLX\" },\n  { no: 2, name: \"PRFLX\" },\n  { no: 3, name: \"RELAY\" },\n]);\n\n/**\n * @generated from enum livekit.proto.IceServerTransportProtocol\n */\nexport enum IceServerTransportProtocol {\n  /**\n   * @generated from enum value: TRANSPORT_UDP = 0;\n   */\n  TRANSPORT_UDP = 0,\n\n  /**\n   * @generated from enum value: TRANSPORT_TCP = 1;\n   */\n  TRANSPORT_TCP = 1,\n\n  /**\n   * @generated from enum value: TRANSPORT_TLS = 2;\n   */\n  TRANSPORT_TLS = 2,\n}\n// Retrieve enum metadata with: proto2.getEnumType(IceServerTransportProtocol)\nproto2.util.setEnumType(IceServerTransportProtocol, \"livekit.proto.IceServerTransportProtocol\", [\n  { no: 0, name: \"TRANSPORT_UDP\" },\n  { no: 1, name: \"TRANSPORT_TCP\" },\n  { no: 2, name: \"TRANSPORT_TLS\" },\n]);\n\n/**\n * @generated from enum livekit.proto.IceTcpCandidateType\n */\nexport enum IceTcpCandidateType {\n  /**\n   * @generated from enum value: CANDIDATE_ACTIVE = 0;\n   */\n  CANDIDATE_ACTIVE = 0,\n\n  /**\n   * @generated from enum value: CANDIDATE_PASSIVE = 1;\n   */\n  CANDIDATE_PASSIVE = 1,\n\n  /**\n   * @generated from enum value: CANDIDATE_SO = 2;\n   */\n  CANDIDATE_SO = 2,\n}\n// Retrieve enum metadata with: proto2.getEnumType(IceTcpCandidateType)\nproto2.util.setEnumType(IceTcpCandidateType, \"livekit.proto.IceTcpCandidateType\", [\n  { no: 0, name: \"CANDIDATE_ACTIVE\" },\n  { no: 1, name: \"CANDIDATE_PASSIVE\" },\n  { no: 2, name: \"CANDIDATE_SO\" },\n]);\n\n/**\n * @generated from message livekit.proto.RtcStats\n */\nexport class RtcStats extends Message<RtcStats> {\n  /**\n   * @generated from oneof livekit.proto.RtcStats.stats\n   */\n  stats: {\n    /**\n     * @generated from field: livekit.proto.RtcStats.Codec codec = 3;\n     */\n    value: RtcStats_Codec;\n    case: \"codec\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.RtcStats.InboundRtp inbound_rtp = 4;\n     */\n    value: RtcStats_InboundRtp;\n    case: \"inboundRtp\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.RtcStats.OutboundRtp outbound_rtp = 5;\n     */\n    value: RtcStats_OutboundRtp;\n    case: \"outboundRtp\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.RtcStats.RemoteInboundRtp remote_inbound_rtp = 6;\n     */\n    value: RtcStats_RemoteInboundRtp;\n    case: \"remoteInboundRtp\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.RtcStats.RemoteOutboundRtp remote_outbound_rtp = 7;\n     */\n    value: RtcStats_RemoteOutboundRtp;\n    case: \"remoteOutboundRtp\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.RtcStats.MediaSource media_source = 8;\n     */\n    value: RtcStats_MediaSource;\n    case: \"mediaSource\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.RtcStats.MediaPlayout media_playout = 9;\n     */\n    value: RtcStats_MediaPlayout;\n    case: \"mediaPlayout\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.RtcStats.PeerConnection peer_connection = 10;\n     */\n    value: RtcStats_PeerConnection;\n    case: \"peerConnection\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.RtcStats.DataChannel data_channel = 11;\n     */\n    value: RtcStats_DataChannel;\n    case: \"dataChannel\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.RtcStats.Transport transport = 12;\n     */\n    value: RtcStats_Transport;\n    case: \"transport\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.RtcStats.CandidatePair candidate_pair = 13;\n     */\n    value: RtcStats_CandidatePair;\n    case: \"candidatePair\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.RtcStats.LocalCandidate local_candidate = 14;\n     */\n    value: RtcStats_LocalCandidate;\n    case: \"localCandidate\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.RtcStats.RemoteCandidate remote_candidate = 15;\n     */\n    value: RtcStats_RemoteCandidate;\n    case: \"remoteCandidate\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.RtcStats.Certificate certificate = 16;\n     */\n    value: RtcStats_Certificate;\n    case: \"certificate\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.RtcStats.Stream stream = 17;\n     */\n    value: RtcStats_Stream;\n    case: \"stream\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.RtcStats.Track track = 18;\n     */\n    value: RtcStats_Track;\n    case: \"track\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  constructor(data?: PartialMessage<RtcStats>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.RtcStats\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 3, name: \"codec\", kind: \"message\", T: RtcStats_Codec, oneof: \"stats\" },\n    { no: 4, name: \"inbound_rtp\", kind: \"message\", T: RtcStats_InboundRtp, oneof: \"stats\" },\n    { no: 5, name: \"outbound_rtp\", kind: \"message\", T: RtcStats_OutboundRtp, oneof: \"stats\" },\n    { no: 6, name: \"remote_inbound_rtp\", kind: \"message\", T: RtcStats_RemoteInboundRtp, oneof: \"stats\" },\n    { no: 7, name: \"remote_outbound_rtp\", kind: \"message\", T: RtcStats_RemoteOutboundRtp, oneof: \"stats\" },\n    { no: 8, name: \"media_source\", kind: \"message\", T: RtcStats_MediaSource, oneof: \"stats\" },\n    { no: 9, name: \"media_playout\", kind: \"message\", T: RtcStats_MediaPlayout, oneof: \"stats\" },\n    { no: 10, name: \"peer_connection\", kind: \"message\", T: RtcStats_PeerConnection, oneof: \"stats\" },\n    { no: 11, name: \"data_channel\", kind: \"message\", T: RtcStats_DataChannel, oneof: \"stats\" },\n    { no: 12, name: \"transport\", kind: \"message\", T: RtcStats_Transport, oneof: \"stats\" },\n    { no: 13, name: \"candidate_pair\", kind: \"message\", T: RtcStats_CandidatePair, oneof: \"stats\" },\n    { no: 14, name: \"local_candidate\", kind: \"message\", T: RtcStats_LocalCandidate, oneof: \"stats\" },\n    { no: 15, name: \"remote_candidate\", kind: \"message\", T: RtcStats_RemoteCandidate, oneof: \"stats\" },\n    { no: 16, name: \"certificate\", kind: \"message\", T: RtcStats_Certificate, oneof: \"stats\" },\n    { no: 17, name: \"stream\", kind: \"message\", T: RtcStats_Stream, oneof: \"stats\" },\n    { no: 18, name: \"track\", kind: \"message\", T: RtcStats_Track, oneof: \"stats\" },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtcStats {\n    return new RtcStats().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtcStats {\n    return new RtcStats().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtcStats {\n    return new RtcStats().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RtcStats | PlainMessage<RtcStats> | undefined, b: RtcStats | PlainMessage<RtcStats> | undefined): boolean {\n    return proto2.util.equals(RtcStats, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.RtcStats.Codec\n */\nexport class RtcStats_Codec extends Message<RtcStats_Codec> {\n  /**\n   * @generated from field: required livekit.proto.RtcStatsData rtc = 1;\n   */\n  rtc?: RtcStatsData;\n\n  /**\n   * @generated from field: required livekit.proto.CodecStats codec = 2;\n   */\n  codec?: CodecStats;\n\n  constructor(data?: PartialMessage<RtcStats_Codec>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.RtcStats.Codec\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"rtc\", kind: \"message\", T: RtcStatsData, req: true },\n    { no: 2, name: \"codec\", kind: \"message\", T: CodecStats, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtcStats_Codec {\n    return new RtcStats_Codec().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtcStats_Codec {\n    return new RtcStats_Codec().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtcStats_Codec {\n    return new RtcStats_Codec().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RtcStats_Codec | PlainMessage<RtcStats_Codec> | undefined, b: RtcStats_Codec | PlainMessage<RtcStats_Codec> | undefined): boolean {\n    return proto2.util.equals(RtcStats_Codec, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.RtcStats.InboundRtp\n */\nexport class RtcStats_InboundRtp extends Message<RtcStats_InboundRtp> {\n  /**\n   * @generated from field: required livekit.proto.RtcStatsData rtc = 1;\n   */\n  rtc?: RtcStatsData;\n\n  /**\n   * @generated from field: required livekit.proto.RtpStreamStats stream = 2;\n   */\n  stream?: RtpStreamStats;\n\n  /**\n   * @generated from field: required livekit.proto.ReceivedRtpStreamStats received = 3;\n   */\n  received?: ReceivedRtpStreamStats;\n\n  /**\n   * @generated from field: required livekit.proto.InboundRtpStreamStats inbound = 4;\n   */\n  inbound?: InboundRtpStreamStats;\n\n  constructor(data?: PartialMessage<RtcStats_InboundRtp>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.RtcStats.InboundRtp\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"rtc\", kind: \"message\", T: RtcStatsData, req: true },\n    { no: 2, name: \"stream\", kind: \"message\", T: RtpStreamStats, req: true },\n    { no: 3, name: \"received\", kind: \"message\", T: ReceivedRtpStreamStats, req: true },\n    { no: 4, name: \"inbound\", kind: \"message\", T: InboundRtpStreamStats, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtcStats_InboundRtp {\n    return new RtcStats_InboundRtp().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtcStats_InboundRtp {\n    return new RtcStats_InboundRtp().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtcStats_InboundRtp {\n    return new RtcStats_InboundRtp().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RtcStats_InboundRtp | PlainMessage<RtcStats_InboundRtp> | undefined, b: RtcStats_InboundRtp | PlainMessage<RtcStats_InboundRtp> | undefined): boolean {\n    return proto2.util.equals(RtcStats_InboundRtp, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.RtcStats.OutboundRtp\n */\nexport class RtcStats_OutboundRtp extends Message<RtcStats_OutboundRtp> {\n  /**\n   * @generated from field: required livekit.proto.RtcStatsData rtc = 1;\n   */\n  rtc?: RtcStatsData;\n\n  /**\n   * @generated from field: required livekit.proto.RtpStreamStats stream = 2;\n   */\n  stream?: RtpStreamStats;\n\n  /**\n   * @generated from field: required livekit.proto.SentRtpStreamStats sent = 3;\n   */\n  sent?: SentRtpStreamStats;\n\n  /**\n   * @generated from field: required livekit.proto.OutboundRtpStreamStats outbound = 4;\n   */\n  outbound?: OutboundRtpStreamStats;\n\n  constructor(data?: PartialMessage<RtcStats_OutboundRtp>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.RtcStats.OutboundRtp\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"rtc\", kind: \"message\", T: RtcStatsData, req: true },\n    { no: 2, name: \"stream\", kind: \"message\", T: RtpStreamStats, req: true },\n    { no: 3, name: \"sent\", kind: \"message\", T: SentRtpStreamStats, req: true },\n    { no: 4, name: \"outbound\", kind: \"message\", T: OutboundRtpStreamStats, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtcStats_OutboundRtp {\n    return new RtcStats_OutboundRtp().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtcStats_OutboundRtp {\n    return new RtcStats_OutboundRtp().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtcStats_OutboundRtp {\n    return new RtcStats_OutboundRtp().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RtcStats_OutboundRtp | PlainMessage<RtcStats_OutboundRtp> | undefined, b: RtcStats_OutboundRtp | PlainMessage<RtcStats_OutboundRtp> | undefined): boolean {\n    return proto2.util.equals(RtcStats_OutboundRtp, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.RtcStats.RemoteInboundRtp\n */\nexport class RtcStats_RemoteInboundRtp extends Message<RtcStats_RemoteInboundRtp> {\n  /**\n   * @generated from field: required livekit.proto.RtcStatsData rtc = 1;\n   */\n  rtc?: RtcStatsData;\n\n  /**\n   * @generated from field: required livekit.proto.RtpStreamStats stream = 2;\n   */\n  stream?: RtpStreamStats;\n\n  /**\n   * @generated from field: required livekit.proto.ReceivedRtpStreamStats received = 3;\n   */\n  received?: ReceivedRtpStreamStats;\n\n  /**\n   * @generated from field: required livekit.proto.RemoteInboundRtpStreamStats remote_inbound = 4;\n   */\n  remoteInbound?: RemoteInboundRtpStreamStats;\n\n  constructor(data?: PartialMessage<RtcStats_RemoteInboundRtp>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.RtcStats.RemoteInboundRtp\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"rtc\", kind: \"message\", T: RtcStatsData, req: true },\n    { no: 2, name: \"stream\", kind: \"message\", T: RtpStreamStats, req: true },\n    { no: 3, name: \"received\", kind: \"message\", T: ReceivedRtpStreamStats, req: true },\n    { no: 4, name: \"remote_inbound\", kind: \"message\", T: RemoteInboundRtpStreamStats, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtcStats_RemoteInboundRtp {\n    return new RtcStats_RemoteInboundRtp().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtcStats_RemoteInboundRtp {\n    return new RtcStats_RemoteInboundRtp().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtcStats_RemoteInboundRtp {\n    return new RtcStats_RemoteInboundRtp().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RtcStats_RemoteInboundRtp | PlainMessage<RtcStats_RemoteInboundRtp> | undefined, b: RtcStats_RemoteInboundRtp | PlainMessage<RtcStats_RemoteInboundRtp> | undefined): boolean {\n    return proto2.util.equals(RtcStats_RemoteInboundRtp, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.RtcStats.RemoteOutboundRtp\n */\nexport class RtcStats_RemoteOutboundRtp extends Message<RtcStats_RemoteOutboundRtp> {\n  /**\n   * @generated from field: required livekit.proto.RtcStatsData rtc = 1;\n   */\n  rtc?: RtcStatsData;\n\n  /**\n   * @generated from field: required livekit.proto.RtpStreamStats stream = 2;\n   */\n  stream?: RtpStreamStats;\n\n  /**\n   * @generated from field: required livekit.proto.SentRtpStreamStats sent = 3;\n   */\n  sent?: SentRtpStreamStats;\n\n  /**\n   * @generated from field: required livekit.proto.RemoteOutboundRtpStreamStats remote_outbound = 4;\n   */\n  remoteOutbound?: RemoteOutboundRtpStreamStats;\n\n  constructor(data?: PartialMessage<RtcStats_RemoteOutboundRtp>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.RtcStats.RemoteOutboundRtp\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"rtc\", kind: \"message\", T: RtcStatsData, req: true },\n    { no: 2, name: \"stream\", kind: \"message\", T: RtpStreamStats, req: true },\n    { no: 3, name: \"sent\", kind: \"message\", T: SentRtpStreamStats, req: true },\n    { no: 4, name: \"remote_outbound\", kind: \"message\", T: RemoteOutboundRtpStreamStats, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtcStats_RemoteOutboundRtp {\n    return new RtcStats_RemoteOutboundRtp().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtcStats_RemoteOutboundRtp {\n    return new RtcStats_RemoteOutboundRtp().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtcStats_RemoteOutboundRtp {\n    return new RtcStats_RemoteOutboundRtp().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RtcStats_RemoteOutboundRtp | PlainMessage<RtcStats_RemoteOutboundRtp> | undefined, b: RtcStats_RemoteOutboundRtp | PlainMessage<RtcStats_RemoteOutboundRtp> | undefined): boolean {\n    return proto2.util.equals(RtcStats_RemoteOutboundRtp, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.RtcStats.MediaSource\n */\nexport class RtcStats_MediaSource extends Message<RtcStats_MediaSource> {\n  /**\n   * @generated from field: required livekit.proto.RtcStatsData rtc = 1;\n   */\n  rtc?: RtcStatsData;\n\n  /**\n   * @generated from field: required livekit.proto.MediaSourceStats source = 2;\n   */\n  source?: MediaSourceStats;\n\n  /**\n   * @generated from field: required livekit.proto.AudioSourceStats audio = 3;\n   */\n  audio?: AudioSourceStats;\n\n  /**\n   * @generated from field: required livekit.proto.VideoSourceStats video = 4;\n   */\n  video?: VideoSourceStats;\n\n  constructor(data?: PartialMessage<RtcStats_MediaSource>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.RtcStats.MediaSource\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"rtc\", kind: \"message\", T: RtcStatsData, req: true },\n    { no: 2, name: \"source\", kind: \"message\", T: MediaSourceStats, req: true },\n    { no: 3, name: \"audio\", kind: \"message\", T: AudioSourceStats, req: true },\n    { no: 4, name: \"video\", kind: \"message\", T: VideoSourceStats, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtcStats_MediaSource {\n    return new RtcStats_MediaSource().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtcStats_MediaSource {\n    return new RtcStats_MediaSource().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtcStats_MediaSource {\n    return new RtcStats_MediaSource().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RtcStats_MediaSource | PlainMessage<RtcStats_MediaSource> | undefined, b: RtcStats_MediaSource | PlainMessage<RtcStats_MediaSource> | undefined): boolean {\n    return proto2.util.equals(RtcStats_MediaSource, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.RtcStats.MediaPlayout\n */\nexport class RtcStats_MediaPlayout extends Message<RtcStats_MediaPlayout> {\n  /**\n   * @generated from field: required livekit.proto.RtcStatsData rtc = 1;\n   */\n  rtc?: RtcStatsData;\n\n  /**\n   * @generated from field: required livekit.proto.AudioPlayoutStats audio_playout = 2;\n   */\n  audioPlayout?: AudioPlayoutStats;\n\n  constructor(data?: PartialMessage<RtcStats_MediaPlayout>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.RtcStats.MediaPlayout\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"rtc\", kind: \"message\", T: RtcStatsData, req: true },\n    { no: 2, name: \"audio_playout\", kind: \"message\", T: AudioPlayoutStats, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtcStats_MediaPlayout {\n    return new RtcStats_MediaPlayout().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtcStats_MediaPlayout {\n    return new RtcStats_MediaPlayout().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtcStats_MediaPlayout {\n    return new RtcStats_MediaPlayout().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RtcStats_MediaPlayout | PlainMessage<RtcStats_MediaPlayout> | undefined, b: RtcStats_MediaPlayout | PlainMessage<RtcStats_MediaPlayout> | undefined): boolean {\n    return proto2.util.equals(RtcStats_MediaPlayout, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.RtcStats.PeerConnection\n */\nexport class RtcStats_PeerConnection extends Message<RtcStats_PeerConnection> {\n  /**\n   * @generated from field: required livekit.proto.RtcStatsData rtc = 1;\n   */\n  rtc?: RtcStatsData;\n\n  /**\n   * @generated from field: required livekit.proto.PeerConnectionStats pc = 2;\n   */\n  pc?: PeerConnectionStats;\n\n  constructor(data?: PartialMessage<RtcStats_PeerConnection>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.RtcStats.PeerConnection\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"rtc\", kind: \"message\", T: RtcStatsData, req: true },\n    { no: 2, name: \"pc\", kind: \"message\", T: PeerConnectionStats, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtcStats_PeerConnection {\n    return new RtcStats_PeerConnection().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtcStats_PeerConnection {\n    return new RtcStats_PeerConnection().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtcStats_PeerConnection {\n    return new RtcStats_PeerConnection().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RtcStats_PeerConnection | PlainMessage<RtcStats_PeerConnection> | undefined, b: RtcStats_PeerConnection | PlainMessage<RtcStats_PeerConnection> | undefined): boolean {\n    return proto2.util.equals(RtcStats_PeerConnection, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.RtcStats.DataChannel\n */\nexport class RtcStats_DataChannel extends Message<RtcStats_DataChannel> {\n  /**\n   * @generated from field: required livekit.proto.RtcStatsData rtc = 1;\n   */\n  rtc?: RtcStatsData;\n\n  /**\n   * @generated from field: required livekit.proto.DataChannelStats dc = 2;\n   */\n  dc?: DataChannelStats;\n\n  constructor(data?: PartialMessage<RtcStats_DataChannel>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.RtcStats.DataChannel\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"rtc\", kind: \"message\", T: RtcStatsData, req: true },\n    { no: 2, name: \"dc\", kind: \"message\", T: DataChannelStats, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtcStats_DataChannel {\n    return new RtcStats_DataChannel().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtcStats_DataChannel {\n    return new RtcStats_DataChannel().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtcStats_DataChannel {\n    return new RtcStats_DataChannel().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RtcStats_DataChannel | PlainMessage<RtcStats_DataChannel> | undefined, b: RtcStats_DataChannel | PlainMessage<RtcStats_DataChannel> | undefined): boolean {\n    return proto2.util.equals(RtcStats_DataChannel, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.RtcStats.Transport\n */\nexport class RtcStats_Transport extends Message<RtcStats_Transport> {\n  /**\n   * @generated from field: required livekit.proto.RtcStatsData rtc = 1;\n   */\n  rtc?: RtcStatsData;\n\n  /**\n   * @generated from field: required livekit.proto.TransportStats transport = 2;\n   */\n  transport?: TransportStats;\n\n  constructor(data?: PartialMessage<RtcStats_Transport>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.RtcStats.Transport\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"rtc\", kind: \"message\", T: RtcStatsData, req: true },\n    { no: 2, name: \"transport\", kind: \"message\", T: TransportStats, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtcStats_Transport {\n    return new RtcStats_Transport().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtcStats_Transport {\n    return new RtcStats_Transport().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtcStats_Transport {\n    return new RtcStats_Transport().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RtcStats_Transport | PlainMessage<RtcStats_Transport> | undefined, b: RtcStats_Transport | PlainMessage<RtcStats_Transport> | undefined): boolean {\n    return proto2.util.equals(RtcStats_Transport, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.RtcStats.CandidatePair\n */\nexport class RtcStats_CandidatePair extends Message<RtcStats_CandidatePair> {\n  /**\n   * @generated from field: required livekit.proto.RtcStatsData rtc = 1;\n   */\n  rtc?: RtcStatsData;\n\n  /**\n   * @generated from field: required livekit.proto.CandidatePairStats candidate_pair = 2;\n   */\n  candidatePair?: CandidatePairStats;\n\n  constructor(data?: PartialMessage<RtcStats_CandidatePair>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.RtcStats.CandidatePair\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"rtc\", kind: \"message\", T: RtcStatsData, req: true },\n    { no: 2, name: \"candidate_pair\", kind: \"message\", T: CandidatePairStats, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtcStats_CandidatePair {\n    return new RtcStats_CandidatePair().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtcStats_CandidatePair {\n    return new RtcStats_CandidatePair().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtcStats_CandidatePair {\n    return new RtcStats_CandidatePair().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RtcStats_CandidatePair | PlainMessage<RtcStats_CandidatePair> | undefined, b: RtcStats_CandidatePair | PlainMessage<RtcStats_CandidatePair> | undefined): boolean {\n    return proto2.util.equals(RtcStats_CandidatePair, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.RtcStats.LocalCandidate\n */\nexport class RtcStats_LocalCandidate extends Message<RtcStats_LocalCandidate> {\n  /**\n   * @generated from field: required livekit.proto.RtcStatsData rtc = 1;\n   */\n  rtc?: RtcStatsData;\n\n  /**\n   * @generated from field: required livekit.proto.IceCandidateStats candidate = 2;\n   */\n  candidate?: IceCandidateStats;\n\n  constructor(data?: PartialMessage<RtcStats_LocalCandidate>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.RtcStats.LocalCandidate\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"rtc\", kind: \"message\", T: RtcStatsData, req: true },\n    { no: 2, name: \"candidate\", kind: \"message\", T: IceCandidateStats, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtcStats_LocalCandidate {\n    return new RtcStats_LocalCandidate().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtcStats_LocalCandidate {\n    return new RtcStats_LocalCandidate().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtcStats_LocalCandidate {\n    return new RtcStats_LocalCandidate().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RtcStats_LocalCandidate | PlainMessage<RtcStats_LocalCandidate> | undefined, b: RtcStats_LocalCandidate | PlainMessage<RtcStats_LocalCandidate> | undefined): boolean {\n    return proto2.util.equals(RtcStats_LocalCandidate, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.RtcStats.RemoteCandidate\n */\nexport class RtcStats_RemoteCandidate extends Message<RtcStats_RemoteCandidate> {\n  /**\n   * @generated from field: required livekit.proto.RtcStatsData rtc = 1;\n   */\n  rtc?: RtcStatsData;\n\n  /**\n   * @generated from field: required livekit.proto.IceCandidateStats candidate = 2;\n   */\n  candidate?: IceCandidateStats;\n\n  constructor(data?: PartialMessage<RtcStats_RemoteCandidate>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.RtcStats.RemoteCandidate\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"rtc\", kind: \"message\", T: RtcStatsData, req: true },\n    { no: 2, name: \"candidate\", kind: \"message\", T: IceCandidateStats, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtcStats_RemoteCandidate {\n    return new RtcStats_RemoteCandidate().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtcStats_RemoteCandidate {\n    return new RtcStats_RemoteCandidate().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtcStats_RemoteCandidate {\n    return new RtcStats_RemoteCandidate().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RtcStats_RemoteCandidate | PlainMessage<RtcStats_RemoteCandidate> | undefined, b: RtcStats_RemoteCandidate | PlainMessage<RtcStats_RemoteCandidate> | undefined): boolean {\n    return proto2.util.equals(RtcStats_RemoteCandidate, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.RtcStats.Certificate\n */\nexport class RtcStats_Certificate extends Message<RtcStats_Certificate> {\n  /**\n   * @generated from field: required livekit.proto.RtcStatsData rtc = 1;\n   */\n  rtc?: RtcStatsData;\n\n  /**\n   * @generated from field: required livekit.proto.CertificateStats certificate = 2;\n   */\n  certificate?: CertificateStats;\n\n  constructor(data?: PartialMessage<RtcStats_Certificate>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.RtcStats.Certificate\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"rtc\", kind: \"message\", T: RtcStatsData, req: true },\n    { no: 2, name: \"certificate\", kind: \"message\", T: CertificateStats, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtcStats_Certificate {\n    return new RtcStats_Certificate().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtcStats_Certificate {\n    return new RtcStats_Certificate().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtcStats_Certificate {\n    return new RtcStats_Certificate().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RtcStats_Certificate | PlainMessage<RtcStats_Certificate> | undefined, b: RtcStats_Certificate | PlainMessage<RtcStats_Certificate> | undefined): boolean {\n    return proto2.util.equals(RtcStats_Certificate, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.RtcStats.Stream\n */\nexport class RtcStats_Stream extends Message<RtcStats_Stream> {\n  /**\n   * @generated from field: required livekit.proto.RtcStatsData rtc = 1;\n   */\n  rtc?: RtcStatsData;\n\n  /**\n   * @generated from field: required livekit.proto.StreamStats stream = 2;\n   */\n  stream?: StreamStats;\n\n  constructor(data?: PartialMessage<RtcStats_Stream>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.RtcStats.Stream\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"rtc\", kind: \"message\", T: RtcStatsData, req: true },\n    { no: 2, name: \"stream\", kind: \"message\", T: StreamStats, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtcStats_Stream {\n    return new RtcStats_Stream().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtcStats_Stream {\n    return new RtcStats_Stream().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtcStats_Stream {\n    return new RtcStats_Stream().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RtcStats_Stream | PlainMessage<RtcStats_Stream> | undefined, b: RtcStats_Stream | PlainMessage<RtcStats_Stream> | undefined): boolean {\n    return proto2.util.equals(RtcStats_Stream, a, b);\n  }\n}\n\n/**\n * Deprecated\n *\n * @generated from message livekit.proto.RtcStats.Track\n */\nexport class RtcStats_Track extends Message<RtcStats_Track> {\n  constructor(data?: PartialMessage<RtcStats_Track>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.RtcStats.Track\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtcStats_Track {\n    return new RtcStats_Track().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtcStats_Track {\n    return new RtcStats_Track().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtcStats_Track {\n    return new RtcStats_Track().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RtcStats_Track | PlainMessage<RtcStats_Track> | undefined, b: RtcStats_Track | PlainMessage<RtcStats_Track> | undefined): boolean {\n    return proto2.util.equals(RtcStats_Track, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.RtcStatsData\n */\nexport class RtcStatsData extends Message<RtcStatsData> {\n  /**\n   * @generated from field: required string id = 1;\n   */\n  id?: string;\n\n  /**\n   * @generated from field: required int64 timestamp = 2;\n   */\n  timestamp?: bigint;\n\n  constructor(data?: PartialMessage<RtcStatsData>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.RtcStatsData\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 2, name: \"timestamp\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtcStatsData {\n    return new RtcStatsData().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtcStatsData {\n    return new RtcStatsData().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtcStatsData {\n    return new RtcStatsData().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RtcStatsData | PlainMessage<RtcStatsData> | undefined, b: RtcStatsData | PlainMessage<RtcStatsData> | undefined): boolean {\n    return proto2.util.equals(RtcStatsData, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.CodecStats\n */\nexport class CodecStats extends Message<CodecStats> {\n  /**\n   * @generated from field: required uint32 payload_type = 1;\n   */\n  payloadType?: number;\n\n  /**\n   * @generated from field: required string transport_id = 2;\n   */\n  transportId?: string;\n\n  /**\n   * @generated from field: required string mime_type = 3;\n   */\n  mimeType?: string;\n\n  /**\n   * @generated from field: required uint32 clock_rate = 4;\n   */\n  clockRate?: number;\n\n  /**\n   * @generated from field: required uint32 channels = 5;\n   */\n  channels?: number;\n\n  /**\n   * @generated from field: required string sdp_fmtp_line = 6;\n   */\n  sdpFmtpLine?: string;\n\n  constructor(data?: PartialMessage<CodecStats>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.CodecStats\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"payload_type\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 2, name: \"transport_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 3, name: \"mime_type\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 4, name: \"clock_rate\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 5, name: \"channels\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 6, name: \"sdp_fmtp_line\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodecStats {\n    return new CodecStats().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodecStats {\n    return new CodecStats().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodecStats {\n    return new CodecStats().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: CodecStats | PlainMessage<CodecStats> | undefined, b: CodecStats | PlainMessage<CodecStats> | undefined): boolean {\n    return proto2.util.equals(CodecStats, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.RtpStreamStats\n */\nexport class RtpStreamStats extends Message<RtpStreamStats> {\n  /**\n   * @generated from field: required uint32 ssrc = 1;\n   */\n  ssrc?: number;\n\n  /**\n   * @generated from field: required string kind = 2;\n   */\n  kind?: string;\n\n  /**\n   * @generated from field: required string transport_id = 3;\n   */\n  transportId?: string;\n\n  /**\n   * @generated from field: required string codec_id = 4;\n   */\n  codecId?: string;\n\n  constructor(data?: PartialMessage<RtpStreamStats>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.RtpStreamStats\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"ssrc\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 2, name: \"kind\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 3, name: \"transport_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 4, name: \"codec_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RtpStreamStats {\n    return new RtpStreamStats().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RtpStreamStats {\n    return new RtpStreamStats().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RtpStreamStats {\n    return new RtpStreamStats().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RtpStreamStats | PlainMessage<RtpStreamStats> | undefined, b: RtpStreamStats | PlainMessage<RtpStreamStats> | undefined): boolean {\n    return proto2.util.equals(RtpStreamStats, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.ReceivedRtpStreamStats\n */\nexport class ReceivedRtpStreamStats extends Message<ReceivedRtpStreamStats> {\n  /**\n   * @generated from field: required uint64 packets_received = 1;\n   */\n  packetsReceived?: bigint;\n\n  /**\n   * @generated from field: required int64 packets_lost = 2;\n   */\n  packetsLost?: bigint;\n\n  /**\n   * @generated from field: required double jitter = 3;\n   */\n  jitter?: number;\n\n  constructor(data?: PartialMessage<ReceivedRtpStreamStats>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.ReceivedRtpStreamStats\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"packets_received\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"packets_lost\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */, req: true },\n    { no: 3, name: \"jitter\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReceivedRtpStreamStats {\n    return new ReceivedRtpStreamStats().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReceivedRtpStreamStats {\n    return new ReceivedRtpStreamStats().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReceivedRtpStreamStats {\n    return new ReceivedRtpStreamStats().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ReceivedRtpStreamStats | PlainMessage<ReceivedRtpStreamStats> | undefined, b: ReceivedRtpStreamStats | PlainMessage<ReceivedRtpStreamStats> | undefined): boolean {\n    return proto2.util.equals(ReceivedRtpStreamStats, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.InboundRtpStreamStats\n */\nexport class InboundRtpStreamStats extends Message<InboundRtpStreamStats> {\n  /**\n   * @generated from field: required string track_identifier = 1;\n   */\n  trackIdentifier?: string;\n\n  /**\n   * @generated from field: required string mid = 2;\n   */\n  mid?: string;\n\n  /**\n   * @generated from field: required string remote_id = 3;\n   */\n  remoteId?: string;\n\n  /**\n   * @generated from field: required uint32 frames_decoded = 4;\n   */\n  framesDecoded?: number;\n\n  /**\n   * @generated from field: required uint32 key_frames_decoded = 5;\n   */\n  keyFramesDecoded?: number;\n\n  /**\n   * @generated from field: required uint32 frames_rendered = 6;\n   */\n  framesRendered?: number;\n\n  /**\n   * @generated from field: required uint32 frames_dropped = 7;\n   */\n  framesDropped?: number;\n\n  /**\n   * @generated from field: required uint32 frame_width = 8;\n   */\n  frameWidth?: number;\n\n  /**\n   * @generated from field: required uint32 frame_height = 9;\n   */\n  frameHeight?: number;\n\n  /**\n   * @generated from field: required double frames_per_second = 10;\n   */\n  framesPerSecond?: number;\n\n  /**\n   * @generated from field: required uint64 qp_sum = 11;\n   */\n  qpSum?: bigint;\n\n  /**\n   * @generated from field: required double total_decode_time = 12;\n   */\n  totalDecodeTime?: number;\n\n  /**\n   * @generated from field: required double total_inter_frame_delay = 13;\n   */\n  totalInterFrameDelay?: number;\n\n  /**\n   * @generated from field: required double total_squared_inter_frame_delay = 14;\n   */\n  totalSquaredInterFrameDelay?: number;\n\n  /**\n   * @generated from field: required uint32 pause_count = 15;\n   */\n  pauseCount?: number;\n\n  /**\n   * @generated from field: required double total_pause_duration = 16;\n   */\n  totalPauseDuration?: number;\n\n  /**\n   * @generated from field: required uint32 freeze_count = 17;\n   */\n  freezeCount?: number;\n\n  /**\n   * @generated from field: required double total_freeze_duration = 18;\n   */\n  totalFreezeDuration?: number;\n\n  /**\n   * @generated from field: required double last_packet_received_timestamp = 19;\n   */\n  lastPacketReceivedTimestamp?: number;\n\n  /**\n   * @generated from field: required uint64 header_bytes_received = 20;\n   */\n  headerBytesReceived?: bigint;\n\n  /**\n   * @generated from field: required uint64 packets_discarded = 21;\n   */\n  packetsDiscarded?: bigint;\n\n  /**\n   * @generated from field: required uint64 fec_bytes_received = 22;\n   */\n  fecBytesReceived?: bigint;\n\n  /**\n   * @generated from field: required uint64 fec_packets_received = 23;\n   */\n  fecPacketsReceived?: bigint;\n\n  /**\n   * @generated from field: required uint64 fec_packets_discarded = 24;\n   */\n  fecPacketsDiscarded?: bigint;\n\n  /**\n   * @generated from field: required uint64 bytes_received = 25;\n   */\n  bytesReceived?: bigint;\n\n  /**\n   * @generated from field: required uint32 nack_count = 26;\n   */\n  nackCount?: number;\n\n  /**\n   * @generated from field: required uint32 fir_count = 27;\n   */\n  firCount?: number;\n\n  /**\n   * @generated from field: required uint32 pli_count = 28;\n   */\n  pliCount?: number;\n\n  /**\n   * @generated from field: required double total_processing_delay = 29;\n   */\n  totalProcessingDelay?: number;\n\n  /**\n   * @generated from field: required double estimated_playout_timestamp = 30;\n   */\n  estimatedPlayoutTimestamp?: number;\n\n  /**\n   * @generated from field: required double jitter_buffer_delay = 31;\n   */\n  jitterBufferDelay?: number;\n\n  /**\n   * @generated from field: required double jitter_buffer_target_delay = 32;\n   */\n  jitterBufferTargetDelay?: number;\n\n  /**\n   * @generated from field: required uint64 jitter_buffer_emitted_count = 33;\n   */\n  jitterBufferEmittedCount?: bigint;\n\n  /**\n   * @generated from field: required double jitter_buffer_minimum_delay = 34;\n   */\n  jitterBufferMinimumDelay?: number;\n\n  /**\n   * @generated from field: required uint64 total_samples_received = 35;\n   */\n  totalSamplesReceived?: bigint;\n\n  /**\n   * @generated from field: required uint64 concealed_samples = 36;\n   */\n  concealedSamples?: bigint;\n\n  /**\n   * @generated from field: required uint64 silent_concealed_samples = 37;\n   */\n  silentConcealedSamples?: bigint;\n\n  /**\n   * @generated from field: required uint64 concealment_events = 38;\n   */\n  concealmentEvents?: bigint;\n\n  /**\n   * @generated from field: required uint64 inserted_samples_for_deceleration = 39;\n   */\n  insertedSamplesForDeceleration?: bigint;\n\n  /**\n   * @generated from field: required uint64 removed_samples_for_acceleration = 40;\n   */\n  removedSamplesForAcceleration?: bigint;\n\n  /**\n   * @generated from field: required double audio_level = 41;\n   */\n  audioLevel?: number;\n\n  /**\n   * @generated from field: required double total_audio_energy = 42;\n   */\n  totalAudioEnergy?: number;\n\n  /**\n   * @generated from field: required double total_samples_duration = 43;\n   */\n  totalSamplesDuration?: number;\n\n  /**\n   * @generated from field: required uint64 frames_received = 44;\n   */\n  framesReceived?: bigint;\n\n  /**\n   * @generated from field: required string decoder_implementation = 45;\n   */\n  decoderImplementation?: string;\n\n  /**\n   * @generated from field: required string playout_id = 46;\n   */\n  playoutId?: string;\n\n  /**\n   * @generated from field: required bool power_efficient_decoder = 47;\n   */\n  powerEfficientDecoder?: boolean;\n\n  /**\n   * @generated from field: required uint64 frames_assembled_from_multiple_packets = 48;\n   */\n  framesAssembledFromMultiplePackets?: bigint;\n\n  /**\n   * @generated from field: required double total_assembly_time = 49;\n   */\n  totalAssemblyTime?: number;\n\n  /**\n   * @generated from field: required uint64 retransmitted_packets_received = 50;\n   */\n  retransmittedPacketsReceived?: bigint;\n\n  /**\n   * @generated from field: required uint64 retransmitted_bytes_received = 51;\n   */\n  retransmittedBytesReceived?: bigint;\n\n  /**\n   * @generated from field: required uint32 rtx_ssrc = 52;\n   */\n  rtxSsrc?: number;\n\n  /**\n   * @generated from field: required uint32 fec_ssrc = 53;\n   */\n  fecSsrc?: number;\n\n  constructor(data?: PartialMessage<InboundRtpStreamStats>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.InboundRtpStreamStats\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"track_identifier\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 2, name: \"mid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 3, name: \"remote_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 4, name: \"frames_decoded\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 5, name: \"key_frames_decoded\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 6, name: \"frames_rendered\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 7, name: \"frames_dropped\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 8, name: \"frame_width\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 9, name: \"frame_height\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 10, name: \"frames_per_second\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 11, name: \"qp_sum\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 12, name: \"total_decode_time\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 13, name: \"total_inter_frame_delay\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 14, name: \"total_squared_inter_frame_delay\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 15, name: \"pause_count\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 16, name: \"total_pause_duration\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 17, name: \"freeze_count\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 18, name: \"total_freeze_duration\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 19, name: \"last_packet_received_timestamp\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 20, name: \"header_bytes_received\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 21, name: \"packets_discarded\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 22, name: \"fec_bytes_received\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 23, name: \"fec_packets_received\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 24, name: \"fec_packets_discarded\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 25, name: \"bytes_received\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 26, name: \"nack_count\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 27, name: \"fir_count\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 28, name: \"pli_count\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 29, name: \"total_processing_delay\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 30, name: \"estimated_playout_timestamp\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 31, name: \"jitter_buffer_delay\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 32, name: \"jitter_buffer_target_delay\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 33, name: \"jitter_buffer_emitted_count\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 34, name: \"jitter_buffer_minimum_delay\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 35, name: \"total_samples_received\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 36, name: \"concealed_samples\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 37, name: \"silent_concealed_samples\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 38, name: \"concealment_events\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 39, name: \"inserted_samples_for_deceleration\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 40, name: \"removed_samples_for_acceleration\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 41, name: \"audio_level\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 42, name: \"total_audio_energy\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 43, name: \"total_samples_duration\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 44, name: \"frames_received\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 45, name: \"decoder_implementation\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 46, name: \"playout_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 47, name: \"power_efficient_decoder\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, req: true },\n    { no: 48, name: \"frames_assembled_from_multiple_packets\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 49, name: \"total_assembly_time\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 50, name: \"retransmitted_packets_received\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 51, name: \"retransmitted_bytes_received\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 52, name: \"rtx_ssrc\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 53, name: \"fec_ssrc\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InboundRtpStreamStats {\n    return new InboundRtpStreamStats().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InboundRtpStreamStats {\n    return new InboundRtpStreamStats().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InboundRtpStreamStats {\n    return new InboundRtpStreamStats().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: InboundRtpStreamStats | PlainMessage<InboundRtpStreamStats> | undefined, b: InboundRtpStreamStats | PlainMessage<InboundRtpStreamStats> | undefined): boolean {\n    return proto2.util.equals(InboundRtpStreamStats, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.SentRtpStreamStats\n */\nexport class SentRtpStreamStats extends Message<SentRtpStreamStats> {\n  /**\n   * @generated from field: required uint64 packets_sent = 1;\n   */\n  packetsSent?: bigint;\n\n  /**\n   * @generated from field: required uint64 bytes_sent = 2;\n   */\n  bytesSent?: bigint;\n\n  constructor(data?: PartialMessage<SentRtpStreamStats>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.SentRtpStreamStats\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"packets_sent\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"bytes_sent\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SentRtpStreamStats {\n    return new SentRtpStreamStats().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SentRtpStreamStats {\n    return new SentRtpStreamStats().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SentRtpStreamStats {\n    return new SentRtpStreamStats().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: SentRtpStreamStats | PlainMessage<SentRtpStreamStats> | undefined, b: SentRtpStreamStats | PlainMessage<SentRtpStreamStats> | undefined): boolean {\n    return proto2.util.equals(SentRtpStreamStats, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.OutboundRtpStreamStats\n */\nexport class OutboundRtpStreamStats extends Message<OutboundRtpStreamStats> {\n  /**\n   * @generated from field: required string mid = 1;\n   */\n  mid?: string;\n\n  /**\n   * @generated from field: required string media_source_id = 2;\n   */\n  mediaSourceId?: string;\n\n  /**\n   * @generated from field: required string remote_id = 3;\n   */\n  remoteId?: string;\n\n  /**\n   * @generated from field: required string rid = 4;\n   */\n  rid?: string;\n\n  /**\n   * @generated from field: required uint64 header_bytes_sent = 5;\n   */\n  headerBytesSent?: bigint;\n\n  /**\n   * @generated from field: required uint64 retransmitted_packets_sent = 6;\n   */\n  retransmittedPacketsSent?: bigint;\n\n  /**\n   * @generated from field: required uint64 retransmitted_bytes_sent = 7;\n   */\n  retransmittedBytesSent?: bigint;\n\n  /**\n   * @generated from field: required uint32 rtx_ssrc = 8;\n   */\n  rtxSsrc?: number;\n\n  /**\n   * @generated from field: required double target_bitrate = 9;\n   */\n  targetBitrate?: number;\n\n  /**\n   * @generated from field: required uint64 total_encoded_bytes_target = 10;\n   */\n  totalEncodedBytesTarget?: bigint;\n\n  /**\n   * @generated from field: required uint32 frame_width = 11;\n   */\n  frameWidth?: number;\n\n  /**\n   * @generated from field: required uint32 frame_height = 12;\n   */\n  frameHeight?: number;\n\n  /**\n   * @generated from field: required double frames_per_second = 13;\n   */\n  framesPerSecond?: number;\n\n  /**\n   * @generated from field: required uint32 frames_sent = 14;\n   */\n  framesSent?: number;\n\n  /**\n   * @generated from field: required uint32 huge_frames_sent = 15;\n   */\n  hugeFramesSent?: number;\n\n  /**\n   * @generated from field: required uint32 frames_encoded = 16;\n   */\n  framesEncoded?: number;\n\n  /**\n   * @generated from field: required uint32 key_frames_encoded = 17;\n   */\n  keyFramesEncoded?: number;\n\n  /**\n   * @generated from field: required uint64 qp_sum = 18;\n   */\n  qpSum?: bigint;\n\n  /**\n   * @generated from field: required double total_encode_time = 19;\n   */\n  totalEncodeTime?: number;\n\n  /**\n   * @generated from field: required double total_packet_send_delay = 20;\n   */\n  totalPacketSendDelay?: number;\n\n  /**\n   * @generated from field: required livekit.proto.QualityLimitationReason quality_limitation_reason = 21;\n   */\n  qualityLimitationReason?: QualityLimitationReason;\n\n  /**\n   * @generated from field: map<string, double> quality_limitation_durations = 22;\n   */\n  qualityLimitationDurations: { [key: string]: number } = {};\n\n  /**\n   * @generated from field: required uint32 quality_limitation_resolution_changes = 23;\n   */\n  qualityLimitationResolutionChanges?: number;\n\n  /**\n   * @generated from field: required uint32 nack_count = 24;\n   */\n  nackCount?: number;\n\n  /**\n   * @generated from field: required uint32 fir_count = 25;\n   */\n  firCount?: number;\n\n  /**\n   * @generated from field: required uint32 pli_count = 26;\n   */\n  pliCount?: number;\n\n  /**\n   * @generated from field: required string encoder_implementation = 27;\n   */\n  encoderImplementation?: string;\n\n  /**\n   * @generated from field: required bool power_efficient_encoder = 28;\n   */\n  powerEfficientEncoder?: boolean;\n\n  /**\n   * @generated from field: required bool active = 29;\n   */\n  active?: boolean;\n\n  /**\n   * @generated from field: required string scalability_mode = 30;\n   */\n  scalabilityMode?: string;\n\n  constructor(data?: PartialMessage<OutboundRtpStreamStats>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.OutboundRtpStreamStats\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"mid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 2, name: \"media_source_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 3, name: \"remote_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 4, name: \"rid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 5, name: \"header_bytes_sent\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 6, name: \"retransmitted_packets_sent\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 7, name: \"retransmitted_bytes_sent\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 8, name: \"rtx_ssrc\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 9, name: \"target_bitrate\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 10, name: \"total_encoded_bytes_target\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 11, name: \"frame_width\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 12, name: \"frame_height\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 13, name: \"frames_per_second\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 14, name: \"frames_sent\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 15, name: \"huge_frames_sent\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 16, name: \"frames_encoded\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 17, name: \"key_frames_encoded\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 18, name: \"qp_sum\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 19, name: \"total_encode_time\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 20, name: \"total_packet_send_delay\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 21, name: \"quality_limitation_reason\", kind: \"enum\", T: proto2.getEnumType(QualityLimitationReason), req: true },\n    { no: 22, name: \"quality_limitation_durations\", kind: \"map\", K: 9 /* ScalarType.STRING */, V: {kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */} },\n    { no: 23, name: \"quality_limitation_resolution_changes\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 24, name: \"nack_count\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 25, name: \"fir_count\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 26, name: \"pli_count\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 27, name: \"encoder_implementation\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 28, name: \"power_efficient_encoder\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, req: true },\n    { no: 29, name: \"active\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, req: true },\n    { no: 30, name: \"scalability_mode\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OutboundRtpStreamStats {\n    return new OutboundRtpStreamStats().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OutboundRtpStreamStats {\n    return new OutboundRtpStreamStats().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OutboundRtpStreamStats {\n    return new OutboundRtpStreamStats().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: OutboundRtpStreamStats | PlainMessage<OutboundRtpStreamStats> | undefined, b: OutboundRtpStreamStats | PlainMessage<OutboundRtpStreamStats> | undefined): boolean {\n    return proto2.util.equals(OutboundRtpStreamStats, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.RemoteInboundRtpStreamStats\n */\nexport class RemoteInboundRtpStreamStats extends Message<RemoteInboundRtpStreamStats> {\n  /**\n   * @generated from field: required string local_id = 1;\n   */\n  localId?: string;\n\n  /**\n   * @generated from field: required double round_trip_time = 2;\n   */\n  roundTripTime?: number;\n\n  /**\n   * @generated from field: required double total_round_trip_time = 3;\n   */\n  totalRoundTripTime?: number;\n\n  /**\n   * @generated from field: required double fraction_lost = 4;\n   */\n  fractionLost?: number;\n\n  /**\n   * @generated from field: required uint64 round_trip_time_measurements = 5;\n   */\n  roundTripTimeMeasurements?: bigint;\n\n  constructor(data?: PartialMessage<RemoteInboundRtpStreamStats>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.RemoteInboundRtpStreamStats\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"local_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 2, name: \"round_trip_time\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 3, name: \"total_round_trip_time\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 4, name: \"fraction_lost\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 5, name: \"round_trip_time_measurements\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoteInboundRtpStreamStats {\n    return new RemoteInboundRtpStreamStats().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoteInboundRtpStreamStats {\n    return new RemoteInboundRtpStreamStats().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoteInboundRtpStreamStats {\n    return new RemoteInboundRtpStreamStats().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RemoteInboundRtpStreamStats | PlainMessage<RemoteInboundRtpStreamStats> | undefined, b: RemoteInboundRtpStreamStats | PlainMessage<RemoteInboundRtpStreamStats> | undefined): boolean {\n    return proto2.util.equals(RemoteInboundRtpStreamStats, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.RemoteOutboundRtpStreamStats\n */\nexport class RemoteOutboundRtpStreamStats extends Message<RemoteOutboundRtpStreamStats> {\n  /**\n   * @generated from field: required string local_id = 1;\n   */\n  localId?: string;\n\n  /**\n   * @generated from field: required double remote_timestamp = 2;\n   */\n  remoteTimestamp?: number;\n\n  /**\n   * @generated from field: required uint64 reports_sent = 3;\n   */\n  reportsSent?: bigint;\n\n  /**\n   * @generated from field: required double round_trip_time = 4;\n   */\n  roundTripTime?: number;\n\n  /**\n   * @generated from field: required double total_round_trip_time = 5;\n   */\n  totalRoundTripTime?: number;\n\n  /**\n   * @generated from field: required uint64 round_trip_time_measurements = 6;\n   */\n  roundTripTimeMeasurements?: bigint;\n\n  constructor(data?: PartialMessage<RemoteOutboundRtpStreamStats>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.RemoteOutboundRtpStreamStats\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"local_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 2, name: \"remote_timestamp\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 3, name: \"reports_sent\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 4, name: \"round_trip_time\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 5, name: \"total_round_trip_time\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 6, name: \"round_trip_time_measurements\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoteOutboundRtpStreamStats {\n    return new RemoteOutboundRtpStreamStats().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoteOutboundRtpStreamStats {\n    return new RemoteOutboundRtpStreamStats().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoteOutboundRtpStreamStats {\n    return new RemoteOutboundRtpStreamStats().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RemoteOutboundRtpStreamStats | PlainMessage<RemoteOutboundRtpStreamStats> | undefined, b: RemoteOutboundRtpStreamStats | PlainMessage<RemoteOutboundRtpStreamStats> | undefined): boolean {\n    return proto2.util.equals(RemoteOutboundRtpStreamStats, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.MediaSourceStats\n */\nexport class MediaSourceStats extends Message<MediaSourceStats> {\n  /**\n   * @generated from field: required string track_identifier = 1;\n   */\n  trackIdentifier?: string;\n\n  /**\n   * @generated from field: required string kind = 2;\n   */\n  kind?: string;\n\n  constructor(data?: PartialMessage<MediaSourceStats>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.MediaSourceStats\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"track_identifier\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 2, name: \"kind\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MediaSourceStats {\n    return new MediaSourceStats().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MediaSourceStats {\n    return new MediaSourceStats().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MediaSourceStats {\n    return new MediaSourceStats().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: MediaSourceStats | PlainMessage<MediaSourceStats> | undefined, b: MediaSourceStats | PlainMessage<MediaSourceStats> | undefined): boolean {\n    return proto2.util.equals(MediaSourceStats, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.AudioSourceStats\n */\nexport class AudioSourceStats extends Message<AudioSourceStats> {\n  /**\n   * @generated from field: required double audio_level = 1;\n   */\n  audioLevel?: number;\n\n  /**\n   * @generated from field: required double total_audio_energy = 2;\n   */\n  totalAudioEnergy?: number;\n\n  /**\n   * @generated from field: required double total_samples_duration = 3;\n   */\n  totalSamplesDuration?: number;\n\n  /**\n   * @generated from field: required double echo_return_loss = 4;\n   */\n  echoReturnLoss?: number;\n\n  /**\n   * @generated from field: required double echo_return_loss_enhancement = 5;\n   */\n  echoReturnLossEnhancement?: number;\n\n  /**\n   * @generated from field: required double dropped_samples_duration = 6;\n   */\n  droppedSamplesDuration?: number;\n\n  /**\n   * @generated from field: required uint32 dropped_samples_events = 7;\n   */\n  droppedSamplesEvents?: number;\n\n  /**\n   * @generated from field: required double total_capture_delay = 8;\n   */\n  totalCaptureDelay?: number;\n\n  /**\n   * @generated from field: required uint64 total_samples_captured = 9;\n   */\n  totalSamplesCaptured?: bigint;\n\n  constructor(data?: PartialMessage<AudioSourceStats>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.AudioSourceStats\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"audio_level\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 2, name: \"total_audio_energy\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 3, name: \"total_samples_duration\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 4, name: \"echo_return_loss\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 5, name: \"echo_return_loss_enhancement\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 6, name: \"dropped_samples_duration\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 7, name: \"dropped_samples_events\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 8, name: \"total_capture_delay\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 9, name: \"total_samples_captured\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AudioSourceStats {\n    return new AudioSourceStats().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AudioSourceStats {\n    return new AudioSourceStats().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AudioSourceStats {\n    return new AudioSourceStats().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: AudioSourceStats | PlainMessage<AudioSourceStats> | undefined, b: AudioSourceStats | PlainMessage<AudioSourceStats> | undefined): boolean {\n    return proto2.util.equals(AudioSourceStats, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.VideoSourceStats\n */\nexport class VideoSourceStats extends Message<VideoSourceStats> {\n  /**\n   * @generated from field: required uint32 width = 1;\n   */\n  width?: number;\n\n  /**\n   * @generated from field: required uint32 height = 2;\n   */\n  height?: number;\n\n  /**\n   * @generated from field: required uint32 frames = 3;\n   */\n  frames?: number;\n\n  /**\n   * @generated from field: required double frames_per_second = 4;\n   */\n  framesPerSecond?: number;\n\n  constructor(data?: PartialMessage<VideoSourceStats>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.VideoSourceStats\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"width\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 2, name: \"height\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 3, name: \"frames\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 4, name: \"frames_per_second\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VideoSourceStats {\n    return new VideoSourceStats().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VideoSourceStats {\n    return new VideoSourceStats().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VideoSourceStats {\n    return new VideoSourceStats().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: VideoSourceStats | PlainMessage<VideoSourceStats> | undefined, b: VideoSourceStats | PlainMessage<VideoSourceStats> | undefined): boolean {\n    return proto2.util.equals(VideoSourceStats, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.AudioPlayoutStats\n */\nexport class AudioPlayoutStats extends Message<AudioPlayoutStats> {\n  /**\n   * @generated from field: required string kind = 1;\n   */\n  kind?: string;\n\n  /**\n   * @generated from field: required double synthesized_samples_duration = 2;\n   */\n  synthesizedSamplesDuration?: number;\n\n  /**\n   * @generated from field: required uint32 synthesized_samples_events = 3;\n   */\n  synthesizedSamplesEvents?: number;\n\n  /**\n   * @generated from field: required double total_samples_duration = 4;\n   */\n  totalSamplesDuration?: number;\n\n  /**\n   * @generated from field: required double total_playout_delay = 5;\n   */\n  totalPlayoutDelay?: number;\n\n  /**\n   * @generated from field: required uint64 total_samples_count = 6;\n   */\n  totalSamplesCount?: bigint;\n\n  constructor(data?: PartialMessage<AudioPlayoutStats>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.AudioPlayoutStats\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"kind\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 2, name: \"synthesized_samples_duration\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 3, name: \"synthesized_samples_events\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 4, name: \"total_samples_duration\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 5, name: \"total_playout_delay\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 6, name: \"total_samples_count\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AudioPlayoutStats {\n    return new AudioPlayoutStats().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AudioPlayoutStats {\n    return new AudioPlayoutStats().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AudioPlayoutStats {\n    return new AudioPlayoutStats().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: AudioPlayoutStats | PlainMessage<AudioPlayoutStats> | undefined, b: AudioPlayoutStats | PlainMessage<AudioPlayoutStats> | undefined): boolean {\n    return proto2.util.equals(AudioPlayoutStats, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.PeerConnectionStats\n */\nexport class PeerConnectionStats extends Message<PeerConnectionStats> {\n  /**\n   * @generated from field: required uint32 data_channels_opened = 1;\n   */\n  dataChannelsOpened?: number;\n\n  /**\n   * @generated from field: required uint32 data_channels_closed = 2;\n   */\n  dataChannelsClosed?: number;\n\n  constructor(data?: PartialMessage<PeerConnectionStats>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.PeerConnectionStats\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"data_channels_opened\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 2, name: \"data_channels_closed\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PeerConnectionStats {\n    return new PeerConnectionStats().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PeerConnectionStats {\n    return new PeerConnectionStats().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PeerConnectionStats {\n    return new PeerConnectionStats().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: PeerConnectionStats | PlainMessage<PeerConnectionStats> | undefined, b: PeerConnectionStats | PlainMessage<PeerConnectionStats> | undefined): boolean {\n    return proto2.util.equals(PeerConnectionStats, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.DataChannelStats\n */\nexport class DataChannelStats extends Message<DataChannelStats> {\n  /**\n   * @generated from field: required string label = 1;\n   */\n  label?: string;\n\n  /**\n   * @generated from field: required string protocol = 2;\n   */\n  protocol?: string;\n\n  /**\n   * @generated from field: required int32 data_channel_identifier = 3;\n   */\n  dataChannelIdentifier?: number;\n\n  /**\n   * @generated from field: optional livekit.proto.DataChannelState state = 4;\n   */\n  state?: DataChannelState;\n\n  /**\n   * @generated from field: required uint32 messages_sent = 5;\n   */\n  messagesSent?: number;\n\n  /**\n   * @generated from field: required uint64 bytes_sent = 6;\n   */\n  bytesSent?: bigint;\n\n  /**\n   * @generated from field: required uint32 messages_received = 7;\n   */\n  messagesReceived?: number;\n\n  /**\n   * @generated from field: required uint64 bytes_received = 8;\n   */\n  bytesReceived?: bigint;\n\n  constructor(data?: PartialMessage<DataChannelStats>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.DataChannelStats\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"label\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 2, name: \"protocol\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 3, name: \"data_channel_identifier\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, req: true },\n    { no: 4, name: \"state\", kind: \"enum\", T: proto2.getEnumType(DataChannelState), opt: true },\n    { no: 5, name: \"messages_sent\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 6, name: \"bytes_sent\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 7, name: \"messages_received\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 8, name: \"bytes_received\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataChannelStats {\n    return new DataChannelStats().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataChannelStats {\n    return new DataChannelStats().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataChannelStats {\n    return new DataChannelStats().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: DataChannelStats | PlainMessage<DataChannelStats> | undefined, b: DataChannelStats | PlainMessage<DataChannelStats> | undefined): boolean {\n    return proto2.util.equals(DataChannelStats, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.TransportStats\n */\nexport class TransportStats extends Message<TransportStats> {\n  /**\n   * @generated from field: required uint64 packets_sent = 1;\n   */\n  packetsSent?: bigint;\n\n  /**\n   * @generated from field: required uint64 packets_received = 2;\n   */\n  packetsReceived?: bigint;\n\n  /**\n   * @generated from field: required uint64 bytes_sent = 3;\n   */\n  bytesSent?: bigint;\n\n  /**\n   * @generated from field: required uint64 bytes_received = 4;\n   */\n  bytesReceived?: bigint;\n\n  /**\n   * @generated from field: required livekit.proto.IceRole ice_role = 5;\n   */\n  iceRole?: IceRole;\n\n  /**\n   * @generated from field: required string ice_local_username_fragment = 6;\n   */\n  iceLocalUsernameFragment?: string;\n\n  /**\n   * @generated from field: optional livekit.proto.DtlsTransportState dtls_state = 7;\n   */\n  dtlsState?: DtlsTransportState;\n\n  /**\n   * @generated from field: optional livekit.proto.IceTransportState ice_state = 8;\n   */\n  iceState?: IceTransportState;\n\n  /**\n   * @generated from field: required string selected_candidate_pair_id = 9;\n   */\n  selectedCandidatePairId?: string;\n\n  /**\n   * @generated from field: required string local_certificate_id = 10;\n   */\n  localCertificateId?: string;\n\n  /**\n   * @generated from field: required string remote_certificate_id = 11;\n   */\n  remoteCertificateId?: string;\n\n  /**\n   * @generated from field: required string tls_version = 12;\n   */\n  tlsVersion?: string;\n\n  /**\n   * @generated from field: required string dtls_cipher = 13;\n   */\n  dtlsCipher?: string;\n\n  /**\n   * @generated from field: required livekit.proto.DtlsRole dtls_role = 14;\n   */\n  dtlsRole?: DtlsRole;\n\n  /**\n   * @generated from field: required string srtp_cipher = 15;\n   */\n  srtpCipher?: string;\n\n  /**\n   * @generated from field: required uint32 selected_candidate_pair_changes = 16;\n   */\n  selectedCandidatePairChanges?: number;\n\n  constructor(data?: PartialMessage<TransportStats>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.TransportStats\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"packets_sent\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"packets_received\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 3, name: \"bytes_sent\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 4, name: \"bytes_received\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 5, name: \"ice_role\", kind: \"enum\", T: proto2.getEnumType(IceRole), req: true },\n    { no: 6, name: \"ice_local_username_fragment\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 7, name: \"dtls_state\", kind: \"enum\", T: proto2.getEnumType(DtlsTransportState), opt: true },\n    { no: 8, name: \"ice_state\", kind: \"enum\", T: proto2.getEnumType(IceTransportState), opt: true },\n    { no: 9, name: \"selected_candidate_pair_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 10, name: \"local_certificate_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 11, name: \"remote_certificate_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 12, name: \"tls_version\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 13, name: \"dtls_cipher\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 14, name: \"dtls_role\", kind: \"enum\", T: proto2.getEnumType(DtlsRole), req: true },\n    { no: 15, name: \"srtp_cipher\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 16, name: \"selected_candidate_pair_changes\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransportStats {\n    return new TransportStats().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransportStats {\n    return new TransportStats().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransportStats {\n    return new TransportStats().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: TransportStats | PlainMessage<TransportStats> | undefined, b: TransportStats | PlainMessage<TransportStats> | undefined): boolean {\n    return proto2.util.equals(TransportStats, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.CandidatePairStats\n */\nexport class CandidatePairStats extends Message<CandidatePairStats> {\n  /**\n   * @generated from field: required string transport_id = 1;\n   */\n  transportId?: string;\n\n  /**\n   * @generated from field: required string local_candidate_id = 2;\n   */\n  localCandidateId?: string;\n\n  /**\n   * @generated from field: required string remote_candidate_id = 3;\n   */\n  remoteCandidateId?: string;\n\n  /**\n   * @generated from field: optional livekit.proto.IceCandidatePairState state = 4;\n   */\n  state?: IceCandidatePairState;\n\n  /**\n   * @generated from field: required bool nominated = 5;\n   */\n  nominated?: boolean;\n\n  /**\n   * @generated from field: required uint64 packets_sent = 6;\n   */\n  packetsSent?: bigint;\n\n  /**\n   * @generated from field: required uint64 packets_received = 7;\n   */\n  packetsReceived?: bigint;\n\n  /**\n   * @generated from field: required uint64 bytes_sent = 8;\n   */\n  bytesSent?: bigint;\n\n  /**\n   * @generated from field: required uint64 bytes_received = 9;\n   */\n  bytesReceived?: bigint;\n\n  /**\n   * @generated from field: required double last_packet_sent_timestamp = 10;\n   */\n  lastPacketSentTimestamp?: number;\n\n  /**\n   * @generated from field: required double last_packet_received_timestamp = 11;\n   */\n  lastPacketReceivedTimestamp?: number;\n\n  /**\n   * @generated from field: required double total_round_trip_time = 12;\n   */\n  totalRoundTripTime?: number;\n\n  /**\n   * @generated from field: required double current_round_trip_time = 13;\n   */\n  currentRoundTripTime?: number;\n\n  /**\n   * @generated from field: required double available_outgoing_bitrate = 14;\n   */\n  availableOutgoingBitrate?: number;\n\n  /**\n   * @generated from field: required double available_incoming_bitrate = 15;\n   */\n  availableIncomingBitrate?: number;\n\n  /**\n   * @generated from field: required uint64 requests_received = 16;\n   */\n  requestsReceived?: bigint;\n\n  /**\n   * @generated from field: required uint64 requests_sent = 17;\n   */\n  requestsSent?: bigint;\n\n  /**\n   * @generated from field: required uint64 responses_received = 18;\n   */\n  responsesReceived?: bigint;\n\n  /**\n   * @generated from field: required uint64 responses_sent = 19;\n   */\n  responsesSent?: bigint;\n\n  /**\n   * @generated from field: required uint64 consent_requests_sent = 20;\n   */\n  consentRequestsSent?: bigint;\n\n  /**\n   * @generated from field: required uint32 packets_discarded_on_send = 21;\n   */\n  packetsDiscardedOnSend?: number;\n\n  /**\n   * @generated from field: required uint64 bytes_discarded_on_send = 22;\n   */\n  bytesDiscardedOnSend?: bigint;\n\n  constructor(data?: PartialMessage<CandidatePairStats>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.CandidatePairStats\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"transport_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 2, name: \"local_candidate_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 3, name: \"remote_candidate_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 4, name: \"state\", kind: \"enum\", T: proto2.getEnumType(IceCandidatePairState), opt: true },\n    { no: 5, name: \"nominated\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, req: true },\n    { no: 6, name: \"packets_sent\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 7, name: \"packets_received\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 8, name: \"bytes_sent\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 9, name: \"bytes_received\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 10, name: \"last_packet_sent_timestamp\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 11, name: \"last_packet_received_timestamp\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 12, name: \"total_round_trip_time\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 13, name: \"current_round_trip_time\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 14, name: \"available_outgoing_bitrate\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 15, name: \"available_incoming_bitrate\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n    { no: 16, name: \"requests_received\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 17, name: \"requests_sent\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 18, name: \"responses_received\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 19, name: \"responses_sent\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 20, name: \"consent_requests_sent\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 21, name: \"packets_discarded_on_send\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 22, name: \"bytes_discarded_on_send\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CandidatePairStats {\n    return new CandidatePairStats().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CandidatePairStats {\n    return new CandidatePairStats().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CandidatePairStats {\n    return new CandidatePairStats().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: CandidatePairStats | PlainMessage<CandidatePairStats> | undefined, b: CandidatePairStats | PlainMessage<CandidatePairStats> | undefined): boolean {\n    return proto2.util.equals(CandidatePairStats, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.IceCandidateStats\n */\nexport class IceCandidateStats extends Message<IceCandidateStats> {\n  /**\n   * @generated from field: required string transport_id = 1;\n   */\n  transportId?: string;\n\n  /**\n   * @generated from field: required string address = 2;\n   */\n  address?: string;\n\n  /**\n   * @generated from field: required int32 port = 3;\n   */\n  port?: number;\n\n  /**\n   * @generated from field: required string protocol = 4;\n   */\n  protocol?: string;\n\n  /**\n   * @generated from field: optional livekit.proto.IceCandidateType candidate_type = 5;\n   */\n  candidateType?: IceCandidateType;\n\n  /**\n   * @generated from field: required int32 priority = 6;\n   */\n  priority?: number;\n\n  /**\n   * @generated from field: required string url = 7;\n   */\n  url?: string;\n\n  /**\n   * @generated from field: optional livekit.proto.IceServerTransportProtocol relay_protocol = 8;\n   */\n  relayProtocol?: IceServerTransportProtocol;\n\n  /**\n   * @generated from field: required string foundation = 9;\n   */\n  foundation?: string;\n\n  /**\n   * @generated from field: required string related_address = 10;\n   */\n  relatedAddress?: string;\n\n  /**\n   * @generated from field: required int32 related_port = 11;\n   */\n  relatedPort?: number;\n\n  /**\n   * @generated from field: required string username_fragment = 12;\n   */\n  usernameFragment?: string;\n\n  /**\n   * @generated from field: optional livekit.proto.IceTcpCandidateType tcp_type = 13;\n   */\n  tcpType?: IceTcpCandidateType;\n\n  constructor(data?: PartialMessage<IceCandidateStats>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.IceCandidateStats\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"transport_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 2, name: \"address\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 3, name: \"port\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, req: true },\n    { no: 4, name: \"protocol\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 5, name: \"candidate_type\", kind: \"enum\", T: proto2.getEnumType(IceCandidateType), opt: true },\n    { no: 6, name: \"priority\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, req: true },\n    { no: 7, name: \"url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 8, name: \"relay_protocol\", kind: \"enum\", T: proto2.getEnumType(IceServerTransportProtocol), opt: true },\n    { no: 9, name: \"foundation\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 10, name: \"related_address\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 11, name: \"related_port\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, req: true },\n    { no: 12, name: \"username_fragment\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 13, name: \"tcp_type\", kind: \"enum\", T: proto2.getEnumType(IceTcpCandidateType), opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IceCandidateStats {\n    return new IceCandidateStats().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IceCandidateStats {\n    return new IceCandidateStats().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IceCandidateStats {\n    return new IceCandidateStats().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: IceCandidateStats | PlainMessage<IceCandidateStats> | undefined, b: IceCandidateStats | PlainMessage<IceCandidateStats> | undefined): boolean {\n    return proto2.util.equals(IceCandidateStats, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.CertificateStats\n */\nexport class CertificateStats extends Message<CertificateStats> {\n  /**\n   * @generated from field: required string fingerprint = 1;\n   */\n  fingerprint?: string;\n\n  /**\n   * @generated from field: required string fingerprint_algorithm = 2;\n   */\n  fingerprintAlgorithm?: string;\n\n  /**\n   * @generated from field: required string base64_certificate = 3;\n   */\n  base64Certificate?: string;\n\n  /**\n   * @generated from field: required string issuer_certificate_id = 4;\n   */\n  issuerCertificateId?: string;\n\n  constructor(data?: PartialMessage<CertificateStats>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.CertificateStats\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"fingerprint\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 2, name: \"fingerprint_algorithm\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 3, name: \"base64_certificate\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 4, name: \"issuer_certificate_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CertificateStats {\n    return new CertificateStats().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CertificateStats {\n    return new CertificateStats().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CertificateStats {\n    return new CertificateStats().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: CertificateStats | PlainMessage<CertificateStats> | undefined, b: CertificateStats | PlainMessage<CertificateStats> | undefined): boolean {\n    return proto2.util.equals(CertificateStats, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.StreamStats\n */\nexport class StreamStats extends Message<StreamStats> {\n  /**\n   * @generated from field: required string id = 1;\n   */\n  id?: string;\n\n  /**\n   * required int64 timestamp = 3;\n   *\n   * @generated from field: required string stream_identifier = 2;\n   */\n  streamIdentifier?: string;\n\n  constructor(data?: PartialMessage<StreamStats>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.StreamStats\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 2, name: \"stream_identifier\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StreamStats {\n    return new StreamStats().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StreamStats {\n    return new StreamStats().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StreamStats {\n    return new StreamStats().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: StreamStats | PlainMessage<StreamStats> | undefined, b: StreamStats | PlainMessage<StreamStats> | undefined): boolean {\n    return proto2.util.equals(StreamStats, a, b);\n  }\n}\n\n"],"mappings":"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","names":["DataChannelState","QualityLimitationReason","IceRole","DtlsTransportState","IceTransportState","DtlsRole","IceCandidatePairState","IceCandidateType","IceServerTransportProtocol","IceTcpCandidateType"]}