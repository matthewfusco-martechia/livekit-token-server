import { Message, proto2 } from "@bufbuild/protobuf";
import { ConnectCallback, ConnectRequest, ConnectResponse, DisconnectCallback, DisconnectRequest, DisconnectResponse, EditChatMessageRequest, GetSessionStatsCallback, GetSessionStatsRequest, GetSessionStatsResponse, PublishDataCallback, PublishDataRequest, PublishDataResponse, PublishSipDtmfCallback, PublishSipDtmfRequest, PublishSipDtmfResponse, PublishTrackCallback, PublishTrackRequest, PublishTrackResponse, PublishTranscriptionCallback, PublishTranscriptionRequest, PublishTranscriptionResponse, RoomEvent, SendChatMessageCallback, SendChatMessageRequest, SendChatMessageResponse, SendStreamChunkCallback, SendStreamChunkRequest, SendStreamChunkResponse, SendStreamHeaderCallback, SendStreamHeaderRequest, SendStreamHeaderResponse, SendStreamTrailerCallback, SendStreamTrailerRequest, SendStreamTrailerResponse, SetDataChannelBufferedAmountLowThresholdRequest, SetDataChannelBufferedAmountLowThresholdResponse, SetLocalAttributesCallback, SetLocalAttributesRequest, SetLocalAttributesResponse, SetLocalMetadataCallback, SetLocalMetadataRequest, SetLocalMetadataResponse, SetLocalNameCallback, SetLocalNameRequest, SetLocalNameResponse, SetSubscribedRequest, SetSubscribedResponse, UnpublishTrackCallback, UnpublishTrackRequest, UnpublishTrackResponse } from "./room_pb.js";
import { CreateAudioTrackRequest, CreateAudioTrackResponse, CreateVideoTrackRequest, CreateVideoTrackResponse, EnableRemoteTrackRequest, EnableRemoteTrackResponse, GetStatsCallback, GetStatsRequest, GetStatsResponse, LocalTrackMuteRequest, LocalTrackMuteResponse, SetTrackSubscriptionPermissionsRequest, SetTrackSubscriptionPermissionsResponse, TrackEvent } from "./track_pb.js";
import { CaptureVideoFrameRequest, CaptureVideoFrameResponse, NewVideoSourceRequest, NewVideoSourceResponse, NewVideoStreamRequest, NewVideoStreamResponse, VideoConvertRequest, VideoConvertResponse, VideoStreamEvent, VideoStreamFromParticipantRequest, VideoStreamFromParticipantResponse } from "./video_frame_pb.js";
import { AudioStreamEvent, AudioStreamFromParticipantRequest, AudioStreamFromParticipantResponse, CaptureAudioFrameCallback, CaptureAudioFrameRequest, CaptureAudioFrameResponse, ClearAudioBufferRequest, ClearAudioBufferResponse, FlushSoxResamplerRequest, FlushSoxResamplerResponse, NewAudioResamplerRequest, NewAudioResamplerResponse, NewAudioSourceRequest, NewAudioSourceResponse, NewAudioStreamRequest, NewAudioStreamResponse, NewSoxResamplerRequest, NewSoxResamplerResponse, PushSoxResamplerRequest, PushSoxResamplerResponse, RemixAndResampleRequest, RemixAndResampleResponse } from "./audio_frame_pb.js";
import { E2eeRequest, E2eeResponse } from "./e2ee_pb.js";
import { PerformRpcCallback, PerformRpcRequest, PerformRpcResponse, RegisterRpcMethodRequest, RegisterRpcMethodResponse, RpcMethodInvocationEvent, RpcMethodInvocationResponseRequest, RpcMethodInvocationResponseResponse, UnregisterRpcMethodRequest, UnregisterRpcMethodResponse } from "./rpc_pb.js";
import { EnableRemoteTrackPublicationRequest, EnableRemoteTrackPublicationResponse, UpdateRemoteTrackPublicationDimensionRequest, UpdateRemoteTrackPublicationDimensionResponse } from "./track_publication_pb.js";
var LogLevel = /* @__PURE__ */ ((LogLevel2) => {
  LogLevel2[LogLevel2["LOG_ERROR"] = 0] = "LOG_ERROR";
  LogLevel2[LogLevel2["LOG_WARN"] = 1] = "LOG_WARN";
  LogLevel2[LogLevel2["LOG_INFO"] = 2] = "LOG_INFO";
  LogLevel2[LogLevel2["LOG_DEBUG"] = 3] = "LOG_DEBUG";
  LogLevel2[LogLevel2["LOG_TRACE"] = 4] = "LOG_TRACE";
  return LogLevel2;
})(LogLevel || {});
proto2.util.setEnumType(LogLevel, "livekit.proto.LogLevel", [
  { no: 0, name: "LOG_ERROR" },
  { no: 1, name: "LOG_WARN" },
  { no: 2, name: "LOG_INFO" },
  { no: 3, name: "LOG_DEBUG" },
  { no: 4, name: "LOG_TRACE" }
]);
const _FfiRequest = class _FfiRequest extends Message {
  constructor(data) {
    super();
    /**
     * @generated from oneof livekit.proto.FfiRequest.message
     */
    this.message = { case: void 0 };
    proto2.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _FfiRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _FfiRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _FfiRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto2.util.equals(_FfiRequest, a, b);
  }
};
_FfiRequest.runtime = proto2;
_FfiRequest.typeName = "livekit.proto.FfiRequest";
_FfiRequest.fields = proto2.util.newFieldList(() => [
  { no: 2, name: "dispose", kind: "message", T: DisposeRequest, oneof: "message" },
  { no: 3, name: "connect", kind: "message", T: ConnectRequest, oneof: "message" },
  { no: 4, name: "disconnect", kind: "message", T: DisconnectRequest, oneof: "message" },
  { no: 5, name: "publish_track", kind: "message", T: PublishTrackRequest, oneof: "message" },
  { no: 6, name: "unpublish_track", kind: "message", T: UnpublishTrackRequest, oneof: "message" },
  { no: 7, name: "publish_data", kind: "message", T: PublishDataRequest, oneof: "message" },
  { no: 8, name: "set_subscribed", kind: "message", T: SetSubscribedRequest, oneof: "message" },
  { no: 9, name: "set_local_metadata", kind: "message", T: SetLocalMetadataRequest, oneof: "message" },
  { no: 10, name: "set_local_name", kind: "message", T: SetLocalNameRequest, oneof: "message" },
  { no: 11, name: "set_local_attributes", kind: "message", T: SetLocalAttributesRequest, oneof: "message" },
  { no: 12, name: "get_session_stats", kind: "message", T: GetSessionStatsRequest, oneof: "message" },
  { no: 13, name: "publish_transcription", kind: "message", T: PublishTranscriptionRequest, oneof: "message" },
  { no: 14, name: "publish_sip_dtmf", kind: "message", T: PublishSipDtmfRequest, oneof: "message" },
  { no: 15, name: "create_video_track", kind: "message", T: CreateVideoTrackRequest, oneof: "message" },
  { no: 16, name: "create_audio_track", kind: "message", T: CreateAudioTrackRequest, oneof: "message" },
  { no: 17, name: "local_track_mute", kind: "message", T: LocalTrackMuteRequest, oneof: "message" },
  { no: 18, name: "enable_remote_track", kind: "message", T: EnableRemoteTrackRequest, oneof: "message" },
  { no: 19, name: "get_stats", kind: "message", T: GetStatsRequest, oneof: "message" },
  { no: 48, name: "set_track_subscription_permissions", kind: "message", T: SetTrackSubscriptionPermissionsRequest, oneof: "message" },
  { no: 20, name: "new_video_stream", kind: "message", T: NewVideoStreamRequest, oneof: "message" },
  { no: 21, name: "new_video_source", kind: "message", T: NewVideoSourceRequest, oneof: "message" },
  { no: 22, name: "capture_video_frame", kind: "message", T: CaptureVideoFrameRequest, oneof: "message" },
  { no: 23, name: "video_convert", kind: "message", T: VideoConvertRequest, oneof: "message" },
  { no: 24, name: "video_stream_from_participant", kind: "message", T: VideoStreamFromParticipantRequest, oneof: "message" },
  { no: 25, name: "new_audio_stream", kind: "message", T: NewAudioStreamRequest, oneof: "message" },
  { no: 26, name: "new_audio_source", kind: "message", T: NewAudioSourceRequest, oneof: "message" },
  { no: 27, name: "capture_audio_frame", kind: "message", T: CaptureAudioFrameRequest, oneof: "message" },
  { no: 28, name: "clear_audio_buffer", kind: "message", T: ClearAudioBufferRequest, oneof: "message" },
  { no: 29, name: "new_audio_resampler", kind: "message", T: NewAudioResamplerRequest, oneof: "message" },
  { no: 30, name: "remix_and_resample", kind: "message", T: RemixAndResampleRequest, oneof: "message" },
  { no: 31, name: "e2ee", kind: "message", T: E2eeRequest, oneof: "message" },
  { no: 32, name: "audio_stream_from_participant", kind: "message", T: AudioStreamFromParticipantRequest, oneof: "message" },
  { no: 33, name: "new_sox_resampler", kind: "message", T: NewSoxResamplerRequest, oneof: "message" },
  { no: 34, name: "push_sox_resampler", kind: "message", T: PushSoxResamplerRequest, oneof: "message" },
  { no: 35, name: "flush_sox_resampler", kind: "message", T: FlushSoxResamplerRequest, oneof: "message" },
  { no: 36, name: "send_chat_message", kind: "message", T: SendChatMessageRequest, oneof: "message" },
  { no: 37, name: "edit_chat_message", kind: "message", T: EditChatMessageRequest, oneof: "message" },
  { no: 38, name: "perform_rpc", kind: "message", T: PerformRpcRequest, oneof: "message" },
  { no: 39, name: "register_rpc_method", kind: "message", T: RegisterRpcMethodRequest, oneof: "message" },
  { no: 40, name: "unregister_rpc_method", kind: "message", T: UnregisterRpcMethodRequest, oneof: "message" },
  { no: 41, name: "rpc_method_invocation_response", kind: "message", T: RpcMethodInvocationResponseRequest, oneof: "message" },
  { no: 42, name: "enable_remote_track_publication", kind: "message", T: EnableRemoteTrackPublicationRequest, oneof: "message" },
  { no: 43, name: "update_remote_track_publication_dimension", kind: "message", T: UpdateRemoteTrackPublicationDimensionRequest, oneof: "message" },
  { no: 44, name: "send_stream_header", kind: "message", T: SendStreamHeaderRequest, oneof: "message" },
  { no: 45, name: "send_stream_chunk", kind: "message", T: SendStreamChunkRequest, oneof: "message" },
  { no: 46, name: "send_stream_trailer", kind: "message", T: SendStreamTrailerRequest, oneof: "message" },
  { no: 47, name: "set_data_channel_buffered_amount_low_threshold", kind: "message", T: SetDataChannelBufferedAmountLowThresholdRequest, oneof: "message" }
]);
let FfiRequest = _FfiRequest;
const _FfiResponse = class _FfiResponse extends Message {
  constructor(data) {
    super();
    /**
     * @generated from oneof livekit.proto.FfiResponse.message
     */
    this.message = { case: void 0 };
    proto2.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _FfiResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _FfiResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _FfiResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto2.util.equals(_FfiResponse, a, b);
  }
};
_FfiResponse.runtime = proto2;
_FfiResponse.typeName = "livekit.proto.FfiResponse";
_FfiResponse.fields = proto2.util.newFieldList(() => [
  { no: 2, name: "dispose", kind: "message", T: DisposeResponse, oneof: "message" },
  { no: 3, name: "connect", kind: "message", T: ConnectResponse, oneof: "message" },
  { no: 4, name: "disconnect", kind: "message", T: DisconnectResponse, oneof: "message" },
  { no: 5, name: "publish_track", kind: "message", T: PublishTrackResponse, oneof: "message" },
  { no: 6, name: "unpublish_track", kind: "message", T: UnpublishTrackResponse, oneof: "message" },
  { no: 7, name: "publish_data", kind: "message", T: PublishDataResponse, oneof: "message" },
  { no: 8, name: "set_subscribed", kind: "message", T: SetSubscribedResponse, oneof: "message" },
  { no: 9, name: "set_local_metadata", kind: "message", T: SetLocalMetadataResponse, oneof: "message" },
  { no: 10, name: "set_local_name", kind: "message", T: SetLocalNameResponse, oneof: "message" },
  { no: 11, name: "set_local_attributes", kind: "message", T: SetLocalAttributesResponse, oneof: "message" },
  { no: 12, name: "get_session_stats", kind: "message", T: GetSessionStatsResponse, oneof: "message" },
  { no: 13, name: "publish_transcription", kind: "message", T: PublishTranscriptionResponse, oneof: "message" },
  { no: 14, name: "publish_sip_dtmf", kind: "message", T: PublishSipDtmfResponse, oneof: "message" },
  { no: 15, name: "create_video_track", kind: "message", T: CreateVideoTrackResponse, oneof: "message" },
  { no: 16, name: "create_audio_track", kind: "message", T: CreateAudioTrackResponse, oneof: "message" },
  { no: 17, name: "local_track_mute", kind: "message", T: LocalTrackMuteResponse, oneof: "message" },
  { no: 18, name: "enable_remote_track", kind: "message", T: EnableRemoteTrackResponse, oneof: "message" },
  { no: 19, name: "get_stats", kind: "message", T: GetStatsResponse, oneof: "message" },
  { no: 47, name: "set_track_subscription_permissions", kind: "message", T: SetTrackSubscriptionPermissionsResponse, oneof: "message" },
  { no: 20, name: "new_video_stream", kind: "message", T: NewVideoStreamResponse, oneof: "message" },
  { no: 21, name: "new_video_source", kind: "message", T: NewVideoSourceResponse, oneof: "message" },
  { no: 22, name: "capture_video_frame", kind: "message", T: CaptureVideoFrameResponse, oneof: "message" },
  { no: 23, name: "video_convert", kind: "message", T: VideoConvertResponse, oneof: "message" },
  { no: 24, name: "video_stream_from_participant", kind: "message", T: VideoStreamFromParticipantResponse, oneof: "message" },
  { no: 25, name: "new_audio_stream", kind: "message", T: NewAudioStreamResponse, oneof: "message" },
  { no: 26, name: "new_audio_source", kind: "message", T: NewAudioSourceResponse, oneof: "message" },
  { no: 27, name: "capture_audio_frame", kind: "message", T: CaptureAudioFrameResponse, oneof: "message" },
  { no: 28, name: "clear_audio_buffer", kind: "message", T: ClearAudioBufferResponse, oneof: "message" },
  { no: 29, name: "new_audio_resampler", kind: "message", T: NewAudioResamplerResponse, oneof: "message" },
  { no: 30, name: "remix_and_resample", kind: "message", T: RemixAndResampleResponse, oneof: "message" },
  { no: 31, name: "audio_stream_from_participant", kind: "message", T: AudioStreamFromParticipantResponse, oneof: "message" },
  { no: 32, name: "e2ee", kind: "message", T: E2eeResponse, oneof: "message" },
  { no: 33, name: "new_sox_resampler", kind: "message", T: NewSoxResamplerResponse, oneof: "message" },
  { no: 34, name: "push_sox_resampler", kind: "message", T: PushSoxResamplerResponse, oneof: "message" },
  { no: 35, name: "flush_sox_resampler", kind: "message", T: FlushSoxResamplerResponse, oneof: "message" },
  { no: 36, name: "send_chat_message", kind: "message", T: SendChatMessageResponse, oneof: "message" },
  { no: 37, name: "perform_rpc", kind: "message", T: PerformRpcResponse, oneof: "message" },
  { no: 38, name: "register_rpc_method", kind: "message", T: RegisterRpcMethodResponse, oneof: "message" },
  { no: 39, name: "unregister_rpc_method", kind: "message", T: UnregisterRpcMethodResponse, oneof: "message" },
  { no: 40, name: "rpc_method_invocation_response", kind: "message", T: RpcMethodInvocationResponseResponse, oneof: "message" },
  { no: 41, name: "enable_remote_track_publication", kind: "message", T: EnableRemoteTrackPublicationResponse, oneof: "message" },
  { no: 42, name: "update_remote_track_publication_dimension", kind: "message", T: UpdateRemoteTrackPublicationDimensionResponse, oneof: "message" },
  { no: 43, name: "send_stream_header", kind: "message", T: SendStreamHeaderResponse, oneof: "message" },
  { no: 44, name: "send_stream_chunk", kind: "message", T: SendStreamChunkResponse, oneof: "message" },
  { no: 45, name: "send_stream_trailer", kind: "message", T: SendStreamTrailerResponse, oneof: "message" },
  { no: 46, name: "set_data_channel_buffered_amount_low_threshold", kind: "message", T: SetDataChannelBufferedAmountLowThresholdResponse, oneof: "message" }
]);
let FfiResponse = _FfiResponse;
const _FfiEvent = class _FfiEvent extends Message {
  constructor(data) {
    super();
    /**
     * @generated from oneof livekit.proto.FfiEvent.message
     */
    this.message = { case: void 0 };
    proto2.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _FfiEvent().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _FfiEvent().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _FfiEvent().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto2.util.equals(_FfiEvent, a, b);
  }
};
_FfiEvent.runtime = proto2;
_FfiEvent.typeName = "livekit.proto.FfiEvent";
_FfiEvent.fields = proto2.util.newFieldList(() => [
  { no: 1, name: "room_event", kind: "message", T: RoomEvent, oneof: "message" },
  { no: 2, name: "track_event", kind: "message", T: TrackEvent, oneof: "message" },
  { no: 3, name: "video_stream_event", kind: "message", T: VideoStreamEvent, oneof: "message" },
  { no: 4, name: "audio_stream_event", kind: "message", T: AudioStreamEvent, oneof: "message" },
  { no: 5, name: "connect", kind: "message", T: ConnectCallback, oneof: "message" },
  { no: 7, name: "disconnect", kind: "message", T: DisconnectCallback, oneof: "message" },
  { no: 8, name: "dispose", kind: "message", T: DisposeCallback, oneof: "message" },
  { no: 9, name: "publish_track", kind: "message", T: PublishTrackCallback, oneof: "message" },
  { no: 10, name: "unpublish_track", kind: "message", T: UnpublishTrackCallback, oneof: "message" },
  { no: 11, name: "publish_data", kind: "message", T: PublishDataCallback, oneof: "message" },
  { no: 12, name: "publish_transcription", kind: "message", T: PublishTranscriptionCallback, oneof: "message" },
  { no: 13, name: "capture_audio_frame", kind: "message", T: CaptureAudioFrameCallback, oneof: "message" },
  { no: 14, name: "set_local_metadata", kind: "message", T: SetLocalMetadataCallback, oneof: "message" },
  { no: 15, name: "set_local_name", kind: "message", T: SetLocalNameCallback, oneof: "message" },
  { no: 16, name: "set_local_attributes", kind: "message", T: SetLocalAttributesCallback, oneof: "message" },
  { no: 17, name: "get_stats", kind: "message", T: GetStatsCallback, oneof: "message" },
  { no: 18, name: "logs", kind: "message", T: LogBatch, oneof: "message" },
  { no: 19, name: "get_session_stats", kind: "message", T: GetSessionStatsCallback, oneof: "message" },
  { no: 20, name: "panic", kind: "message", T: Panic, oneof: "message" },
  { no: 21, name: "publish_sip_dtmf", kind: "message", T: PublishSipDtmfCallback, oneof: "message" },
  { no: 22, name: "chat_message", kind: "message", T: SendChatMessageCallback, oneof: "message" },
  { no: 23, name: "perform_rpc", kind: "message", T: PerformRpcCallback, oneof: "message" },
  { no: 24, name: "rpc_method_invocation", kind: "message", T: RpcMethodInvocationEvent, oneof: "message" },
  { no: 25, name: "send_stream_header", kind: "message", T: SendStreamHeaderCallback, oneof: "message" },
  { no: 26, name: "send_stream_chunk", kind: "message", T: SendStreamChunkCallback, oneof: "message" },
  { no: 27, name: "send_stream_trailer", kind: "message", T: SendStreamTrailerCallback, oneof: "message" }
]);
let FfiEvent = _FfiEvent;
const _DisposeRequest = class _DisposeRequest extends Message {
  constructor(data) {
    super();
    proto2.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _DisposeRequest().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _DisposeRequest().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _DisposeRequest().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto2.util.equals(_DisposeRequest, a, b);
  }
};
_DisposeRequest.runtime = proto2;
_DisposeRequest.typeName = "livekit.proto.DisposeRequest";
_DisposeRequest.fields = proto2.util.newFieldList(() => [
  { no: 1, name: "async", kind: "scalar", T: 8, req: true }
]);
let DisposeRequest = _DisposeRequest;
const _DisposeResponse = class _DisposeResponse extends Message {
  constructor(data) {
    super();
    proto2.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _DisposeResponse().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _DisposeResponse().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _DisposeResponse().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto2.util.equals(_DisposeResponse, a, b);
  }
};
_DisposeResponse.runtime = proto2;
_DisposeResponse.typeName = "livekit.proto.DisposeResponse";
_DisposeResponse.fields = proto2.util.newFieldList(() => [
  { no: 1, name: "async_id", kind: "scalar", T: 4, opt: true }
]);
let DisposeResponse = _DisposeResponse;
const _DisposeCallback = class _DisposeCallback extends Message {
  constructor(data) {
    super();
    proto2.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _DisposeCallback().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _DisposeCallback().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _DisposeCallback().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto2.util.equals(_DisposeCallback, a, b);
  }
};
_DisposeCallback.runtime = proto2;
_DisposeCallback.typeName = "livekit.proto.DisposeCallback";
_DisposeCallback.fields = proto2.util.newFieldList(() => [
  { no: 1, name: "async_id", kind: "scalar", T: 4, req: true }
]);
let DisposeCallback = _DisposeCallback;
const _LogRecord = class _LogRecord extends Message {
  constructor(data) {
    super();
    proto2.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _LogRecord().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _LogRecord().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _LogRecord().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto2.util.equals(_LogRecord, a, b);
  }
};
_LogRecord.runtime = proto2;
_LogRecord.typeName = "livekit.proto.LogRecord";
_LogRecord.fields = proto2.util.newFieldList(() => [
  { no: 1, name: "level", kind: "enum", T: proto2.getEnumType(LogLevel), req: true },
  { no: 2, name: "target", kind: "scalar", T: 9, req: true },
  { no: 3, name: "module_path", kind: "scalar", T: 9, opt: true },
  { no: 4, name: "file", kind: "scalar", T: 9, opt: true },
  { no: 5, name: "line", kind: "scalar", T: 13, opt: true },
  { no: 6, name: "message", kind: "scalar", T: 9, req: true }
]);
let LogRecord = _LogRecord;
const _LogBatch = class _LogBatch extends Message {
  constructor(data) {
    super();
    /**
     * @generated from field: repeated livekit.proto.LogRecord records = 1;
     */
    this.records = [];
    proto2.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _LogBatch().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _LogBatch().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _LogBatch().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto2.util.equals(_LogBatch, a, b);
  }
};
_LogBatch.runtime = proto2;
_LogBatch.typeName = "livekit.proto.LogBatch";
_LogBatch.fields = proto2.util.newFieldList(() => [
  { no: 1, name: "records", kind: "message", T: LogRecord, repeated: true }
]);
let LogBatch = _LogBatch;
const _Panic = class _Panic extends Message {
  constructor(data) {
    super();
    proto2.util.initPartial(data, this);
  }
  static fromBinary(bytes, options) {
    return new _Panic().fromBinary(bytes, options);
  }
  static fromJson(jsonValue, options) {
    return new _Panic().fromJson(jsonValue, options);
  }
  static fromJsonString(jsonString, options) {
    return new _Panic().fromJsonString(jsonString, options);
  }
  static equals(a, b) {
    return proto2.util.equals(_Panic, a, b);
  }
};
_Panic.runtime = proto2;
_Panic.typeName = "livekit.proto.Panic";
_Panic.fields = proto2.util.newFieldList(() => [
  { no: 1, name: "message", kind: "scalar", T: 9, req: true }
]);
let Panic = _Panic;
export {
  DisposeCallback,
  DisposeRequest,
  DisposeResponse,
  FfiEvent,
  FfiRequest,
  FfiResponse,
  LogBatch,
  LogLevel,
  LogRecord,
  Panic
};
//# sourceMappingURL=ffi_pb.js.map