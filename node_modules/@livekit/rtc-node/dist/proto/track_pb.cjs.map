{"version":3,"sources":["../../src/proto/track_pb.ts"],"sourcesContent":["// Copyright 2023 LiveKit, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts,import_extension=.js\"\n// @generated from file track.proto (package livekit.proto, syntax proto2)\n/* eslint-disable */\n// @ts-nocheck\n\nimport type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from \"@bufbuild/protobuf\";\nimport { Message, proto2 } from \"@bufbuild/protobuf\";\nimport { RtcStats } from \"./stats_pb.js\";\nimport { EncryptionType } from \"./e2ee_pb.js\";\nimport { FfiOwnedHandle } from \"./handle_pb.js\";\n\n/**\n * @generated from enum livekit.proto.TrackKind\n */\nexport enum TrackKind {\n  /**\n   * @generated from enum value: KIND_UNKNOWN = 0;\n   */\n  KIND_UNKNOWN = 0,\n\n  /**\n   * @generated from enum value: KIND_AUDIO = 1;\n   */\n  KIND_AUDIO = 1,\n\n  /**\n   * @generated from enum value: KIND_VIDEO = 2;\n   */\n  KIND_VIDEO = 2,\n}\n// Retrieve enum metadata with: proto2.getEnumType(TrackKind)\nproto2.util.setEnumType(TrackKind, \"livekit.proto.TrackKind\", [\n  { no: 0, name: \"KIND_UNKNOWN\" },\n  { no: 1, name: \"KIND_AUDIO\" },\n  { no: 2, name: \"KIND_VIDEO\" },\n]);\n\n/**\n * @generated from enum livekit.proto.TrackSource\n */\nexport enum TrackSource {\n  /**\n   * @generated from enum value: SOURCE_UNKNOWN = 0;\n   */\n  SOURCE_UNKNOWN = 0,\n\n  /**\n   * @generated from enum value: SOURCE_CAMERA = 1;\n   */\n  SOURCE_CAMERA = 1,\n\n  /**\n   * @generated from enum value: SOURCE_MICROPHONE = 2;\n   */\n  SOURCE_MICROPHONE = 2,\n\n  /**\n   * @generated from enum value: SOURCE_SCREENSHARE = 3;\n   */\n  SOURCE_SCREENSHARE = 3,\n\n  /**\n   * @generated from enum value: SOURCE_SCREENSHARE_AUDIO = 4;\n   */\n  SOURCE_SCREENSHARE_AUDIO = 4,\n}\n// Retrieve enum metadata with: proto2.getEnumType(TrackSource)\nproto2.util.setEnumType(TrackSource, \"livekit.proto.TrackSource\", [\n  { no: 0, name: \"SOURCE_UNKNOWN\" },\n  { no: 1, name: \"SOURCE_CAMERA\" },\n  { no: 2, name: \"SOURCE_MICROPHONE\" },\n  { no: 3, name: \"SOURCE_SCREENSHARE\" },\n  { no: 4, name: \"SOURCE_SCREENSHARE_AUDIO\" },\n]);\n\n/**\n * @generated from enum livekit.proto.StreamState\n */\nexport enum StreamState {\n  /**\n   * @generated from enum value: STATE_UNKNOWN = 0;\n   */\n  STATE_UNKNOWN = 0,\n\n  /**\n   * @generated from enum value: STATE_ACTIVE = 1;\n   */\n  STATE_ACTIVE = 1,\n\n  /**\n   * @generated from enum value: STATE_PAUSED = 2;\n   */\n  STATE_PAUSED = 2,\n}\n// Retrieve enum metadata with: proto2.getEnumType(StreamState)\nproto2.util.setEnumType(StreamState, \"livekit.proto.StreamState\", [\n  { no: 0, name: \"STATE_UNKNOWN\" },\n  { no: 1, name: \"STATE_ACTIVE\" },\n  { no: 2, name: \"STATE_PAUSED\" },\n]);\n\n/**\n * Create a new VideoTrack from a VideoSource\n *\n * @generated from message livekit.proto.CreateVideoTrackRequest\n */\nexport class CreateVideoTrackRequest extends Message<CreateVideoTrackRequest> {\n  /**\n   * @generated from field: required string name = 1;\n   */\n  name?: string;\n\n  /**\n   * @generated from field: required uint64 source_handle = 2;\n   */\n  sourceHandle?: bigint;\n\n  constructor(data?: PartialMessage<CreateVideoTrackRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.CreateVideoTrackRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 2, name: \"source_handle\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateVideoTrackRequest {\n    return new CreateVideoTrackRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateVideoTrackRequest {\n    return new CreateVideoTrackRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateVideoTrackRequest {\n    return new CreateVideoTrackRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: CreateVideoTrackRequest | PlainMessage<CreateVideoTrackRequest> | undefined, b: CreateVideoTrackRequest | PlainMessage<CreateVideoTrackRequest> | undefined): boolean {\n    return proto2.util.equals(CreateVideoTrackRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.CreateVideoTrackResponse\n */\nexport class CreateVideoTrackResponse extends Message<CreateVideoTrackResponse> {\n  /**\n   * @generated from field: required livekit.proto.OwnedTrack track = 1;\n   */\n  track?: OwnedTrack;\n\n  constructor(data?: PartialMessage<CreateVideoTrackResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.CreateVideoTrackResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"track\", kind: \"message\", T: OwnedTrack, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateVideoTrackResponse {\n    return new CreateVideoTrackResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateVideoTrackResponse {\n    return new CreateVideoTrackResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateVideoTrackResponse {\n    return new CreateVideoTrackResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: CreateVideoTrackResponse | PlainMessage<CreateVideoTrackResponse> | undefined, b: CreateVideoTrackResponse | PlainMessage<CreateVideoTrackResponse> | undefined): boolean {\n    return proto2.util.equals(CreateVideoTrackResponse, a, b);\n  }\n}\n\n/**\n * Create a new AudioTrack from a AudioSource\n *\n * @generated from message livekit.proto.CreateAudioTrackRequest\n */\nexport class CreateAudioTrackRequest extends Message<CreateAudioTrackRequest> {\n  /**\n   * @generated from field: required string name = 1;\n   */\n  name?: string;\n\n  /**\n   * @generated from field: required uint64 source_handle = 2;\n   */\n  sourceHandle?: bigint;\n\n  constructor(data?: PartialMessage<CreateAudioTrackRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.CreateAudioTrackRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 2, name: \"source_handle\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAudioTrackRequest {\n    return new CreateAudioTrackRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAudioTrackRequest {\n    return new CreateAudioTrackRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAudioTrackRequest {\n    return new CreateAudioTrackRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: CreateAudioTrackRequest | PlainMessage<CreateAudioTrackRequest> | undefined, b: CreateAudioTrackRequest | PlainMessage<CreateAudioTrackRequest> | undefined): boolean {\n    return proto2.util.equals(CreateAudioTrackRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.CreateAudioTrackResponse\n */\nexport class CreateAudioTrackResponse extends Message<CreateAudioTrackResponse> {\n  /**\n   * @generated from field: required livekit.proto.OwnedTrack track = 1;\n   */\n  track?: OwnedTrack;\n\n  constructor(data?: PartialMessage<CreateAudioTrackResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.CreateAudioTrackResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"track\", kind: \"message\", T: OwnedTrack, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAudioTrackResponse {\n    return new CreateAudioTrackResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAudioTrackResponse {\n    return new CreateAudioTrackResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAudioTrackResponse {\n    return new CreateAudioTrackResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: CreateAudioTrackResponse | PlainMessage<CreateAudioTrackResponse> | undefined, b: CreateAudioTrackResponse | PlainMessage<CreateAudioTrackResponse> | undefined): boolean {\n    return proto2.util.equals(CreateAudioTrackResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.GetStatsRequest\n */\nexport class GetStatsRequest extends Message<GetStatsRequest> {\n  /**\n   * @generated from field: required uint64 track_handle = 1;\n   */\n  trackHandle?: bigint;\n\n  constructor(data?: PartialMessage<GetStatsRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.GetStatsRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"track_handle\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetStatsRequest {\n    return new GetStatsRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetStatsRequest {\n    return new GetStatsRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetStatsRequest {\n    return new GetStatsRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: GetStatsRequest | PlainMessage<GetStatsRequest> | undefined, b: GetStatsRequest | PlainMessage<GetStatsRequest> | undefined): boolean {\n    return proto2.util.equals(GetStatsRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.GetStatsResponse\n */\nexport class GetStatsResponse extends Message<GetStatsResponse> {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId?: bigint;\n\n  constructor(data?: PartialMessage<GetStatsResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.GetStatsResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"async_id\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetStatsResponse {\n    return new GetStatsResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetStatsResponse {\n    return new GetStatsResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetStatsResponse {\n    return new GetStatsResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: GetStatsResponse | PlainMessage<GetStatsResponse> | undefined, b: GetStatsResponse | PlainMessage<GetStatsResponse> | undefined): boolean {\n    return proto2.util.equals(GetStatsResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.GetStatsCallback\n */\nexport class GetStatsCallback extends Message<GetStatsCallback> {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId?: bigint;\n\n  /**\n   * @generated from field: optional string error = 2;\n   */\n  error?: string;\n\n  /**\n   * @generated from field: repeated livekit.proto.RtcStats stats = 3;\n   */\n  stats: RtcStats[] = [];\n\n  constructor(data?: PartialMessage<GetStatsCallback>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.GetStatsCallback\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"async_id\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"error\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 3, name: \"stats\", kind: \"message\", T: RtcStats, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetStatsCallback {\n    return new GetStatsCallback().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetStatsCallback {\n    return new GetStatsCallback().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetStatsCallback {\n    return new GetStatsCallback().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: GetStatsCallback | PlainMessage<GetStatsCallback> | undefined, b: GetStatsCallback | PlainMessage<GetStatsCallback> | undefined): boolean {\n    return proto2.util.equals(GetStatsCallback, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.TrackEvent\n */\nexport class TrackEvent extends Message<TrackEvent> {\n  constructor(data?: PartialMessage<TrackEvent>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.TrackEvent\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TrackEvent {\n    return new TrackEvent().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TrackEvent {\n    return new TrackEvent().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TrackEvent {\n    return new TrackEvent().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: TrackEvent | PlainMessage<TrackEvent> | undefined, b: TrackEvent | PlainMessage<TrackEvent> | undefined): boolean {\n    return proto2.util.equals(TrackEvent, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.TrackPublicationInfo\n */\nexport class TrackPublicationInfo extends Message<TrackPublicationInfo> {\n  /**\n   * @generated from field: required string sid = 1;\n   */\n  sid?: string;\n\n  /**\n   * @generated from field: required string name = 2;\n   */\n  name?: string;\n\n  /**\n   * @generated from field: required livekit.proto.TrackKind kind = 3;\n   */\n  kind?: TrackKind;\n\n  /**\n   * @generated from field: required livekit.proto.TrackSource source = 4;\n   */\n  source?: TrackSource;\n\n  /**\n   * @generated from field: required bool simulcasted = 5;\n   */\n  simulcasted?: boolean;\n\n  /**\n   * @generated from field: required uint32 width = 6;\n   */\n  width?: number;\n\n  /**\n   * @generated from field: required uint32 height = 7;\n   */\n  height?: number;\n\n  /**\n   * @generated from field: required string mime_type = 8;\n   */\n  mimeType?: string;\n\n  /**\n   * @generated from field: required bool muted = 9;\n   */\n  muted?: boolean;\n\n  /**\n   * @generated from field: required bool remote = 10;\n   */\n  remote?: boolean;\n\n  /**\n   * @generated from field: required livekit.proto.EncryptionType encryption_type = 11;\n   */\n  encryptionType?: EncryptionType;\n\n  constructor(data?: PartialMessage<TrackPublicationInfo>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.TrackPublicationInfo\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 2, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 3, name: \"kind\", kind: \"enum\", T: proto2.getEnumType(TrackKind), req: true },\n    { no: 4, name: \"source\", kind: \"enum\", T: proto2.getEnumType(TrackSource), req: true },\n    { no: 5, name: \"simulcasted\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, req: true },\n    { no: 6, name: \"width\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 7, name: \"height\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 8, name: \"mime_type\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 9, name: \"muted\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, req: true },\n    { no: 10, name: \"remote\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, req: true },\n    { no: 11, name: \"encryption_type\", kind: \"enum\", T: proto2.getEnumType(EncryptionType), req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TrackPublicationInfo {\n    return new TrackPublicationInfo().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TrackPublicationInfo {\n    return new TrackPublicationInfo().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TrackPublicationInfo {\n    return new TrackPublicationInfo().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: TrackPublicationInfo | PlainMessage<TrackPublicationInfo> | undefined, b: TrackPublicationInfo | PlainMessage<TrackPublicationInfo> | undefined): boolean {\n    return proto2.util.equals(TrackPublicationInfo, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.OwnedTrackPublication\n */\nexport class OwnedTrackPublication extends Message<OwnedTrackPublication> {\n  /**\n   * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;\n   */\n  handle?: FfiOwnedHandle;\n\n  /**\n   * @generated from field: required livekit.proto.TrackPublicationInfo info = 2;\n   */\n  info?: TrackPublicationInfo;\n\n  constructor(data?: PartialMessage<OwnedTrackPublication>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.OwnedTrackPublication\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"handle\", kind: \"message\", T: FfiOwnedHandle, req: true },\n    { no: 2, name: \"info\", kind: \"message\", T: TrackPublicationInfo, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OwnedTrackPublication {\n    return new OwnedTrackPublication().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OwnedTrackPublication {\n    return new OwnedTrackPublication().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OwnedTrackPublication {\n    return new OwnedTrackPublication().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: OwnedTrackPublication | PlainMessage<OwnedTrackPublication> | undefined, b: OwnedTrackPublication | PlainMessage<OwnedTrackPublication> | undefined): boolean {\n    return proto2.util.equals(OwnedTrackPublication, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.TrackInfo\n */\nexport class TrackInfo extends Message<TrackInfo> {\n  /**\n   * @generated from field: required string sid = 1;\n   */\n  sid?: string;\n\n  /**\n   * @generated from field: required string name = 2;\n   */\n  name?: string;\n\n  /**\n   * @generated from field: required livekit.proto.TrackKind kind = 3;\n   */\n  kind?: TrackKind;\n\n  /**\n   * @generated from field: required livekit.proto.StreamState stream_state = 4;\n   */\n  streamState?: StreamState;\n\n  /**\n   * @generated from field: required bool muted = 5;\n   */\n  muted?: boolean;\n\n  /**\n   * @generated from field: required bool remote = 6;\n   */\n  remote?: boolean;\n\n  constructor(data?: PartialMessage<TrackInfo>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.TrackInfo\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 2, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 3, name: \"kind\", kind: \"enum\", T: proto2.getEnumType(TrackKind), req: true },\n    { no: 4, name: \"stream_state\", kind: \"enum\", T: proto2.getEnumType(StreamState), req: true },\n    { no: 5, name: \"muted\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, req: true },\n    { no: 6, name: \"remote\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TrackInfo {\n    return new TrackInfo().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TrackInfo {\n    return new TrackInfo().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TrackInfo {\n    return new TrackInfo().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: TrackInfo | PlainMessage<TrackInfo> | undefined, b: TrackInfo | PlainMessage<TrackInfo> | undefined): boolean {\n    return proto2.util.equals(TrackInfo, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.OwnedTrack\n */\nexport class OwnedTrack extends Message<OwnedTrack> {\n  /**\n   * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;\n   */\n  handle?: FfiOwnedHandle;\n\n  /**\n   * @generated from field: required livekit.proto.TrackInfo info = 2;\n   */\n  info?: TrackInfo;\n\n  constructor(data?: PartialMessage<OwnedTrack>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.OwnedTrack\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"handle\", kind: \"message\", T: FfiOwnedHandle, req: true },\n    { no: 2, name: \"info\", kind: \"message\", T: TrackInfo, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OwnedTrack {\n    return new OwnedTrack().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OwnedTrack {\n    return new OwnedTrack().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OwnedTrack {\n    return new OwnedTrack().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: OwnedTrack | PlainMessage<OwnedTrack> | undefined, b: OwnedTrack | PlainMessage<OwnedTrack> | undefined): boolean {\n    return proto2.util.equals(OwnedTrack, a, b);\n  }\n}\n\n/**\n * Mute/UnMute a track\n *\n * @generated from message livekit.proto.LocalTrackMuteRequest\n */\nexport class LocalTrackMuteRequest extends Message<LocalTrackMuteRequest> {\n  /**\n   * @generated from field: required uint64 track_handle = 1;\n   */\n  trackHandle?: bigint;\n\n  /**\n   * @generated from field: required bool mute = 2;\n   */\n  mute?: boolean;\n\n  constructor(data?: PartialMessage<LocalTrackMuteRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.LocalTrackMuteRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"track_handle\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"mute\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LocalTrackMuteRequest {\n    return new LocalTrackMuteRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LocalTrackMuteRequest {\n    return new LocalTrackMuteRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LocalTrackMuteRequest {\n    return new LocalTrackMuteRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: LocalTrackMuteRequest | PlainMessage<LocalTrackMuteRequest> | undefined, b: LocalTrackMuteRequest | PlainMessage<LocalTrackMuteRequest> | undefined): boolean {\n    return proto2.util.equals(LocalTrackMuteRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.LocalTrackMuteResponse\n */\nexport class LocalTrackMuteResponse extends Message<LocalTrackMuteResponse> {\n  /**\n   * @generated from field: required bool muted = 1;\n   */\n  muted?: boolean;\n\n  constructor(data?: PartialMessage<LocalTrackMuteResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.LocalTrackMuteResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"muted\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LocalTrackMuteResponse {\n    return new LocalTrackMuteResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LocalTrackMuteResponse {\n    return new LocalTrackMuteResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LocalTrackMuteResponse {\n    return new LocalTrackMuteResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: LocalTrackMuteResponse | PlainMessage<LocalTrackMuteResponse> | undefined, b: LocalTrackMuteResponse | PlainMessage<LocalTrackMuteResponse> | undefined): boolean {\n    return proto2.util.equals(LocalTrackMuteResponse, a, b);\n  }\n}\n\n/**\n * Enable/Disable a remote track\n *\n * @generated from message livekit.proto.EnableRemoteTrackRequest\n */\nexport class EnableRemoteTrackRequest extends Message<EnableRemoteTrackRequest> {\n  /**\n   * @generated from field: required uint64 track_handle = 1;\n   */\n  trackHandle?: bigint;\n\n  /**\n   * @generated from field: required bool enabled = 2;\n   */\n  enabled?: boolean;\n\n  constructor(data?: PartialMessage<EnableRemoteTrackRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.EnableRemoteTrackRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"track_handle\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"enabled\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EnableRemoteTrackRequest {\n    return new EnableRemoteTrackRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EnableRemoteTrackRequest {\n    return new EnableRemoteTrackRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EnableRemoteTrackRequest {\n    return new EnableRemoteTrackRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: EnableRemoteTrackRequest | PlainMessage<EnableRemoteTrackRequest> | undefined, b: EnableRemoteTrackRequest | PlainMessage<EnableRemoteTrackRequest> | undefined): boolean {\n    return proto2.util.equals(EnableRemoteTrackRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.EnableRemoteTrackResponse\n */\nexport class EnableRemoteTrackResponse extends Message<EnableRemoteTrackResponse> {\n  /**\n   * @generated from field: required bool enabled = 1;\n   */\n  enabled?: boolean;\n\n  constructor(data?: PartialMessage<EnableRemoteTrackResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.EnableRemoteTrackResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"enabled\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EnableRemoteTrackResponse {\n    return new EnableRemoteTrackResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EnableRemoteTrackResponse {\n    return new EnableRemoteTrackResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EnableRemoteTrackResponse {\n    return new EnableRemoteTrackResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: EnableRemoteTrackResponse | PlainMessage<EnableRemoteTrackResponse> | undefined, b: EnableRemoteTrackResponse | PlainMessage<EnableRemoteTrackResponse> | undefined): boolean {\n    return proto2.util.equals(EnableRemoteTrackResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.SetTrackSubscriptionPermissionsRequest\n */\nexport class SetTrackSubscriptionPermissionsRequest extends Message<SetTrackSubscriptionPermissionsRequest> {\n  /**\n   * @generated from field: required uint64 local_participant_handle = 1;\n   */\n  localParticipantHandle?: bigint;\n\n  /**\n   * @generated from field: required bool all_participants_allowed = 2;\n   */\n  allParticipantsAllowed?: boolean;\n\n  /**\n   * @generated from field: repeated livekit.proto.ParticipantTrackPermission permissions = 3;\n   */\n  permissions: ParticipantTrackPermission[] = [];\n\n  constructor(data?: PartialMessage<SetTrackSubscriptionPermissionsRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.SetTrackSubscriptionPermissionsRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"local_participant_handle\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"all_participants_allowed\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, req: true },\n    { no: 3, name: \"permissions\", kind: \"message\", T: ParticipantTrackPermission, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetTrackSubscriptionPermissionsRequest {\n    return new SetTrackSubscriptionPermissionsRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetTrackSubscriptionPermissionsRequest {\n    return new SetTrackSubscriptionPermissionsRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetTrackSubscriptionPermissionsRequest {\n    return new SetTrackSubscriptionPermissionsRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: SetTrackSubscriptionPermissionsRequest | PlainMessage<SetTrackSubscriptionPermissionsRequest> | undefined, b: SetTrackSubscriptionPermissionsRequest | PlainMessage<SetTrackSubscriptionPermissionsRequest> | undefined): boolean {\n    return proto2.util.equals(SetTrackSubscriptionPermissionsRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.ParticipantTrackPermission\n */\nexport class ParticipantTrackPermission extends Message<ParticipantTrackPermission> {\n  /**\n   * The participant identity this permission applies to.\n   *\n   * @generated from field: required string participant_identity = 1;\n   */\n  participantIdentity?: string;\n\n  /**\n   * Grant permission to all all tracks. Takes precedence over allowedTrackSids.\n   *\n   * @generated from field: optional bool allow_all = 2;\n   */\n  allowAll?: boolean;\n\n  /**\n   * List of track sids to grant permission to.\n   *\n   * @generated from field: repeated string allowed_track_sids = 3;\n   */\n  allowedTrackSids: string[] = [];\n\n  constructor(data?: PartialMessage<ParticipantTrackPermission>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.ParticipantTrackPermission\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"participant_identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 2, name: \"allow_all\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 3, name: \"allowed_track_sids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ParticipantTrackPermission {\n    return new ParticipantTrackPermission().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ParticipantTrackPermission {\n    return new ParticipantTrackPermission().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ParticipantTrackPermission {\n    return new ParticipantTrackPermission().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ParticipantTrackPermission | PlainMessage<ParticipantTrackPermission> | undefined, b: ParticipantTrackPermission | PlainMessage<ParticipantTrackPermission> | undefined): boolean {\n    return proto2.util.equals(ParticipantTrackPermission, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.SetTrackSubscriptionPermissionsResponse\n */\nexport class SetTrackSubscriptionPermissionsResponse extends Message<SetTrackSubscriptionPermissionsResponse> {\n  constructor(data?: PartialMessage<SetTrackSubscriptionPermissionsResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.SetTrackSubscriptionPermissionsResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetTrackSubscriptionPermissionsResponse {\n    return new SetTrackSubscriptionPermissionsResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetTrackSubscriptionPermissionsResponse {\n    return new SetTrackSubscriptionPermissionsResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetTrackSubscriptionPermissionsResponse {\n    return new SetTrackSubscriptionPermissionsResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: SetTrackSubscriptionPermissionsResponse | PlainMessage<SetTrackSubscriptionPermissionsResponse> | undefined, b: SetTrackSubscriptionPermissionsResponse | PlainMessage<SetTrackSubscriptionPermissionsResponse> | undefined): boolean {\n    return proto2.util.equals(SetTrackSubscriptionPermissionsResponse, a, b);\n  }\n}\n\n"],"mappings":"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","names":["TrackKind","TrackSource","StreamState"]}