import { Message, PartialMessage, proto2, FieldList, BinaryReadOptions, JsonValue, JsonReadOptions, PlainMessage } from '@bufbuild/protobuf';
import { RtcStats } from './stats_pb.cjs';
import { EncryptionType } from './e2ee_pb.cjs';
import { FfiOwnedHandle } from './handle_pb.cjs';

/**
 * @generated from enum livekit.proto.TrackKind
 */
declare enum TrackKind {
    /**
     * @generated from enum value: KIND_UNKNOWN = 0;
     */
    KIND_UNKNOWN = 0,
    /**
     * @generated from enum value: KIND_AUDIO = 1;
     */
    KIND_AUDIO = 1,
    /**
     * @generated from enum value: KIND_VIDEO = 2;
     */
    KIND_VIDEO = 2
}
/**
 * @generated from enum livekit.proto.TrackSource
 */
declare enum TrackSource {
    /**
     * @generated from enum value: SOURCE_UNKNOWN = 0;
     */
    SOURCE_UNKNOWN = 0,
    /**
     * @generated from enum value: SOURCE_CAMERA = 1;
     */
    SOURCE_CAMERA = 1,
    /**
     * @generated from enum value: SOURCE_MICROPHONE = 2;
     */
    SOURCE_MICROPHONE = 2,
    /**
     * @generated from enum value: SOURCE_SCREENSHARE = 3;
     */
    SOURCE_SCREENSHARE = 3,
    /**
     * @generated from enum value: SOURCE_SCREENSHARE_AUDIO = 4;
     */
    SOURCE_SCREENSHARE_AUDIO = 4
}
/**
 * @generated from enum livekit.proto.StreamState
 */
declare enum StreamState {
    /**
     * @generated from enum value: STATE_UNKNOWN = 0;
     */
    STATE_UNKNOWN = 0,
    /**
     * @generated from enum value: STATE_ACTIVE = 1;
     */
    STATE_ACTIVE = 1,
    /**
     * @generated from enum value: STATE_PAUSED = 2;
     */
    STATE_PAUSED = 2
}
/**
 * Create a new VideoTrack from a VideoSource
 *
 * @generated from message livekit.proto.CreateVideoTrackRequest
 */
declare class CreateVideoTrackRequest extends Message<CreateVideoTrackRequest> {
    /**
     * @generated from field: required string name = 1;
     */
    name?: string;
    /**
     * @generated from field: required uint64 source_handle = 2;
     */
    sourceHandle?: bigint;
    constructor(data?: PartialMessage<CreateVideoTrackRequest>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.CreateVideoTrackRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateVideoTrackRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateVideoTrackRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateVideoTrackRequest;
    static equals(a: CreateVideoTrackRequest | PlainMessage<CreateVideoTrackRequest> | undefined, b: CreateVideoTrackRequest | PlainMessage<CreateVideoTrackRequest> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.CreateVideoTrackResponse
 */
declare class CreateVideoTrackResponse extends Message<CreateVideoTrackResponse> {
    /**
     * @generated from field: required livekit.proto.OwnedTrack track = 1;
     */
    track?: OwnedTrack;
    constructor(data?: PartialMessage<CreateVideoTrackResponse>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.CreateVideoTrackResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateVideoTrackResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateVideoTrackResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateVideoTrackResponse;
    static equals(a: CreateVideoTrackResponse | PlainMessage<CreateVideoTrackResponse> | undefined, b: CreateVideoTrackResponse | PlainMessage<CreateVideoTrackResponse> | undefined): boolean;
}
/**
 * Create a new AudioTrack from a AudioSource
 *
 * @generated from message livekit.proto.CreateAudioTrackRequest
 */
declare class CreateAudioTrackRequest extends Message<CreateAudioTrackRequest> {
    /**
     * @generated from field: required string name = 1;
     */
    name?: string;
    /**
     * @generated from field: required uint64 source_handle = 2;
     */
    sourceHandle?: bigint;
    constructor(data?: PartialMessage<CreateAudioTrackRequest>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.CreateAudioTrackRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAudioTrackRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAudioTrackRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAudioTrackRequest;
    static equals(a: CreateAudioTrackRequest | PlainMessage<CreateAudioTrackRequest> | undefined, b: CreateAudioTrackRequest | PlainMessage<CreateAudioTrackRequest> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.CreateAudioTrackResponse
 */
declare class CreateAudioTrackResponse extends Message<CreateAudioTrackResponse> {
    /**
     * @generated from field: required livekit.proto.OwnedTrack track = 1;
     */
    track?: OwnedTrack;
    constructor(data?: PartialMessage<CreateAudioTrackResponse>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.CreateAudioTrackResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAudioTrackResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAudioTrackResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAudioTrackResponse;
    static equals(a: CreateAudioTrackResponse | PlainMessage<CreateAudioTrackResponse> | undefined, b: CreateAudioTrackResponse | PlainMessage<CreateAudioTrackResponse> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.GetStatsRequest
 */
declare class GetStatsRequest extends Message<GetStatsRequest> {
    /**
     * @generated from field: required uint64 track_handle = 1;
     */
    trackHandle?: bigint;
    constructor(data?: PartialMessage<GetStatsRequest>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.GetStatsRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetStatsRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetStatsRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetStatsRequest;
    static equals(a: GetStatsRequest | PlainMessage<GetStatsRequest> | undefined, b: GetStatsRequest | PlainMessage<GetStatsRequest> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.GetStatsResponse
 */
declare class GetStatsResponse extends Message<GetStatsResponse> {
    /**
     * @generated from field: required uint64 async_id = 1;
     */
    asyncId?: bigint;
    constructor(data?: PartialMessage<GetStatsResponse>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.GetStatsResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetStatsResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetStatsResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetStatsResponse;
    static equals(a: GetStatsResponse | PlainMessage<GetStatsResponse> | undefined, b: GetStatsResponse | PlainMessage<GetStatsResponse> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.GetStatsCallback
 */
declare class GetStatsCallback extends Message<GetStatsCallback> {
    /**
     * @generated from field: required uint64 async_id = 1;
     */
    asyncId?: bigint;
    /**
     * @generated from field: optional string error = 2;
     */
    error?: string;
    /**
     * @generated from field: repeated livekit.proto.RtcStats stats = 3;
     */
    stats: RtcStats[];
    constructor(data?: PartialMessage<GetStatsCallback>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.GetStatsCallback";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetStatsCallback;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetStatsCallback;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetStatsCallback;
    static equals(a: GetStatsCallback | PlainMessage<GetStatsCallback> | undefined, b: GetStatsCallback | PlainMessage<GetStatsCallback> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.TrackEvent
 */
declare class TrackEvent extends Message<TrackEvent> {
    constructor(data?: PartialMessage<TrackEvent>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.TrackEvent";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TrackEvent;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TrackEvent;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TrackEvent;
    static equals(a: TrackEvent | PlainMessage<TrackEvent> | undefined, b: TrackEvent | PlainMessage<TrackEvent> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.TrackPublicationInfo
 */
declare class TrackPublicationInfo extends Message<TrackPublicationInfo> {
    /**
     * @generated from field: required string sid = 1;
     */
    sid?: string;
    /**
     * @generated from field: required string name = 2;
     */
    name?: string;
    /**
     * @generated from field: required livekit.proto.TrackKind kind = 3;
     */
    kind?: TrackKind;
    /**
     * @generated from field: required livekit.proto.TrackSource source = 4;
     */
    source?: TrackSource;
    /**
     * @generated from field: required bool simulcasted = 5;
     */
    simulcasted?: boolean;
    /**
     * @generated from field: required uint32 width = 6;
     */
    width?: number;
    /**
     * @generated from field: required uint32 height = 7;
     */
    height?: number;
    /**
     * @generated from field: required string mime_type = 8;
     */
    mimeType?: string;
    /**
     * @generated from field: required bool muted = 9;
     */
    muted?: boolean;
    /**
     * @generated from field: required bool remote = 10;
     */
    remote?: boolean;
    /**
     * @generated from field: required livekit.proto.EncryptionType encryption_type = 11;
     */
    encryptionType?: EncryptionType;
    constructor(data?: PartialMessage<TrackPublicationInfo>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.TrackPublicationInfo";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TrackPublicationInfo;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TrackPublicationInfo;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TrackPublicationInfo;
    static equals(a: TrackPublicationInfo | PlainMessage<TrackPublicationInfo> | undefined, b: TrackPublicationInfo | PlainMessage<TrackPublicationInfo> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.OwnedTrackPublication
 */
declare class OwnedTrackPublication extends Message<OwnedTrackPublication> {
    /**
     * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;
     */
    handle?: FfiOwnedHandle;
    /**
     * @generated from field: required livekit.proto.TrackPublicationInfo info = 2;
     */
    info?: TrackPublicationInfo;
    constructor(data?: PartialMessage<OwnedTrackPublication>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.OwnedTrackPublication";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OwnedTrackPublication;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OwnedTrackPublication;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OwnedTrackPublication;
    static equals(a: OwnedTrackPublication | PlainMessage<OwnedTrackPublication> | undefined, b: OwnedTrackPublication | PlainMessage<OwnedTrackPublication> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.TrackInfo
 */
declare class TrackInfo extends Message<TrackInfo> {
    /**
     * @generated from field: required string sid = 1;
     */
    sid?: string;
    /**
     * @generated from field: required string name = 2;
     */
    name?: string;
    /**
     * @generated from field: required livekit.proto.TrackKind kind = 3;
     */
    kind?: TrackKind;
    /**
     * @generated from field: required livekit.proto.StreamState stream_state = 4;
     */
    streamState?: StreamState;
    /**
     * @generated from field: required bool muted = 5;
     */
    muted?: boolean;
    /**
     * @generated from field: required bool remote = 6;
     */
    remote?: boolean;
    constructor(data?: PartialMessage<TrackInfo>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.TrackInfo";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TrackInfo;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TrackInfo;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TrackInfo;
    static equals(a: TrackInfo | PlainMessage<TrackInfo> | undefined, b: TrackInfo | PlainMessage<TrackInfo> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.OwnedTrack
 */
declare class OwnedTrack extends Message<OwnedTrack> {
    /**
     * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;
     */
    handle?: FfiOwnedHandle;
    /**
     * @generated from field: required livekit.proto.TrackInfo info = 2;
     */
    info?: TrackInfo;
    constructor(data?: PartialMessage<OwnedTrack>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.OwnedTrack";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OwnedTrack;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OwnedTrack;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OwnedTrack;
    static equals(a: OwnedTrack | PlainMessage<OwnedTrack> | undefined, b: OwnedTrack | PlainMessage<OwnedTrack> | undefined): boolean;
}
/**
 * Mute/UnMute a track
 *
 * @generated from message livekit.proto.LocalTrackMuteRequest
 */
declare class LocalTrackMuteRequest extends Message<LocalTrackMuteRequest> {
    /**
     * @generated from field: required uint64 track_handle = 1;
     */
    trackHandle?: bigint;
    /**
     * @generated from field: required bool mute = 2;
     */
    mute?: boolean;
    constructor(data?: PartialMessage<LocalTrackMuteRequest>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.LocalTrackMuteRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LocalTrackMuteRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LocalTrackMuteRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LocalTrackMuteRequest;
    static equals(a: LocalTrackMuteRequest | PlainMessage<LocalTrackMuteRequest> | undefined, b: LocalTrackMuteRequest | PlainMessage<LocalTrackMuteRequest> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.LocalTrackMuteResponse
 */
declare class LocalTrackMuteResponse extends Message<LocalTrackMuteResponse> {
    /**
     * @generated from field: required bool muted = 1;
     */
    muted?: boolean;
    constructor(data?: PartialMessage<LocalTrackMuteResponse>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.LocalTrackMuteResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LocalTrackMuteResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LocalTrackMuteResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LocalTrackMuteResponse;
    static equals(a: LocalTrackMuteResponse | PlainMessage<LocalTrackMuteResponse> | undefined, b: LocalTrackMuteResponse | PlainMessage<LocalTrackMuteResponse> | undefined): boolean;
}
/**
 * Enable/Disable a remote track
 *
 * @generated from message livekit.proto.EnableRemoteTrackRequest
 */
declare class EnableRemoteTrackRequest extends Message<EnableRemoteTrackRequest> {
    /**
     * @generated from field: required uint64 track_handle = 1;
     */
    trackHandle?: bigint;
    /**
     * @generated from field: required bool enabled = 2;
     */
    enabled?: boolean;
    constructor(data?: PartialMessage<EnableRemoteTrackRequest>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.EnableRemoteTrackRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EnableRemoteTrackRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EnableRemoteTrackRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EnableRemoteTrackRequest;
    static equals(a: EnableRemoteTrackRequest | PlainMessage<EnableRemoteTrackRequest> | undefined, b: EnableRemoteTrackRequest | PlainMessage<EnableRemoteTrackRequest> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.EnableRemoteTrackResponse
 */
declare class EnableRemoteTrackResponse extends Message<EnableRemoteTrackResponse> {
    /**
     * @generated from field: required bool enabled = 1;
     */
    enabled?: boolean;
    constructor(data?: PartialMessage<EnableRemoteTrackResponse>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.EnableRemoteTrackResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EnableRemoteTrackResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EnableRemoteTrackResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EnableRemoteTrackResponse;
    static equals(a: EnableRemoteTrackResponse | PlainMessage<EnableRemoteTrackResponse> | undefined, b: EnableRemoteTrackResponse | PlainMessage<EnableRemoteTrackResponse> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.SetTrackSubscriptionPermissionsRequest
 */
declare class SetTrackSubscriptionPermissionsRequest extends Message<SetTrackSubscriptionPermissionsRequest> {
    /**
     * @generated from field: required uint64 local_participant_handle = 1;
     */
    localParticipantHandle?: bigint;
    /**
     * @generated from field: required bool all_participants_allowed = 2;
     */
    allParticipantsAllowed?: boolean;
    /**
     * @generated from field: repeated livekit.proto.ParticipantTrackPermission permissions = 3;
     */
    permissions: ParticipantTrackPermission[];
    constructor(data?: PartialMessage<SetTrackSubscriptionPermissionsRequest>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.SetTrackSubscriptionPermissionsRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetTrackSubscriptionPermissionsRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetTrackSubscriptionPermissionsRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetTrackSubscriptionPermissionsRequest;
    static equals(a: SetTrackSubscriptionPermissionsRequest | PlainMessage<SetTrackSubscriptionPermissionsRequest> | undefined, b: SetTrackSubscriptionPermissionsRequest | PlainMessage<SetTrackSubscriptionPermissionsRequest> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.ParticipantTrackPermission
 */
declare class ParticipantTrackPermission extends Message<ParticipantTrackPermission> {
    /**
     * The participant identity this permission applies to.
     *
     * @generated from field: required string participant_identity = 1;
     */
    participantIdentity?: string;
    /**
     * Grant permission to all all tracks. Takes precedence over allowedTrackSids.
     *
     * @generated from field: optional bool allow_all = 2;
     */
    allowAll?: boolean;
    /**
     * List of track sids to grant permission to.
     *
     * @generated from field: repeated string allowed_track_sids = 3;
     */
    allowedTrackSids: string[];
    constructor(data?: PartialMessage<ParticipantTrackPermission>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.ParticipantTrackPermission";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ParticipantTrackPermission;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ParticipantTrackPermission;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ParticipantTrackPermission;
    static equals(a: ParticipantTrackPermission | PlainMessage<ParticipantTrackPermission> | undefined, b: ParticipantTrackPermission | PlainMessage<ParticipantTrackPermission> | undefined): boolean;
}
/**
 * @generated from message livekit.proto.SetTrackSubscriptionPermissionsResponse
 */
declare class SetTrackSubscriptionPermissionsResponse extends Message<SetTrackSubscriptionPermissionsResponse> {
    constructor(data?: PartialMessage<SetTrackSubscriptionPermissionsResponse>);
    static readonly runtime: typeof proto2;
    static readonly typeName = "livekit.proto.SetTrackSubscriptionPermissionsResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetTrackSubscriptionPermissionsResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetTrackSubscriptionPermissionsResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetTrackSubscriptionPermissionsResponse;
    static equals(a: SetTrackSubscriptionPermissionsResponse | PlainMessage<SetTrackSubscriptionPermissionsResponse> | undefined, b: SetTrackSubscriptionPermissionsResponse | PlainMessage<SetTrackSubscriptionPermissionsResponse> | undefined): boolean;
}

export { CreateAudioTrackRequest, CreateAudioTrackResponse, CreateVideoTrackRequest, CreateVideoTrackResponse, EnableRemoteTrackRequest, EnableRemoteTrackResponse, GetStatsCallback, GetStatsRequest, GetStatsResponse, LocalTrackMuteRequest, LocalTrackMuteResponse, OwnedTrack, OwnedTrackPublication, ParticipantTrackPermission, SetTrackSubscriptionPermissionsRequest, SetTrackSubscriptionPermissionsResponse, StreamState, TrackEvent, TrackInfo, TrackKind, TrackPublicationInfo, TrackSource };
