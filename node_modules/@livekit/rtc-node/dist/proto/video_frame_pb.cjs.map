{"version":3,"sources":["../../src/proto/video_frame_pb.ts"],"sourcesContent":["// Copyright 2023 LiveKit, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts,import_extension=.js\"\n// @generated from file video_frame.proto (package livekit.proto, syntax proto2)\n/* eslint-disable */\n// @ts-nocheck\n\nimport type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from \"@bufbuild/protobuf\";\nimport { Message, proto2 } from \"@bufbuild/protobuf\";\nimport { TrackSource } from \"./track_pb.js\";\nimport { FfiOwnedHandle } from \"./handle_pb.js\";\n\n/**\n * @generated from enum livekit.proto.VideoCodec\n */\nexport enum VideoCodec {\n  /**\n   * @generated from enum value: VP8 = 0;\n   */\n  VP8 = 0,\n\n  /**\n   * @generated from enum value: H264 = 1;\n   */\n  H264 = 1,\n\n  /**\n   * @generated from enum value: AV1 = 2;\n   */\n  AV1 = 2,\n\n  /**\n   * @generated from enum value: VP9 = 3;\n   */\n  VP9 = 3,\n}\n// Retrieve enum metadata with: proto2.getEnumType(VideoCodec)\nproto2.util.setEnumType(VideoCodec, \"livekit.proto.VideoCodec\", [\n  { no: 0, name: \"VP8\" },\n  { no: 1, name: \"H264\" },\n  { no: 2, name: \"AV1\" },\n  { no: 3, name: \"VP9\" },\n]);\n\n/**\n * @generated from enum livekit.proto.VideoRotation\n */\nexport enum VideoRotation {\n  /**\n   * @generated from enum value: VIDEO_ROTATION_0 = 0;\n   */\n  VIDEO_ROTATION_0 = 0,\n\n  /**\n   * @generated from enum value: VIDEO_ROTATION_90 = 1;\n   */\n  VIDEO_ROTATION_90 = 1,\n\n  /**\n   * @generated from enum value: VIDEO_ROTATION_180 = 2;\n   */\n  VIDEO_ROTATION_180 = 2,\n\n  /**\n   * @generated from enum value: VIDEO_ROTATION_270 = 3;\n   */\n  VIDEO_ROTATION_270 = 3,\n}\n// Retrieve enum metadata with: proto2.getEnumType(VideoRotation)\nproto2.util.setEnumType(VideoRotation, \"livekit.proto.VideoRotation\", [\n  { no: 0, name: \"VIDEO_ROTATION_0\" },\n  { no: 1, name: \"VIDEO_ROTATION_90\" },\n  { no: 2, name: \"VIDEO_ROTATION_180\" },\n  { no: 3, name: \"VIDEO_ROTATION_270\" },\n]);\n\n/**\n * Values of this enum must not be changed\n * It is used to serialize a rtc.VideoFrame on Python\n *\n * @generated from enum livekit.proto.VideoBufferType\n */\nexport enum VideoBufferType {\n  /**\n   * @generated from enum value: RGBA = 0;\n   */\n  RGBA = 0,\n\n  /**\n   * @generated from enum value: ABGR = 1;\n   */\n  ABGR = 1,\n\n  /**\n   * @generated from enum value: ARGB = 2;\n   */\n  ARGB = 2,\n\n  /**\n   * @generated from enum value: BGRA = 3;\n   */\n  BGRA = 3,\n\n  /**\n   * @generated from enum value: RGB24 = 4;\n   */\n  RGB24 = 4,\n\n  /**\n   * @generated from enum value: I420 = 5;\n   */\n  I420 = 5,\n\n  /**\n   * @generated from enum value: I420A = 6;\n   */\n  I420A = 6,\n\n  /**\n   * @generated from enum value: I422 = 7;\n   */\n  I422 = 7,\n\n  /**\n   * @generated from enum value: I444 = 8;\n   */\n  I444 = 8,\n\n  /**\n   * @generated from enum value: I010 = 9;\n   */\n  I010 = 9,\n\n  /**\n   * @generated from enum value: NV12 = 10;\n   */\n  NV12 = 10,\n}\n// Retrieve enum metadata with: proto2.getEnumType(VideoBufferType)\nproto2.util.setEnumType(VideoBufferType, \"livekit.proto.VideoBufferType\", [\n  { no: 0, name: \"RGBA\" },\n  { no: 1, name: \"ABGR\" },\n  { no: 2, name: \"ARGB\" },\n  { no: 3, name: \"BGRA\" },\n  { no: 4, name: \"RGB24\" },\n  { no: 5, name: \"I420\" },\n  { no: 6, name: \"I420A\" },\n  { no: 7, name: \"I422\" },\n  { no: 8, name: \"I444\" },\n  { no: 9, name: \"I010\" },\n  { no: 10, name: \"NV12\" },\n]);\n\n/**\n * @generated from enum livekit.proto.VideoStreamType\n */\nexport enum VideoStreamType {\n  /**\n   * @generated from enum value: VIDEO_STREAM_NATIVE = 0;\n   */\n  VIDEO_STREAM_NATIVE = 0,\n\n  /**\n   * @generated from enum value: VIDEO_STREAM_WEBGL = 1;\n   */\n  VIDEO_STREAM_WEBGL = 1,\n\n  /**\n   * @generated from enum value: VIDEO_STREAM_HTML = 2;\n   */\n  VIDEO_STREAM_HTML = 2,\n}\n// Retrieve enum metadata with: proto2.getEnumType(VideoStreamType)\nproto2.util.setEnumType(VideoStreamType, \"livekit.proto.VideoStreamType\", [\n  { no: 0, name: \"VIDEO_STREAM_NATIVE\" },\n  { no: 1, name: \"VIDEO_STREAM_WEBGL\" },\n  { no: 2, name: \"VIDEO_STREAM_HTML\" },\n]);\n\n/**\n * @generated from enum livekit.proto.VideoSourceType\n */\nexport enum VideoSourceType {\n  /**\n   * @generated from enum value: VIDEO_SOURCE_NATIVE = 0;\n   */\n  VIDEO_SOURCE_NATIVE = 0,\n}\n// Retrieve enum metadata with: proto2.getEnumType(VideoSourceType)\nproto2.util.setEnumType(VideoSourceType, \"livekit.proto.VideoSourceType\", [\n  { no: 0, name: \"VIDEO_SOURCE_NATIVE\" },\n]);\n\n/**\n * Create a new VideoStream\n * VideoStream is used to receive video frames from a track\n *\n * @generated from message livekit.proto.NewVideoStreamRequest\n */\nexport class NewVideoStreamRequest extends Message<NewVideoStreamRequest> {\n  /**\n   * @generated from field: required uint64 track_handle = 1;\n   */\n  trackHandle?: bigint;\n\n  /**\n   * @generated from field: required livekit.proto.VideoStreamType type = 2;\n   */\n  type?: VideoStreamType;\n\n  /**\n   * Get the frame on a specific format\n   *\n   * @generated from field: optional livekit.proto.VideoBufferType format = 3;\n   */\n  format?: VideoBufferType;\n\n  /**\n   * if true, stride will be set to width/chroma_width\n   *\n   * @generated from field: optional bool normalize_stride = 4;\n   */\n  normalizeStride?: boolean;\n\n  constructor(data?: PartialMessage<NewVideoStreamRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.NewVideoStreamRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"track_handle\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"type\", kind: \"enum\", T: proto2.getEnumType(VideoStreamType), req: true },\n    { no: 3, name: \"format\", kind: \"enum\", T: proto2.getEnumType(VideoBufferType), opt: true },\n    { no: 4, name: \"normalize_stride\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NewVideoStreamRequest {\n    return new NewVideoStreamRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NewVideoStreamRequest {\n    return new NewVideoStreamRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NewVideoStreamRequest {\n    return new NewVideoStreamRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: NewVideoStreamRequest | PlainMessage<NewVideoStreamRequest> | undefined, b: NewVideoStreamRequest | PlainMessage<NewVideoStreamRequest> | undefined): boolean {\n    return proto2.util.equals(NewVideoStreamRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.NewVideoStreamResponse\n */\nexport class NewVideoStreamResponse extends Message<NewVideoStreamResponse> {\n  /**\n   * @generated from field: required livekit.proto.OwnedVideoStream stream = 1;\n   */\n  stream?: OwnedVideoStream;\n\n  constructor(data?: PartialMessage<NewVideoStreamResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.NewVideoStreamResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"stream\", kind: \"message\", T: OwnedVideoStream, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NewVideoStreamResponse {\n    return new NewVideoStreamResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NewVideoStreamResponse {\n    return new NewVideoStreamResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NewVideoStreamResponse {\n    return new NewVideoStreamResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: NewVideoStreamResponse | PlainMessage<NewVideoStreamResponse> | undefined, b: NewVideoStreamResponse | PlainMessage<NewVideoStreamResponse> | undefined): boolean {\n    return proto2.util.equals(NewVideoStreamResponse, a, b);\n  }\n}\n\n/**\n * Request a video stream from a participant\n *\n * @generated from message livekit.proto.VideoStreamFromParticipantRequest\n */\nexport class VideoStreamFromParticipantRequest extends Message<VideoStreamFromParticipantRequest> {\n  /**\n   * @generated from field: required uint64 participant_handle = 1;\n   */\n  participantHandle?: bigint;\n\n  /**\n   * @generated from field: required livekit.proto.VideoStreamType type = 2;\n   */\n  type?: VideoStreamType;\n\n  /**\n   * @generated from field: required livekit.proto.TrackSource track_source = 3;\n   */\n  trackSource?: TrackSource;\n\n  /**\n   * @generated from field: optional livekit.proto.VideoBufferType format = 4;\n   */\n  format?: VideoBufferType;\n\n  /**\n   * @generated from field: optional bool normalize_stride = 5;\n   */\n  normalizeStride?: boolean;\n\n  constructor(data?: PartialMessage<VideoStreamFromParticipantRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.VideoStreamFromParticipantRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"participant_handle\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"type\", kind: \"enum\", T: proto2.getEnumType(VideoStreamType), req: true },\n    { no: 3, name: \"track_source\", kind: \"enum\", T: proto2.getEnumType(TrackSource), req: true },\n    { no: 4, name: \"format\", kind: \"enum\", T: proto2.getEnumType(VideoBufferType), opt: true },\n    { no: 5, name: \"normalize_stride\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VideoStreamFromParticipantRequest {\n    return new VideoStreamFromParticipantRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VideoStreamFromParticipantRequest {\n    return new VideoStreamFromParticipantRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VideoStreamFromParticipantRequest {\n    return new VideoStreamFromParticipantRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: VideoStreamFromParticipantRequest | PlainMessage<VideoStreamFromParticipantRequest> | undefined, b: VideoStreamFromParticipantRequest | PlainMessage<VideoStreamFromParticipantRequest> | undefined): boolean {\n    return proto2.util.equals(VideoStreamFromParticipantRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.VideoStreamFromParticipantResponse\n */\nexport class VideoStreamFromParticipantResponse extends Message<VideoStreamFromParticipantResponse> {\n  /**\n   * @generated from field: required livekit.proto.OwnedVideoStream stream = 1;\n   */\n  stream?: OwnedVideoStream;\n\n  constructor(data?: PartialMessage<VideoStreamFromParticipantResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.VideoStreamFromParticipantResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"stream\", kind: \"message\", T: OwnedVideoStream, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VideoStreamFromParticipantResponse {\n    return new VideoStreamFromParticipantResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VideoStreamFromParticipantResponse {\n    return new VideoStreamFromParticipantResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VideoStreamFromParticipantResponse {\n    return new VideoStreamFromParticipantResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: VideoStreamFromParticipantResponse | PlainMessage<VideoStreamFromParticipantResponse> | undefined, b: VideoStreamFromParticipantResponse | PlainMessage<VideoStreamFromParticipantResponse> | undefined): boolean {\n    return proto2.util.equals(VideoStreamFromParticipantResponse, a, b);\n  }\n}\n\n/**\n * Create a new VideoSource\n * VideoSource is used to send video frame to a track\n *\n * @generated from message livekit.proto.NewVideoSourceRequest\n */\nexport class NewVideoSourceRequest extends Message<NewVideoSourceRequest> {\n  /**\n   * @generated from field: required livekit.proto.VideoSourceType type = 1;\n   */\n  type?: VideoSourceType;\n\n  /**\n   * Used to determine which encodings to use + simulcast layers\n   * Most of the time it corresponds to the source resolution \n   *\n   * @generated from field: required livekit.proto.VideoSourceResolution resolution = 2;\n   */\n  resolution?: VideoSourceResolution;\n\n  constructor(data?: PartialMessage<NewVideoSourceRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.NewVideoSourceRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"type\", kind: \"enum\", T: proto2.getEnumType(VideoSourceType), req: true },\n    { no: 2, name: \"resolution\", kind: \"message\", T: VideoSourceResolution, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NewVideoSourceRequest {\n    return new NewVideoSourceRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NewVideoSourceRequest {\n    return new NewVideoSourceRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NewVideoSourceRequest {\n    return new NewVideoSourceRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: NewVideoSourceRequest | PlainMessage<NewVideoSourceRequest> | undefined, b: NewVideoSourceRequest | PlainMessage<NewVideoSourceRequest> | undefined): boolean {\n    return proto2.util.equals(NewVideoSourceRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.NewVideoSourceResponse\n */\nexport class NewVideoSourceResponse extends Message<NewVideoSourceResponse> {\n  /**\n   * @generated from field: required livekit.proto.OwnedVideoSource source = 1;\n   */\n  source?: OwnedVideoSource;\n\n  constructor(data?: PartialMessage<NewVideoSourceResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.NewVideoSourceResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"source\", kind: \"message\", T: OwnedVideoSource, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NewVideoSourceResponse {\n    return new NewVideoSourceResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NewVideoSourceResponse {\n    return new NewVideoSourceResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NewVideoSourceResponse {\n    return new NewVideoSourceResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: NewVideoSourceResponse | PlainMessage<NewVideoSourceResponse> | undefined, b: NewVideoSourceResponse | PlainMessage<NewVideoSourceResponse> | undefined): boolean {\n    return proto2.util.equals(NewVideoSourceResponse, a, b);\n  }\n}\n\n/**\n * Push a frame to a VideoSource\n *\n * @generated from message livekit.proto.CaptureVideoFrameRequest\n */\nexport class CaptureVideoFrameRequest extends Message<CaptureVideoFrameRequest> {\n  /**\n   * @generated from field: required uint64 source_handle = 1;\n   */\n  sourceHandle?: bigint;\n\n  /**\n   * @generated from field: required livekit.proto.VideoBufferInfo buffer = 2;\n   */\n  buffer?: VideoBufferInfo;\n\n  /**\n   * In microseconds\n   *\n   * @generated from field: required int64 timestamp_us = 3;\n   */\n  timestampUs?: bigint;\n\n  /**\n   * @generated from field: required livekit.proto.VideoRotation rotation = 4;\n   */\n  rotation?: VideoRotation;\n\n  constructor(data?: PartialMessage<CaptureVideoFrameRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.CaptureVideoFrameRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"source_handle\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"buffer\", kind: \"message\", T: VideoBufferInfo, req: true },\n    { no: 3, name: \"timestamp_us\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */, req: true },\n    { no: 4, name: \"rotation\", kind: \"enum\", T: proto2.getEnumType(VideoRotation), req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CaptureVideoFrameRequest {\n    return new CaptureVideoFrameRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CaptureVideoFrameRequest {\n    return new CaptureVideoFrameRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CaptureVideoFrameRequest {\n    return new CaptureVideoFrameRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: CaptureVideoFrameRequest | PlainMessage<CaptureVideoFrameRequest> | undefined, b: CaptureVideoFrameRequest | PlainMessage<CaptureVideoFrameRequest> | undefined): boolean {\n    return proto2.util.equals(CaptureVideoFrameRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.CaptureVideoFrameResponse\n */\nexport class CaptureVideoFrameResponse extends Message<CaptureVideoFrameResponse> {\n  constructor(data?: PartialMessage<CaptureVideoFrameResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.CaptureVideoFrameResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CaptureVideoFrameResponse {\n    return new CaptureVideoFrameResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CaptureVideoFrameResponse {\n    return new CaptureVideoFrameResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CaptureVideoFrameResponse {\n    return new CaptureVideoFrameResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: CaptureVideoFrameResponse | PlainMessage<CaptureVideoFrameResponse> | undefined, b: CaptureVideoFrameResponse | PlainMessage<CaptureVideoFrameResponse> | undefined): boolean {\n    return proto2.util.equals(CaptureVideoFrameResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.VideoConvertRequest\n */\nexport class VideoConvertRequest extends Message<VideoConvertRequest> {\n  /**\n   * @generated from field: optional bool flip_y = 1;\n   */\n  flipY?: boolean;\n\n  /**\n   * @generated from field: required livekit.proto.VideoBufferInfo buffer = 2;\n   */\n  buffer?: VideoBufferInfo;\n\n  /**\n   * @generated from field: required livekit.proto.VideoBufferType dst_type = 3;\n   */\n  dstType?: VideoBufferType;\n\n  constructor(data?: PartialMessage<VideoConvertRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.VideoConvertRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"flip_y\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 2, name: \"buffer\", kind: \"message\", T: VideoBufferInfo, req: true },\n    { no: 3, name: \"dst_type\", kind: \"enum\", T: proto2.getEnumType(VideoBufferType), req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VideoConvertRequest {\n    return new VideoConvertRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VideoConvertRequest {\n    return new VideoConvertRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VideoConvertRequest {\n    return new VideoConvertRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: VideoConvertRequest | PlainMessage<VideoConvertRequest> | undefined, b: VideoConvertRequest | PlainMessage<VideoConvertRequest> | undefined): boolean {\n    return proto2.util.equals(VideoConvertRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.VideoConvertResponse\n */\nexport class VideoConvertResponse extends Message<VideoConvertResponse> {\n  /**\n   * @generated from oneof livekit.proto.VideoConvertResponse.message\n   */\n  message: {\n    /**\n     * @generated from field: string error = 1;\n     */\n    value: string;\n    case: \"error\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.OwnedVideoBuffer buffer = 2;\n     */\n    value: OwnedVideoBuffer;\n    case: \"buffer\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  constructor(data?: PartialMessage<VideoConvertResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.VideoConvertResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"error\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, oneof: \"message\" },\n    { no: 2, name: \"buffer\", kind: \"message\", T: OwnedVideoBuffer, oneof: \"message\" },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VideoConvertResponse {\n    return new VideoConvertResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VideoConvertResponse {\n    return new VideoConvertResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VideoConvertResponse {\n    return new VideoConvertResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: VideoConvertResponse | PlainMessage<VideoConvertResponse> | undefined, b: VideoConvertResponse | PlainMessage<VideoConvertResponse> | undefined): boolean {\n    return proto2.util.equals(VideoConvertResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.VideoResolution\n */\nexport class VideoResolution extends Message<VideoResolution> {\n  /**\n   * @generated from field: required uint32 width = 1;\n   */\n  width?: number;\n\n  /**\n   * @generated from field: required uint32 height = 2;\n   */\n  height?: number;\n\n  /**\n   * @generated from field: required double frame_rate = 3;\n   */\n  frameRate?: number;\n\n  constructor(data?: PartialMessage<VideoResolution>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.VideoResolution\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"width\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 2, name: \"height\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 3, name: \"frame_rate\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VideoResolution {\n    return new VideoResolution().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VideoResolution {\n    return new VideoResolution().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VideoResolution {\n    return new VideoResolution().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: VideoResolution | PlainMessage<VideoResolution> | undefined, b: VideoResolution | PlainMessage<VideoResolution> | undefined): boolean {\n    return proto2.util.equals(VideoResolution, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.VideoBufferInfo\n */\nexport class VideoBufferInfo extends Message<VideoBufferInfo> {\n  /**\n   * @generated from field: required livekit.proto.VideoBufferType type = 1;\n   */\n  type?: VideoBufferType;\n\n  /**\n   * @generated from field: required uint32 width = 2;\n   */\n  width?: number;\n\n  /**\n   * @generated from field: required uint32 height = 3;\n   */\n  height?: number;\n\n  /**\n   * @generated from field: required uint64 data_ptr = 4;\n   */\n  dataPtr?: bigint;\n\n  /**\n   * only for packed formats\n   *\n   * @generated from field: optional uint32 stride = 6;\n   */\n  stride?: number;\n\n  /**\n   * @generated from field: repeated livekit.proto.VideoBufferInfo.ComponentInfo components = 7;\n   */\n  components: VideoBufferInfo_ComponentInfo[] = [];\n\n  constructor(data?: PartialMessage<VideoBufferInfo>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.VideoBufferInfo\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"type\", kind: \"enum\", T: proto2.getEnumType(VideoBufferType), req: true },\n    { no: 2, name: \"width\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 3, name: \"height\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 4, name: \"data_ptr\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 6, name: \"stride\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, opt: true },\n    { no: 7, name: \"components\", kind: \"message\", T: VideoBufferInfo_ComponentInfo, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VideoBufferInfo {\n    return new VideoBufferInfo().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VideoBufferInfo {\n    return new VideoBufferInfo().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VideoBufferInfo {\n    return new VideoBufferInfo().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: VideoBufferInfo | PlainMessage<VideoBufferInfo> | undefined, b: VideoBufferInfo | PlainMessage<VideoBufferInfo> | undefined): boolean {\n    return proto2.util.equals(VideoBufferInfo, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.VideoBufferInfo.ComponentInfo\n */\nexport class VideoBufferInfo_ComponentInfo extends Message<VideoBufferInfo_ComponentInfo> {\n  /**\n   * @generated from field: required uint64 data_ptr = 1;\n   */\n  dataPtr?: bigint;\n\n  /**\n   * @generated from field: required uint32 stride = 2;\n   */\n  stride?: number;\n\n  /**\n   * @generated from field: required uint32 size = 3;\n   */\n  size?: number;\n\n  constructor(data?: PartialMessage<VideoBufferInfo_ComponentInfo>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.VideoBufferInfo.ComponentInfo\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"data_ptr\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"stride\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 3, name: \"size\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VideoBufferInfo_ComponentInfo {\n    return new VideoBufferInfo_ComponentInfo().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VideoBufferInfo_ComponentInfo {\n    return new VideoBufferInfo_ComponentInfo().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VideoBufferInfo_ComponentInfo {\n    return new VideoBufferInfo_ComponentInfo().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: VideoBufferInfo_ComponentInfo | PlainMessage<VideoBufferInfo_ComponentInfo> | undefined, b: VideoBufferInfo_ComponentInfo | PlainMessage<VideoBufferInfo_ComponentInfo> | undefined): boolean {\n    return proto2.util.equals(VideoBufferInfo_ComponentInfo, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.OwnedVideoBuffer\n */\nexport class OwnedVideoBuffer extends Message<OwnedVideoBuffer> {\n  /**\n   * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;\n   */\n  handle?: FfiOwnedHandle;\n\n  /**\n   * @generated from field: required livekit.proto.VideoBufferInfo info = 2;\n   */\n  info?: VideoBufferInfo;\n\n  constructor(data?: PartialMessage<OwnedVideoBuffer>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.OwnedVideoBuffer\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"handle\", kind: \"message\", T: FfiOwnedHandle, req: true },\n    { no: 2, name: \"info\", kind: \"message\", T: VideoBufferInfo, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OwnedVideoBuffer {\n    return new OwnedVideoBuffer().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OwnedVideoBuffer {\n    return new OwnedVideoBuffer().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OwnedVideoBuffer {\n    return new OwnedVideoBuffer().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: OwnedVideoBuffer | PlainMessage<OwnedVideoBuffer> | undefined, b: OwnedVideoBuffer | PlainMessage<OwnedVideoBuffer> | undefined): boolean {\n    return proto2.util.equals(OwnedVideoBuffer, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.VideoStreamInfo\n */\nexport class VideoStreamInfo extends Message<VideoStreamInfo> {\n  /**\n   * @generated from field: required livekit.proto.VideoStreamType type = 1;\n   */\n  type?: VideoStreamType;\n\n  constructor(data?: PartialMessage<VideoStreamInfo>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.VideoStreamInfo\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"type\", kind: \"enum\", T: proto2.getEnumType(VideoStreamType), req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VideoStreamInfo {\n    return new VideoStreamInfo().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VideoStreamInfo {\n    return new VideoStreamInfo().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VideoStreamInfo {\n    return new VideoStreamInfo().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: VideoStreamInfo | PlainMessage<VideoStreamInfo> | undefined, b: VideoStreamInfo | PlainMessage<VideoStreamInfo> | undefined): boolean {\n    return proto2.util.equals(VideoStreamInfo, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.OwnedVideoStream\n */\nexport class OwnedVideoStream extends Message<OwnedVideoStream> {\n  /**\n   * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;\n   */\n  handle?: FfiOwnedHandle;\n\n  /**\n   * @generated from field: required livekit.proto.VideoStreamInfo info = 2;\n   */\n  info?: VideoStreamInfo;\n\n  constructor(data?: PartialMessage<OwnedVideoStream>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.OwnedVideoStream\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"handle\", kind: \"message\", T: FfiOwnedHandle, req: true },\n    { no: 2, name: \"info\", kind: \"message\", T: VideoStreamInfo, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OwnedVideoStream {\n    return new OwnedVideoStream().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OwnedVideoStream {\n    return new OwnedVideoStream().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OwnedVideoStream {\n    return new OwnedVideoStream().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: OwnedVideoStream | PlainMessage<OwnedVideoStream> | undefined, b: OwnedVideoStream | PlainMessage<OwnedVideoStream> | undefined): boolean {\n    return proto2.util.equals(OwnedVideoStream, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.VideoStreamEvent\n */\nexport class VideoStreamEvent extends Message<VideoStreamEvent> {\n  /**\n   * @generated from field: required uint64 stream_handle = 1;\n   */\n  streamHandle?: bigint;\n\n  /**\n   * @generated from oneof livekit.proto.VideoStreamEvent.message\n   */\n  message: {\n    /**\n     * @generated from field: livekit.proto.VideoFrameReceived frame_received = 2;\n     */\n    value: VideoFrameReceived;\n    case: \"frameReceived\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.VideoStreamEOS eos = 3;\n     */\n    value: VideoStreamEOS;\n    case: \"eos\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  constructor(data?: PartialMessage<VideoStreamEvent>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.VideoStreamEvent\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"stream_handle\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"frame_received\", kind: \"message\", T: VideoFrameReceived, oneof: \"message\" },\n    { no: 3, name: \"eos\", kind: \"message\", T: VideoStreamEOS, oneof: \"message\" },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VideoStreamEvent {\n    return new VideoStreamEvent().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VideoStreamEvent {\n    return new VideoStreamEvent().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VideoStreamEvent {\n    return new VideoStreamEvent().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: VideoStreamEvent | PlainMessage<VideoStreamEvent> | undefined, b: VideoStreamEvent | PlainMessage<VideoStreamEvent> | undefined): boolean {\n    return proto2.util.equals(VideoStreamEvent, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.VideoFrameReceived\n */\nexport class VideoFrameReceived extends Message<VideoFrameReceived> {\n  /**\n   * @generated from field: required livekit.proto.OwnedVideoBuffer buffer = 1;\n   */\n  buffer?: OwnedVideoBuffer;\n\n  /**\n   * In microseconds\n   *\n   * @generated from field: required int64 timestamp_us = 2;\n   */\n  timestampUs?: bigint;\n\n  /**\n   * @generated from field: required livekit.proto.VideoRotation rotation = 3;\n   */\n  rotation?: VideoRotation;\n\n  constructor(data?: PartialMessage<VideoFrameReceived>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.VideoFrameReceived\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"buffer\", kind: \"message\", T: OwnedVideoBuffer, req: true },\n    { no: 2, name: \"timestamp_us\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */, req: true },\n    { no: 3, name: \"rotation\", kind: \"enum\", T: proto2.getEnumType(VideoRotation), req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VideoFrameReceived {\n    return new VideoFrameReceived().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VideoFrameReceived {\n    return new VideoFrameReceived().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VideoFrameReceived {\n    return new VideoFrameReceived().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: VideoFrameReceived | PlainMessage<VideoFrameReceived> | undefined, b: VideoFrameReceived | PlainMessage<VideoFrameReceived> | undefined): boolean {\n    return proto2.util.equals(VideoFrameReceived, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.VideoStreamEOS\n */\nexport class VideoStreamEOS extends Message<VideoStreamEOS> {\n  constructor(data?: PartialMessage<VideoStreamEOS>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.VideoStreamEOS\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VideoStreamEOS {\n    return new VideoStreamEOS().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VideoStreamEOS {\n    return new VideoStreamEOS().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VideoStreamEOS {\n    return new VideoStreamEOS().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: VideoStreamEOS | PlainMessage<VideoStreamEOS> | undefined, b: VideoStreamEOS | PlainMessage<VideoStreamEOS> | undefined): boolean {\n    return proto2.util.equals(VideoStreamEOS, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.VideoSourceResolution\n */\nexport class VideoSourceResolution extends Message<VideoSourceResolution> {\n  /**\n   * @generated from field: required uint32 width = 1;\n   */\n  width?: number;\n\n  /**\n   * @generated from field: required uint32 height = 2;\n   */\n  height?: number;\n\n  constructor(data?: PartialMessage<VideoSourceResolution>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.VideoSourceResolution\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"width\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 2, name: \"height\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VideoSourceResolution {\n    return new VideoSourceResolution().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VideoSourceResolution {\n    return new VideoSourceResolution().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VideoSourceResolution {\n    return new VideoSourceResolution().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: VideoSourceResolution | PlainMessage<VideoSourceResolution> | undefined, b: VideoSourceResolution | PlainMessage<VideoSourceResolution> | undefined): boolean {\n    return proto2.util.equals(VideoSourceResolution, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.VideoSourceInfo\n */\nexport class VideoSourceInfo extends Message<VideoSourceInfo> {\n  /**\n   * @generated from field: required livekit.proto.VideoSourceType type = 1;\n   */\n  type?: VideoSourceType;\n\n  constructor(data?: PartialMessage<VideoSourceInfo>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.VideoSourceInfo\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"type\", kind: \"enum\", T: proto2.getEnumType(VideoSourceType), req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VideoSourceInfo {\n    return new VideoSourceInfo().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VideoSourceInfo {\n    return new VideoSourceInfo().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VideoSourceInfo {\n    return new VideoSourceInfo().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: VideoSourceInfo | PlainMessage<VideoSourceInfo> | undefined, b: VideoSourceInfo | PlainMessage<VideoSourceInfo> | undefined): boolean {\n    return proto2.util.equals(VideoSourceInfo, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.OwnedVideoSource\n */\nexport class OwnedVideoSource extends Message<OwnedVideoSource> {\n  /**\n   * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;\n   */\n  handle?: FfiOwnedHandle;\n\n  /**\n   * @generated from field: required livekit.proto.VideoSourceInfo info = 2;\n   */\n  info?: VideoSourceInfo;\n\n  constructor(data?: PartialMessage<OwnedVideoSource>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.OwnedVideoSource\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"handle\", kind: \"message\", T: FfiOwnedHandle, req: true },\n    { no: 2, name: \"info\", kind: \"message\", T: VideoSourceInfo, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OwnedVideoSource {\n    return new OwnedVideoSource().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OwnedVideoSource {\n    return new OwnedVideoSource().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OwnedVideoSource {\n    return new OwnedVideoSource().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: OwnedVideoSource | PlainMessage<OwnedVideoSource> | undefined, b: OwnedVideoSource | PlainMessage<OwnedVideoSource> | undefined): boolean {\n    return proto2.util.equals(OwnedVideoSource, a, b);\n  }\n}\n\n"],"mappings":"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","names":["VideoCodec","VideoRotation","VideoBufferType","VideoStreamType","VideoSourceType"]}