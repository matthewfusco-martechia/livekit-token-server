{"version":3,"sources":["../../src/proto/rpc_pb.ts"],"sourcesContent":["// Copyright 2023 LiveKit, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts,import_extension=.js\"\n// @generated from file rpc.proto (package livekit.proto, syntax proto2)\n/* eslint-disable */\n// @ts-nocheck\n\nimport type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from \"@bufbuild/protobuf\";\nimport { Message, proto2 } from \"@bufbuild/protobuf\";\n\n/**\n * @generated from message livekit.proto.RpcError\n */\nexport class RpcError extends Message<RpcError> {\n  /**\n   * @generated from field: required uint32 code = 1;\n   */\n  code?: number;\n\n  /**\n   * @generated from field: required string message = 2;\n   */\n  message?: string;\n\n  /**\n   * @generated from field: optional string data = 3;\n   */\n  data?: string;\n\n  constructor(data?: PartialMessage<RpcError>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.RpcError\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"code\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n    { no: 2, name: \"message\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 3, name: \"data\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RpcError {\n    return new RpcError().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RpcError {\n    return new RpcError().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RpcError {\n    return new RpcError().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RpcError | PlainMessage<RpcError> | undefined, b: RpcError | PlainMessage<RpcError> | undefined): boolean {\n    return proto2.util.equals(RpcError, a, b);\n  }\n}\n\n/**\n * FFI Requests\n *\n * @generated from message livekit.proto.PerformRpcRequest\n */\nexport class PerformRpcRequest extends Message<PerformRpcRequest> {\n  /**\n   * @generated from field: required uint64 local_participant_handle = 1;\n   */\n  localParticipantHandle?: bigint;\n\n  /**\n   * @generated from field: required string destination_identity = 2;\n   */\n  destinationIdentity?: string;\n\n  /**\n   * @generated from field: required string method = 3;\n   */\n  method?: string;\n\n  /**\n   * @generated from field: required string payload = 4;\n   */\n  payload?: string;\n\n  /**\n   * @generated from field: optional uint32 response_timeout_ms = 5;\n   */\n  responseTimeoutMs?: number;\n\n  constructor(data?: PartialMessage<PerformRpcRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.PerformRpcRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"local_participant_handle\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"destination_identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 3, name: \"method\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 4, name: \"payload\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 5, name: \"response_timeout_ms\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PerformRpcRequest {\n    return new PerformRpcRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PerformRpcRequest {\n    return new PerformRpcRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PerformRpcRequest {\n    return new PerformRpcRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: PerformRpcRequest | PlainMessage<PerformRpcRequest> | undefined, b: PerformRpcRequest | PlainMessage<PerformRpcRequest> | undefined): boolean {\n    return proto2.util.equals(PerformRpcRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.RegisterRpcMethodRequest\n */\nexport class RegisterRpcMethodRequest extends Message<RegisterRpcMethodRequest> {\n  /**\n   * @generated from field: required uint64 local_participant_handle = 1;\n   */\n  localParticipantHandle?: bigint;\n\n  /**\n   * @generated from field: required string method = 2;\n   */\n  method?: string;\n\n  constructor(data?: PartialMessage<RegisterRpcMethodRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.RegisterRpcMethodRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"local_participant_handle\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"method\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RegisterRpcMethodRequest {\n    return new RegisterRpcMethodRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RegisterRpcMethodRequest {\n    return new RegisterRpcMethodRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RegisterRpcMethodRequest {\n    return new RegisterRpcMethodRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RegisterRpcMethodRequest | PlainMessage<RegisterRpcMethodRequest> | undefined, b: RegisterRpcMethodRequest | PlainMessage<RegisterRpcMethodRequest> | undefined): boolean {\n    return proto2.util.equals(RegisterRpcMethodRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.UnregisterRpcMethodRequest\n */\nexport class UnregisterRpcMethodRequest extends Message<UnregisterRpcMethodRequest> {\n  /**\n   * @generated from field: required uint64 local_participant_handle = 1;\n   */\n  localParticipantHandle?: bigint;\n\n  /**\n   * @generated from field: required string method = 2;\n   */\n  method?: string;\n\n  constructor(data?: PartialMessage<UnregisterRpcMethodRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.UnregisterRpcMethodRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"local_participant_handle\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"method\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnregisterRpcMethodRequest {\n    return new UnregisterRpcMethodRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnregisterRpcMethodRequest {\n    return new UnregisterRpcMethodRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnregisterRpcMethodRequest {\n    return new UnregisterRpcMethodRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: UnregisterRpcMethodRequest | PlainMessage<UnregisterRpcMethodRequest> | undefined, b: UnregisterRpcMethodRequest | PlainMessage<UnregisterRpcMethodRequest> | undefined): boolean {\n    return proto2.util.equals(UnregisterRpcMethodRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.RpcMethodInvocationResponseRequest\n */\nexport class RpcMethodInvocationResponseRequest extends Message<RpcMethodInvocationResponseRequest> {\n  /**\n   * @generated from field: required uint64 local_participant_handle = 1;\n   */\n  localParticipantHandle?: bigint;\n\n  /**\n   * @generated from field: required uint64 invocation_id = 2;\n   */\n  invocationId?: bigint;\n\n  /**\n   * @generated from field: optional string payload = 3;\n   */\n  payload?: string;\n\n  /**\n   * @generated from field: optional livekit.proto.RpcError error = 4;\n   */\n  error?: RpcError;\n\n  constructor(data?: PartialMessage<RpcMethodInvocationResponseRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.RpcMethodInvocationResponseRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"local_participant_handle\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"invocation_id\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 3, name: \"payload\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 4, name: \"error\", kind: \"message\", T: RpcError, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RpcMethodInvocationResponseRequest {\n    return new RpcMethodInvocationResponseRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RpcMethodInvocationResponseRequest {\n    return new RpcMethodInvocationResponseRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RpcMethodInvocationResponseRequest {\n    return new RpcMethodInvocationResponseRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RpcMethodInvocationResponseRequest | PlainMessage<RpcMethodInvocationResponseRequest> | undefined, b: RpcMethodInvocationResponseRequest | PlainMessage<RpcMethodInvocationResponseRequest> | undefined): boolean {\n    return proto2.util.equals(RpcMethodInvocationResponseRequest, a, b);\n  }\n}\n\n/**\n * FFI Responses\n *\n * @generated from message livekit.proto.PerformRpcResponse\n */\nexport class PerformRpcResponse extends Message<PerformRpcResponse> {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId?: bigint;\n\n  constructor(data?: PartialMessage<PerformRpcResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.PerformRpcResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"async_id\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PerformRpcResponse {\n    return new PerformRpcResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PerformRpcResponse {\n    return new PerformRpcResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PerformRpcResponse {\n    return new PerformRpcResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: PerformRpcResponse | PlainMessage<PerformRpcResponse> | undefined, b: PerformRpcResponse | PlainMessage<PerformRpcResponse> | undefined): boolean {\n    return proto2.util.equals(PerformRpcResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.RegisterRpcMethodResponse\n */\nexport class RegisterRpcMethodResponse extends Message<RegisterRpcMethodResponse> {\n  constructor(data?: PartialMessage<RegisterRpcMethodResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.RegisterRpcMethodResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RegisterRpcMethodResponse {\n    return new RegisterRpcMethodResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RegisterRpcMethodResponse {\n    return new RegisterRpcMethodResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RegisterRpcMethodResponse {\n    return new RegisterRpcMethodResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RegisterRpcMethodResponse | PlainMessage<RegisterRpcMethodResponse> | undefined, b: RegisterRpcMethodResponse | PlainMessage<RegisterRpcMethodResponse> | undefined): boolean {\n    return proto2.util.equals(RegisterRpcMethodResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.UnregisterRpcMethodResponse\n */\nexport class UnregisterRpcMethodResponse extends Message<UnregisterRpcMethodResponse> {\n  constructor(data?: PartialMessage<UnregisterRpcMethodResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.UnregisterRpcMethodResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnregisterRpcMethodResponse {\n    return new UnregisterRpcMethodResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnregisterRpcMethodResponse {\n    return new UnregisterRpcMethodResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnregisterRpcMethodResponse {\n    return new UnregisterRpcMethodResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: UnregisterRpcMethodResponse | PlainMessage<UnregisterRpcMethodResponse> | undefined, b: UnregisterRpcMethodResponse | PlainMessage<UnregisterRpcMethodResponse> | undefined): boolean {\n    return proto2.util.equals(UnregisterRpcMethodResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.RpcMethodInvocationResponseResponse\n */\nexport class RpcMethodInvocationResponseResponse extends Message<RpcMethodInvocationResponseResponse> {\n  /**\n   * @generated from field: optional string error = 1;\n   */\n  error?: string;\n\n  constructor(data?: PartialMessage<RpcMethodInvocationResponseResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.RpcMethodInvocationResponseResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"error\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RpcMethodInvocationResponseResponse {\n    return new RpcMethodInvocationResponseResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RpcMethodInvocationResponseResponse {\n    return new RpcMethodInvocationResponseResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RpcMethodInvocationResponseResponse {\n    return new RpcMethodInvocationResponseResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RpcMethodInvocationResponseResponse | PlainMessage<RpcMethodInvocationResponseResponse> | undefined, b: RpcMethodInvocationResponseResponse | PlainMessage<RpcMethodInvocationResponseResponse> | undefined): boolean {\n    return proto2.util.equals(RpcMethodInvocationResponseResponse, a, b);\n  }\n}\n\n/**\n * FFI Callbacks\n *\n * @generated from message livekit.proto.PerformRpcCallback\n */\nexport class PerformRpcCallback extends Message<PerformRpcCallback> {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId?: bigint;\n\n  /**\n   * @generated from field: optional string payload = 2;\n   */\n  payload?: string;\n\n  /**\n   * @generated from field: optional livekit.proto.RpcError error = 3;\n   */\n  error?: RpcError;\n\n  constructor(data?: PartialMessage<PerformRpcCallback>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.PerformRpcCallback\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"async_id\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"payload\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 3, name: \"error\", kind: \"message\", T: RpcError, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PerformRpcCallback {\n    return new PerformRpcCallback().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PerformRpcCallback {\n    return new PerformRpcCallback().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PerformRpcCallback {\n    return new PerformRpcCallback().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: PerformRpcCallback | PlainMessage<PerformRpcCallback> | undefined, b: PerformRpcCallback | PlainMessage<PerformRpcCallback> | undefined): boolean {\n    return proto2.util.equals(PerformRpcCallback, a, b);\n  }\n}\n\n/**\n * FFI Events\n *\n * @generated from message livekit.proto.RpcMethodInvocationEvent\n */\nexport class RpcMethodInvocationEvent extends Message<RpcMethodInvocationEvent> {\n  /**\n   * @generated from field: required uint64 local_participant_handle = 1;\n   */\n  localParticipantHandle?: bigint;\n\n  /**\n   * @generated from field: required uint64 invocation_id = 2;\n   */\n  invocationId?: bigint;\n\n  /**\n   * @generated from field: required string method = 3;\n   */\n  method?: string;\n\n  /**\n   * @generated from field: required string request_id = 4;\n   */\n  requestId?: string;\n\n  /**\n   * @generated from field: required string caller_identity = 5;\n   */\n  callerIdentity?: string;\n\n  /**\n   * @generated from field: required string payload = 6;\n   */\n  payload?: string;\n\n  /**\n   * @generated from field: required uint32 response_timeout_ms = 7;\n   */\n  responseTimeoutMs?: number;\n\n  constructor(data?: PartialMessage<RpcMethodInvocationEvent>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.RpcMethodInvocationEvent\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"local_participant_handle\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"invocation_id\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 3, name: \"method\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 4, name: \"request_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 5, name: \"caller_identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 6, name: \"payload\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 7, name: \"response_timeout_ms\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RpcMethodInvocationEvent {\n    return new RpcMethodInvocationEvent().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RpcMethodInvocationEvent {\n    return new RpcMethodInvocationEvent().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RpcMethodInvocationEvent {\n    return new RpcMethodInvocationEvent().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RpcMethodInvocationEvent | PlainMessage<RpcMethodInvocationEvent> | undefined, b: RpcMethodInvocationEvent | PlainMessage<RpcMethodInvocationEvent> | undefined): boolean {\n    return proto2.util.equals(RpcMethodInvocationEvent, a, b);\n  }\n}\n\n"],"mappings":"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","names":[]}